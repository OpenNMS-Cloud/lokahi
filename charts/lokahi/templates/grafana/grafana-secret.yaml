{{- if .Values.Grafana.Enabled }}
apiVersion: v1
kind: Secret # Currently stores passwords!
metadata:
  name: {{ .Values.Grafana.ServiceName }}
  labels:
    app: {{ .Values.Grafana.ServiceName }}
  namespace: {{ .Release.Namespace }}
stringData:
  grafana.ini: |
    [database]
    type = postgres
    host = {{ .Values.Grafana.DbHost }}:5432
    name = grafana
    user = grafana
    password = {{ .Values.Citus.GrafanaPassword }}

    [analytics]
    check_for_updates = true

    [grafana_net]
    url = https://grafana.net

    [log]
    mode = console

    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    
    [log]
    level = info

    #################################### SECURITY ####################################
    [security]
    disable_initial_admin_creation = false
    
    admin_user = place_holder_for_k8s_secret
    
    admin_password = place_holder_for_k8s_secret

    #################################### Server ##############################
    [server]

    protocol = http
    
    http_addr =

    #Leave blank
    http_port = 
    
    domain = {{ .Values.Host }}
    
    enforce_domain = false
    
    root_url = {{ .Values.Protocol }}://%(domain)s:{{.Values.Port}}{{ .Values.Grafana.Path}}
    
    serve_from_sub_path = true

    router_logging = false
    
    static_root_path = public
    
    enable_gzip = false
    
    cert_file =
    cert_key =
    
    socket = /tmp/grafana.sock

    cdn_url =
    
    read_timeout = 0

    [auth]
    oauth_auto_login = true
    disable_login_form = true

    #################################### Basic Auth ##########################
    [auth.basic]
    enabled = false

    ########KEYCLOAK############
    
    [auth.generic_oauth]
    enabled = true
    scopes = openid email profile
    name = Oauth
    tls_skip_verify_insecure = true
    allow_sign_up = true
    client_id = grafana
    client_secret = grafana-client-secret
    auth_url = {{ .Values.Protocol }}://{{ .Values.Host }}:{{ .Values.Port }}{{ .Values.Keycloak.Path }}/realms/{{ .Values.Keycloak.RealmName }}/protocol/openid-connect/auth

    # The following point to the service in the cluster.
    token_url = http://{{ .Values.Keycloak.ServiceName }}:{{ .Values.Keycloak.Port }}{{ .Values.Keycloak.Path }}/realms/{{ .Values.Keycloak.RealmName }}/protocol/openid-connect/token
    api_url =   http://{{ .Values.Keycloak.ServiceName }}:{{ .Values.Keycloak.Port }}{{ .Values.Keycloak.Path }}/realms/{{ .Values.Keycloak.RealmName }}/protocol/openid-connect/userinfo

    {{- if .Values.Grafana.autoAssignOrgRole }}
    [users]
    auto_assign_org_role = {{ .Values.Grafana.autoAssignOrgRole }}
    {{- end }}
  default.yml: |
    apiVersion: 1
    
    datasources:
      - name: hs-metrics
        type: prometheus
        access: proxy
        orgId: 1
        url: http://{{ .Values.Cortex.ServiceName }}:{{ .Values.Cortex.Port }}/prometheus
        isDefault: true
        jsonData:
          httpHeaderName1: "X-Scope-OrgID"
        ## <string> json object of data that will be encrypted.
        secureJsonData:
          httpHeaderValue1: "opennms-prime"
        version: 1
        # <bool> allow users to edit datasources from the UI.
        editable: false
      # https://github.com/grafana/tempo/blob/main/example/helm/single-binary-grafana-values.yaml
      - name: Tempo
        type: tempo
        access: proxy
        orgId: 1
        url: http://tempo:3100
        basicAuth: false
        #isDefault: true
        version: 1
        editable: false
        apiVersion: 1
        uid: tempo
      {{- if .Values.Prometheus.Enabled }}
      - name: hs-tenant-metrics
        type: prometheus
        access: proxy
        orgId: 1
        url: http://{{ .Values.Prometheus.ServiceName }}:{{ .Values.Prometheus.Port }}/prometheus
        version: 1
        # <bool> allow users to edit datasources from the UI.
        editable: false
      {{- end }}
  dashboard.yml: |
    apiVersion: 1
    
    providers:
      - name: "Horizon stream"
        orgId: 1
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: false
        options:
          path: "/usr/share/grafana/public/dashboards"
          foldersFromFilesStructure: true
type: Opaque
{{- end }}
