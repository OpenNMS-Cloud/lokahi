name: release

on:
  push:
    branches:
      - '**'

# For now, we have put all steps into a single job, this will allow for just
# one vm to run. We use actions to factor out the functionality. If there is a
# requirement to create additional jobs, maybe to run concurrent jobs, then we
# can split them up later.

jobs:
  tag:
    outputs:
      image-tag: ${{ steps.extract-tag.outputs.image-tag }}
    steps:
    - name: init
      id: extract-tag
      run: |
        
        # In case a workflow, using the self-hosted runner, has failed and
        # the kind cluster is still running.
        kind delete clusters kind
        
        TAG=$(echo ${{ github.event.head_commit.message }} | awk '{ print $2 }')
        
        echo "Head commit message: ${{ github.event.head_commit.message }}"
        echo "Extracted tag: $TAG."
        
        # Validate tag format
        # Format of commit message: RELEASE <tag> - <message>
        # Format of tag (change numbers or dev, but leave everything else): 
        #   v0.0.5-dev
        #   v0.0.5
        if [[ $TAG =~ ^v[0-9]+.[0-9]+.([0-9]+-[a-z]+|[0-9]+)$ ]]
        then
          echo "Valid format, proceed with test."
        else
          echo "Tag format is invalid."
          exit 1
        fi

        echo "release-tag=$TAG" >> $GITHUB_OUTPUT
  build-all:
    needs: tag
    runs-on: ubuntu-latest
    uses: ./.github/workflows/develop.yml
    with:
      image-tag: ${{ needs.tag.outputs.image-tag }}
  release:
    needs: [tag, build-all]
    runs-on: self-hosted
    strategy:
      matrix:
        image: [
          'opennms/horizon-stream-minion',
          'opennms/horizon-stream-minion-gateway',
          'opennms/horizon-stream-core',
          'opennms/horizon-stream-ui',
          'opennms/horizon-stream-keycloak-ui',
          'opennms/horizon-stream-grafana',
          'opennms/horizon-stream-rest-server',
          'opennms/horizon-stream-inventory',
          'opennms/horizon-stream-metrics-processor',
          'opennms/horizon-stream-notifications',
          'opennms/horizon-stream-operator',
        ]
    environment: docker-publish-account
    # Environment that contains the required secrets.
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        # Is required to call actions.

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: publish-image-minion
        run: |
          # Tag and save the image as a file to be published. Both release version and latest.
          docker tag ${{ matrix.image }}:${{ needs.tag.outputs.image-tag }} ${{ matrix.image }}:latest
          docker push ${{ matrix.image }}:latest
