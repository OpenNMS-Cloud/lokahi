apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.openNMS.minionGateway.serviceName }}
  labels:
    ignite-cluster: core
    app: {{ .Values.openNMS.minionGateway.serviceName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.openNMS.minionGateway.serviceName }}
  replicas: {{ .Values.openNMS.minionGateway.replicas }}
  template:
    metadata:
      labels:
        appdomain: opennms
        app: {{ .Values.openNMS.minionGateway.serviceName }}
        ignite-cluster: core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        kubectl.kubernetes.io/default-container: "{{ .Values.openNMS.minionGateway.serviceName }}"
    spec:
      serviceAccountName: {{ .Values.openNMS.minionGateway.serviceName }}-sa
      {{- if .Values.nodeRestrictions.enabled }}
      nodeSelector:
        {{ .Values.nodeRestrictions.key }}: {{ .Values.nodeRestrictions.value }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.nodeRestrictions.key }}"
          operator: "Equal"
          value: {{ .Values.nodeRestrictions.value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "{{ .Values.nodeRestrictions.key }}"
                operator: In
                values:
                - {{ .Values.nodeRestrictions.value }}
      {{- end }}
      volumes:
        - name: minion-gateway-ignite-config-volume
          configMap:
            name: minion-gateway-ignite-config
        - name: ignite-volume
          emptyDir: {}
        - name: spring-boot-app-config-volume
          configMap:
            name: spring-boot-app-config
      containers:
        - name: {{ .Values.openNMS.minionGateway.serviceName }}
          image: {{ include "lokahi.image" (dict "Values" .Values "thisService" .Values.openNMS.minionGateway) | quote }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Djava.net.preferIPv4Stack=true -XX:MaxRAMPercentage=40 -javaagent:agent/opentelemetry-javaagent.jar -agentlib:jdwp=transport=dt_socket,server=y,address=5005,suspend=n,quiet=y -XX:MaxDirectMemorySize=768m"  # FIXME: Permanent debug port, enable only for dev mode
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: minionGatewayUsr
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: minionGatewayPwd
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.openNMS.minionGateway.dbHost }}:5432/{{ .Values.openNMS.minionGateway.dbName }}?currentSchema={{ .Values.openNMS.minionGateway.dbSchemaName }}"
            - name: IGNITE_USE_KUBERNETES
              value: "{{ .Values.openNMS.minionGateway.useKubernetes }}"
            - name: IGNITE_KUBERNETES_SERVICE_NAME
              value: "{{ .Values.openNMS.minionGateway.serviceName }}"
            - name: IGNITE_KUBERNETES_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Values.global.kafkaClient.bootstrapServers }}"
            # Do not put any env variables below this. The lokahi.development.env include should be last
            # in the 'env' section so variables can be overridden with Helm chart values when needed.
            {{- include "lokahi.deployment.env" (dict "Values" .Values "thisService" .Values.openNMS.minionGateway) | nindent 12 }}
          envFrom:
          - configMapRef:
              name: spring-boot-env
          {{- include "lokahi.kafkaSecretFrom" .Values.openNMS.minionGateway | indent 10 }}
          ports:
            - name: http
              containerPort: 8080
            - name: grpc
              containerPort: 8990
            - name: internal-grpc
              containerPort: {{ .Values.openNMS.minionGateway.internalGrpcPort }}
            - name: ig-client
              containerPort: 10800
            - name: ig-discovery
              containerPort: 47500
            - name: ig-spi
              containerPort: 47100
          volumeMounts:
            - name: minion-gateway-ignite-config-volume
              mountPath: "/app/resources/ignite"
            - name: ignite-volume
              mountPath: /ignite
            - name: spring-boot-app-config-volume
              mountPath: "/app/config"
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 150
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 250
          resources:
            limits:
              cpu: "{{ .Values.openNMS.minionGateway.resources.limits.cpu }}"
              memory: "{{ .Values.openNMS.minionGateway.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.openNMS.minionGateway.resources.requests.cpu }}"
              memory: "{{ .Values.openNMS.minionGateway.resources.requests.memory }}"
      {{- if .Values.global.privateRepoEnabled }}
      imagePullSecrets:
        - name: image-credentials
      {{- end }}
