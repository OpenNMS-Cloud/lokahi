apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.Minion.ServiceName }}
  labels:
    app: {{ .Values.OpenNMS.Minion.ServiceName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.OpenNMS.Minion.ServiceName }}
  replicas: {{ .Values.OpenNMS.Minion.Replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.OpenNMS.Minion.ServiceName }}
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/opaque-ports: "{{ .Values.OpenNMS.Core.IgniteClusterPort }},{{ .Values.OpenNMS.Core.IgniteDiscoveryPort }}"
    spec:
      serviceAccountName: {{ .Values.OpenNMS.Minion.ServiceName }}-sa
      {{- if .Values.NodeRestrictions.Enabled }}
      nodeSelector:                                                                                    
        {{ .Values.NodeRestrictions.Key }}: {{ .Values.NodeRestrictions.Value }}                       
      tolerations:
        - effect: "NoSchedule"                                                                         
          key: "{{ .Values.NodeRestrictions.Key }}"                                                    
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }} 
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:                                             
          - weight: 1                                                                                  
            preference:                                                                                
              matchExpressions:                                                                        
              - key: "{{ .Values.NodeRestrictions.Key }}"                                              
                operator: In
                values:                                                                                
                - {{ .Values.NodeRestrictions.Value }}                                                 
      {{- end }}
      volumes:
        - name: minion-config-volume
          configMap:
            name: minion-config 
      initContainers:
      - name: init-sysctl
        image: busybox
        command:
        - sysctl
        - -w
        - net.ipv4.ping_group_range=0 429496729
        securityContext:
          privileged: true
      containers:
        - name: {{ .Values.OpenNMS.Minion.ServiceName }}
          image: {{ .Values.OpenNMS.Minion.Image }}
          imagePullPolicy: {{ .Values.OpenNMS.Minion.ImagePullPolicy }}
          env:
            - name: USE_KUBERNETES
              value: "true"
            - name: KUBERNETES_SERVICE_NAME
              value: "{{ .Values.OpenNMS.Minion.ServiceName }}"
            - name: JAVA_TOOL_OPTIONS
              value: "-agentlib:jdwp=transport=dt_socket,server=y,address=5005,suspend=n,quiet=y" # FIXME: Permanent debug port, enable only for dev mode
            - name: LOCATION
              value: "Default"
            - name: IGNITE_UPDATE_NOTIFIER # Disable Ignite version lookups
              value: "false"
          ports:
            - name: http
              containerPort: {{ .Values.OpenNMS.Minion.Port }}
            - name: snmp-traps
              protocol: UDP
              containerPort: {{ .Values.OpenNMS.Minion.TrapsListenerPort }}
            - name: ssh
              containerPort: {{ .Values.OpenNMS.Minion.SshPort }}
          volumeMounts:
            - name: minion-config-volume
              mountPath: "/opt/karaf/etc/org.opennms.core.ipc.grpc.client.cfg"
              subPath: "grpc-config"
            - name: minion-config-volume
              mountPath: "/opt/karaf/etc/org.opennms.identity.cfg"
              subPath: "opennms-minion-identity"
            - name: minion-config-volume
              mountPath: "/opt/horizon-stream/etc/users.properties"
              subPath: "karafUsers"
              readOnly: true
          resources:
            limits:
              cpu: "{{ .Values.OpenNMS.Minion.Resources.Limits.Cpu }}"
              memory: "{{ .Values.OpenNMS.Minion.Resources.Limits.Memory }}"
            requests:
              cpu: "{{ .Values.OpenNMS.Minion.Resources.Requests.Cpu }}"
              memory: "{{ .Values.OpenNMS.Minion.Resources.Requests.Memory }}"
