apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak
  name: keycloak
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: keycloak
    spec:

      # Trying to debug grafana issue.
      #hostAliases:
      #- ip: "127.0.0.1"
      #  hostnames:
      #  - "localhost"

      # ENV from docker image.
      #.query=localhost.my-keycloak-operator
      #KC_HTTPS_CERTIFICATE_FILE=/mnt/certificates/tls.crt
      #KC_HTTPS_CERTIFICATE_KEY_FILE=/mnt/certificates/tls.key
      #KC_PROXY=passthrough
      #KC_DB_URL_HOST=postgres-db
      #KC_DB_PASSWORD=testpassword
      #KC_HOSTNAME_PORT=443
      #KC_CACHE_STACK=kubernetes
      #KC_DB=postgres
      #KC_DB_USERNAME=keycloak
      #KC_HOSTNAME=localhost
      #KC_HOSTNAME_STRICT_BACKCHANNEL=true
      #KC_CACHE=ispn
      #KC_HEALTH_ENABLED=true
      #KEYCLOAK_ADMIN=admin
      #POSTGRES_DB_PORT_5432_TCP_ADDR=10.96.95.128
      #LOCALHOST_SERVICE_HOST=10.96.86.91
      #LOCALHOST_PORT_8443_TCP_PROTO=tcp
      #KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
      #POSTGRES_DB_PORT_5432_TCP_PROTO=tcp
      #POSTGRES_DB_PORT_5432_TCP_PORT=5432
      #LOCALHOST_SERVICE_PORT=8443
      #LOCALHOST_PORT_8443_TCP=tcp://10.96.86.91:8443
      #LOCALHOST_PORT_8443_TCP_PORT=8443
      #KUBERNETES_PORT=tcp://10.96.0.1:443
      #POSTGRES_DB_SERVICE_HOST=10.96.95.128
      #POSTGRES_DB_PORT=tcp://10.96.95.128:5432
      #POSTGRES_DB_PORT_5432_TCP=tcp://10.96.95.128:5432
      #LOCALHOST_PORT_8443_TCP_ADDR=10.96.86.91
      #KUBERNETES_SERVICE_PORT_HTTPS=443
      #KUBERNETES_PORT_443_TCP_PROTO=tcp
      #KUBERNETES_PORT_443_TCP_PORT=443
      #POSTGRES_DB_SERVICE_PORT=5432
      #LOCALHOST_PORT=tcp://10.96.86.91:8443
      #KUBERNETES_SERVICE_HOST=10.96.0.1
      #KUBERNETES_SERVICE_PORT=443
      #KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
      #TERM=xterm
      #HOME=/

      containers:
      - args:
        #- start
        #- --auto-build
        #- --verbose
        - start-dev
        #- --log-level TRACE
        - --http-relative-path /auth

        # Trying to debug grafana issue.
        #securityContext:
        #  allowPrivilegeEscalation: false
        #  runAsUser: 0
    
        env:
        #- name: KC_HTTP_RELATIVE_PATH
        #  value: /auth
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_CACHE
          value: ispn
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_DB
          value: postgres
        - name: KC_DB_URL_HOST
          value: postgres-db
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: keycloak-db-secret
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: keycloak-db-secret
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              key: username
              name: example-keycloak-initial-admin
              optional: false
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: example-keycloak-initial-admin
              optional: false
        - name: jgroups.dns.query
          value: keycloak.my-keycloak-operator
        - name: KC_HOSTNAME
          value: keycloak
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: /mnt/certificates/tls.crt
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: /mnt/certificates/tls.key
        - name: KC_PROXY
          value: passthrough
        #- name: KC_HOSTNAME_PORT # This tends to break after login, just goes to blank page.
        #  value: "443"
        
        #- name: KC_HTTPS_PORT # Not permitted unless cap_net_binding_service is run in Docker file and 8443 -> 443 change everywhere.
        #  value: "443"
        
        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "true"
        - name: KC_HOSTNAME_STRICT
          value: "false"
        
        #image: quay.io/keycloak/keycloak:18.0.1
        #image: keycloak/keycloak:latest
        #imagePullPolicy: Always
        
        image: keycloak/keycloak:0.0.13
        imagePullPolicy: Never
        
        name: keycloak
        ports:
        - containerPort: 8443
          protocol: TCP
        #- containerPort: 443
        #  protocol: TCP
        - containerPort: 8080
          protocol: TCP

        # TODO: Need to get these working again, failed with custom image.
        #livenessProbe:
        #  exec:
        #    command:
        #    - curl
        #    - --insecure
        #    - --head
        #    - --fail
        #    - --silent
        #    - https://127.0.0.1:8443/health/live
        #  failureThreshold: 150
        #  initialDelaySeconds: 20
        #  periodSeconds: 2
        #  successThreshold: 1
        #  timeoutSeconds: 1
        #readinessProbe:
        #  exec:
        #    command:
        #    - curl
        #    - --insecure
        #    - --head
        #    - --fail
        #    - --silent
        #    - https://127.0.0.1:8443/health/ready
        #  failureThreshold: 250
        #  initialDelaySeconds: 20
        #  periodSeconds: 2
        #  successThreshold: 1
        #  timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
        - mountPath: /mnt/certificates
          name: keycloak-tls-certificates
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: keycloak-tls-certificates
        secret:
          defaultMode: 420
          optional: false
          secretName: example-tls-secret

      #tolerations:
      #- effect: NoExecute
      #  key: node.kubernetes.io/not-ready
      #  operator: Exists
      #  tolerationSeconds: 300
      #- effect: NoExecute
      #  key: node.kubernetes.io/unreachable
      #  operator: Exists
      #  tolerationSeconds: 300
      #volumes:
      #- name: keycloak-tls-certificates
      #  secret:
      #    defaultMode: 420
      #    optional: false
      #    secretName: example-tls-secret
      #- name: kube-api-access-5mglx
      #  projected:
      #    defaultMode: 420
      #    sources:
      #    - serviceAccountToken:
      #        expirationSeconds: 3607
      #        path: token
      #    - configMap:
      #        items:
      #        - key: ca.crt
      #          path: ca.crt
      #        name: kube-root-ca.crt
      #    - downwardAPI:
      #        items:
      #        - fieldRef:
      #            apiVersion: v1
      #            fieldPath: metadata.namespace
      #          path: namespace
