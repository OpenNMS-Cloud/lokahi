name: 'Test components in Kubernetes cluster'
description: 'This implements external integration test for all components. This is done in kubernetes cluster deployed in the runner.'
inputs:
  dir-location:
    description: 'The dir containing the change.'
    required: true
    default: 'none'

runs:
  using: "composite"
  steps:
    - name: Init
      run: |

        echo "For init - placeholder"
        # Confirm versions
        #java --version # JDK 11
        #docker version
        #kubectl -h

      shell: bash

    - name: Create Cluster
      run: |

        # Create cluster
        kind create cluster

        # Confirm cluster created
        kubectl config get-contexts
        kubectl get all

        docker ps
   
      shell: bash

    - name: Import Relevant Images into Cluster
      run: |

        # Check that the image was created.
        docker images
        # Image from the action-feature-core shows up here.

        kubectl get all

        docker ps

        kind load docker-image opennms/horizon-stream-ui:local          
        kind load docker-image opennms/horizon-stream-core:local        
        kind load docker-image opennms/horizon-stream-rest-server:local 

        # List images in kind cluster container.  
        # ISSUE: This produces an error, not required if the '$ kubectl apply
        # -f ...' succeeds below, means image loads were successful.
        #docker exec -it kind-control-plane crictl images ls

        cat dev/kubernetes.kafka.yaml|  sed 's/opennms\/horizon-stream-ui-dev/opennms\/horizon-stream-ui\:local/' > dev/kubernetes.kafka.1.yaml
        cat dev/kubernetes.kafka.1.yaml|  sed 's/opennms\/horizon-stream-api/opennms\/horizon-stream-rest-server\:local/' > dev/kubernetes.kafka.2.yaml
        cat dev/kubernetes.kafka.2.yaml|  sed 's/opennms\/horizon-stream-core/opennms\/horizon-stream-core\:local/' > dev/kubernetes.kafka.3.yaml

        kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/18.0.0/kubernetes/keycloaks.k8s.keycloak.org-v1.yml
        kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/18.0.0/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml
        kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/18.0.0/kubernetes/kubernetes.yml
        # Verify (should get keycloaks and keycloakrealmiiimports)
        kubectl api-resources | grep keycloak

        # Test change
        cat dev/kubernetes.kafka.3.yaml | grep image

        kubectl apply -f dev/kubernetes.kafka.3.yaml

        # Test install - Wait until core is running.
        # TODO: Write a listener for pods completing rather than a timed wait.
        echo "wait for pods to start"
        sleep 120
        kubectl get all

      shell: bash

    - name: Setup & Run Cucumber Tests
      run: |

        # Test
        kubectl get all

        # Setup require port forwards for test.
        kubectl port-forward deployment.apps/my-horizon-stream-ui   30000:3000 &
        kubectl port-forward deployment.apps/my-horizon-stream-api  29090:9090 &
        kubectl port-forward deployment.apps/my-horizon-stream-core 18181:8181 &
        kubectl port-forward deployment.apps/my-horizon-stream-core 18101:8101 &
        kubectl port-forward deployment.apps/my-keycloak            28080:8080 &

        ## Wait for port-forwards to start.
        #sleep 60

        ## Test port-forwards.
        #curl localhost:30000
        #curl localhost:29090
        #curl localhost:18181
        #curl localhost:18101
        #curl localhost:28080
        #
        ## Setup required user and pw.
        #cd tools/
        #ls; pwd; echo "test 1"
        #./KC.login -H localhost:28080 -u user001 -p passw0rd -R opennms
        #echo "test 1"
        #./events.list -H localhost:18181 -t "$(< data/ACCESS_TOKEN.txt)"
        #echo "test 2"
        #./events.publish -H localhost:18181 -t "$(< data/ACCESS_TOKEN.txt)"
        #echo "test 3"
        #./events.list -H localhost:18181 -t "$(< data/ACCESS_TOKEN.txt)"
        #echo "test 4"

        ## Cucumber test
        #cd ../
        #cd ${{ inputs.dir-location }}
        #mvn clean install
        #HORIZON_STREAM_BASE_URL=http://localhost:30000
        #KEYCLOAK_BASE_URL=http://localhost:28080
        #KEYCLOAK_REALM=opennms
        #KEYCLOAK_USERNAME=user001
        #KEYCLOAK_PASSWORD=passw0rd
        #export HORIZON_STREAM_BASE_URL KEYCLOAK_BASE_URL KEYCLOAK_REALM KEYCLOAK_USERNAME KEYCLOAK_PASSWORD
        #PROJECT_VERSION="$(mvn -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive -q org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)"
        #java -jar "external-horizon-stream-it/target/external-horizon-stream-it-${PROJECT_VERSION}.jar"

      shell: bash
