Namespace: opennms-instance
Host: onmshs
Port: 80
TestDeploy: false
OpenNMS:
  Core:
    Path: /core
    ServiceName: opennms-core
    Image: opennms/horizon-stream-core
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    HttpPort: 8181
    SshPort: 8101
    GrpcPort: 8990
    Resources:
      Limits:
        Cpu: "2"
        Memory: 4Gi
      Requests:
        Cpu: "2"
        Memory: 2Gi
  API:
    Path: /api
    ServiceName: opennms-rest-server
    Image: opennms/horizon-stream-rest-server
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 9090
    Resources:
      Limits:
        Cpu: "2"
        Memory: 2Gi
      Requests:
        Cpu: "1"
        Memory: 1Gi
  UI:
    Path: /
    ServiceName: opennms-ui
    Image: opennms/horizon-stream-ui
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 80
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
  Minion:
    ServiceName: opennms-minion
    Image: opennms/minion:29.0.10
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    SshPort: 8201
    SnmpPort: 1162
    SyslogPort: 1514
    Resources:
      Limits:
        Cpu: "1"
        Memory: 2050M
      Requests:
        Cpu: "1"
        Memory: 512Mi
  Notification: 
    ServiceName: opennms-notifications
    Image: opennms/horizon-stream-notification
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 8080
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
Postgres:
  ServiceName: postgres
  Image: postgres
  ImagePullPolicy: IfNotPresent
  Replicas: 1
  AdminPassword: notset
  OpenNMSPassword: notset
  KeycloakPassword: notset
  NotificationPassword: notset
  GrafanaPassword: notset
  VolumeSize: 10Gi
Keycloak:
  Path: /auth
  Image: opennms/horizon-stream-keycloak:latest
  ImagePullPolicy: IfNotPresent
  Port: 8080
  HttpsPort: 8443
  Replicas: 1
  ServiceName: onms-keycloak
  Resources:
    Limits:
      Cpu: "1"
      Memory: 1000Mi
    Requests:
      Cpu: 100m
      Memory: 500Mi
  AdminUsername: admin
  AdminPassword: notset
  UserUsername: user001
  UserPassword: notset
  RealmName: opennms
Grafana:
  Path: /grafana
  Port: 3000
  Replicas: 1
  ServiceName: grafana
  Image: opennms/horizon-stream-grafana
  ImagePullPolicy: IfNotPresent
  InitContainerImage: busybox
  Resources:
    Limits:
      Cpu: 500m
      Memory: 1Gi
    Requests:
      Cpu: 100m
      Memory: 100Mi
Prometheus:
  Enabled: true
  Server:
    ServiceName: prometheus
    Port: 9090
    Image: prom/prometheus
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Resources:
      Limits:
        Cpu: "1"
        Memory: 512Mi
      Requests:
        Cpu: 100m
        Memory: 100Mi
  PushGateway:
    ServiceName: prometheus-pushgateway
    Port: 9091
    Image: prom/pushgateway
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Resources:
      Limits:
        Cpu: "1"
        Memory: 512Mi
      Requests:
        Cpu: 100m
        Memory: 100Mi
MailServer:
  ServiceName: mail-server
  Image: mailhog/mailhog:latest
  ImagePullPolicy: IfNotPresent
  Replicas: 1 
  Port: 8025
  SmtpPort: 1025
  Resources:
    Limits:
      Cpu: 100m
      Memory: 200Mi
    Requests:
      Cpu: 100m
      Memory: 100Mi
Kafka:
  Namespace: kafka
  ServiceName: opennms
  VolumeSize: 10Gi
  URL: opennms-kafka-bootstrap.kafka
NodeRestrictions: # will be applied to every pod in the instance
  Enabled: false
  Key: kubernetes.azure.com/scalesetpriority
  Value: spot
TLS:
  Enabled: true
  Issuer:
    IssuerServer: https://acme-v02.api.letsencrypt.org/directory
    IssuerUserEmail: email@address.com
  Cert:
    Hostname: "*.wildcard.domain.com"
    Name: tls-cert-wildcard
  # Configure according to: https://cert-manager.io/docs/configuration/acme/dns01/
  Solver: |
    cloudDNS:
      project: my-project
      serviceAccountSecretRef:
        name: prod-clouddns-svc-acct-secret
        key: service-account.json
Ingress:
  NginxController:
    HttpPort: 80
    HttpsPort: 443
