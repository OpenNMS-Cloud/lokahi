apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.UI.serviceName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.OpenNMS.UI.serviceName }}
    app.kubernetes.io/name: {{ .Values.OpenNMS.UI.serviceName }}
  annotations:
    autoupdate: "true"
spec:
  replicas: {{ .Values.OpenNMS.UI.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.OpenNMS.UI.serviceName }}
  template:
    metadata:
      labels:
        appdomain: opennms
        app: {{ .Values.OpenNMS.UI.serviceName }}
      annotations:
        kubectl.kubernetes.io/default-container: "{{ .Values.OpenNMS.UI.serviceName }}"
    spec:
      {{- if .Values.NodeRestrictions.Enabled }}
      nodeSelector:                                                                                    
        {{ .Values.NodeRestrictions.Key }}: {{ .Values.NodeRestrictions.Value }}                       
      tolerations:
        - effect: "NoSchedule"                                                                         
          key: "{{ .Values.NodeRestrictions.Key }}"                                                    
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }} 
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:                                             
          - weight: 1                                                                                  
            preference:                                                                                
              matchExpressions:                                                                        
              - key: "{{ .Values.NodeRestrictions.Key }}"                                              
                operator: In
                values:                                                                                
                - {{ .Values.NodeRestrictions.Value }}                                                 
      {{- end }}
      terminationGracePeriodSeconds: 120
      {{- if .Values.OpenNMS.UI.privateRepoEnabled }}
      imagePullSecrets:
        - name: image-credentials
      {{- end }}
      volumes:
        - name: nginx-cache-volume
          emptyDir: {}
      containers:
        - name: {{ .Values.OpenNMS.UI.serviceName }}
          image: {{ include "lokahi.image" (dict "Values" .Values "thisService" .Values.OpenNMS.UI) | quote }}
          imagePullPolicy: {{ .Values.OpenNMS.UI.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.OpenNMS.UI.Port }}
          resources:
            limits:
              cpu: "{{ .Values.OpenNMS.UI.resources.limits.cpu }}"
              memory: "{{ .Values.OpenNMS.UI.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.OpenNMS.UI.resources.requests.cpu }}"
              memory: "{{ .Values.OpenNMS.UI.resources.requests.memory }}"
          {{/*  TODO    livenessProbe:*/}}
          {{/*          readinessProbe:*/}}
          {{/*          startupProbe:*/}}
          volumeMounts:
            - name: nginx-cache-volume
              mountPath: /var/cache/nginx
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 150
          readinessProbe:
            httpGet:
              path: "/healthz"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 250
