apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.MinionGateway.ServiceName }}
  labels:
    ignite-cluster: core
    app: {{ .Values.OpenNMS.MinionGateway.ServiceName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.OpenNMS.MinionGateway.ServiceName }}
  replicas: {{ .Values.OpenNMS.MinionGateway.Replicas }}
  template:
    metadata:
      labels:
        appdomain: opennms
        app: {{ .Values.OpenNMS.MinionGateway.ServiceName }}
        ignite-cluster: core
      annotations:
        # roll the deployment when the Spring boot environment variable configmap changes
        checksum/spring-boot-env-configmap: {{ include (print $.Template.BasePath "/opennms/spring-boot-env-configmap.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: "{{ .Values.OpenNMS.MinionGateway.ServiceName }}"
    spec:
      serviceAccountName: {{ .Values.OpenNMS.Minion.ServiceName }}-sa
      {{- if .Values.NodeRestrictions.Enabled }}
      nodeSelector:
        {{ .Values.NodeRestrictions.Key }}: {{ .Values.NodeRestrictions.Value }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.NodeRestrictions.Key }}"
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "{{ .Values.NodeRestrictions.Key }}"
                operator: In
                values:
                - {{ .Values.NodeRestrictions.Value }}
      {{- end }}
      volumes:
        - name: minion-gateway-ignite-config-volume
          configMap:
            name: minion-gateway-ignite-config
        - name: ignite-volume
          emptyDir: {}
        - name: spring-boot-app-config-volume
          configMap:
            name: spring-boot-app-config
      containers:
        - name: {{ .Values.OpenNMS.MinionGateway.ServiceName }}
          image: {{ .Values.OpenNMS.MinionGateway.Image }}
          imagePullPolicy: {{ .Values.OpenNMS.Minion.ImagePullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:agent/opentelemetry-javaagent.jar -agentlib:jdwp=transport=dt_socket,server=y,address=5005,suspend=n,quiet=y -XX:MaxDirectMemorySize=768m"  # FIXME: Permanent debug port, enable only for dev mode
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: minionGatewayUsr
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: minionGatewayPwd
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.OpenNMS.MinionGateway.DbHost }}:5432/{{ .Values.OpenNMS.MinionGateway.DbName }}?currentSchema={{ .Values.OpenNMS.MinionGateway.DbSchemaName }}"
            - name: IGNITE_USE_KUBERNETES
              value: "{{ .Values.OpenNMS.MinionGateway.UseKubernetes }}"
            - name: IGNITE_KUBERNETES_SERVICE_NAME
              value: "{{ .Values.OpenNMS.MinionGateway.ServiceName }}"
            - name: IGNITE_KUBERNETES_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Values.OpenNMS.global.kafkaClient.bootstrapServers }}"
            - name: IGNITE_UPDATE_NOTIFIER # Disable Ignite version lookups
              value: "false"
            {{- include "deployment.env" .Values.OpenNMS.MinionGateway | nindent 12 }}
          envFrom:
          - configMapRef:
              name: spring-boot-env
          {{- include "kafkaSecretFrom" .Values.OpenNMS.MinionGateway | indent 10 }}
          ports:
            - name: http
              containerPort: {{ .Values.OpenNMS.MinionGateway.Port }}
            - name: grpc
              containerPort: {{ .Values.OpenNMS.MinionGateway.GrpcPort }}
            - name: internal-grpc
              containerPort: {{ .Values.OpenNMS.MinionGateway.InternalGrpcPort }}
            - name: ig-client
              containerPort: {{ .Values.OpenNMS.MinionGateway.IgniteClientPort }}
          volumeMounts:
            - name: minion-gateway-ignite-config-volume
              mountPath: "/app/resources/ignite"
            - name: ignite-volume
              mountPath: /ignite
            - name: spring-boot-app-config-volume
              mountPath: "/app/config"
          resources:
            limits:
              cpu: "{{ .Values.OpenNMS.MinionGateway.Resources.Limits.Cpu }}"
              memory: "{{ .Values.OpenNMS.MinionGateway.Resources.Limits.Memory }}"
            requests:
              cpu: "{{ .Values.OpenNMS.MinionGateway.Resources.Requests.Cpu }}"
              memory: "{{ .Values.OpenNMS.MinionGateway.Resources.Requests.Memory }}"
      {{- if .Values.OpenNMS.MinionGateway.PrivateRepoEnabled }}
      imagePullSecrets:
        - name: image-credentials
      {{- end }}
