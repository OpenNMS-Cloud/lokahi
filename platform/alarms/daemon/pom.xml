<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opennms.horizon.alarms</groupId>
    <artifactId>alarms</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>daemon</artifactId>
  <name>OpenNMS Horizon :: Alarms :: Daemon</name>
  <packaging>bundle</packaging>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.opennms.horizon</groupId>
        <artifactId>horizon-bom</artifactId>
        <version>0.1.0-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.opennms.horizon.alarms</groupId>
      <artifactId>api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.horizon.db</groupId>
      <artifactId>dao-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.swrve</groupId>
      <artifactId>rate-limited-logger</artifactId>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-compiler</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-maven-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jaxb</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core-languages</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-kafka</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-activemq</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-protobuf</artifactId>
      <version>${camel.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Import-Package>
              org.kie.internal.definition.rule,
              *
            </Import-Package>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
      <artifactId>maven-compiler-plugin</artifactId>
      <configuration>
        <annotationProcessorPaths>
          <path>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
          </path>
          <!--                        <path>-->
          <!--                            &lt;!&ndash; Add your SPI implementation. &ndash;&gt;-->
          <!--                            <groupId>no.entur.mapstruct.spi</groupId>-->
          <!--                            <artifactId>protobuf-spi-impl</artifactId>-->
          <!--                            <version>1.23</version>-->
          <!--                            &lt;!&ndash; In real life, this should be a fixed version from a different-->
          <!--                  reactor project and not be part of the same multi-module project. Maven wouldn't-->
          <!--                  be able to consider that in the build-order calculation and might pull in-->
          <!--                  the spi-impl from a previous build (especially tricky in multi-threaded builds).-->
          <!--                  For Eclipse, there would be similar problems, as it can't reference build-->
          <!--                  artifacts of workspace projects in the processor classpath but only jar-files-->
          <!--                  (in this case from the local M2-repo cache). &ndash;&gt;-->
          <!--                        </path>-->
        </annotationProcessorPaths>
        <!--                    <compilerArgs>-->
        <!--                        <arg>-AmapstructSpi.enumPostfixOverrides=no.entur.mapstruct.example.EnumPostfixOverrideProtos=INVALID</arg>-->
        <!--                    </compilerArgs>-->
      </configuration>
    </plugin>
    </plugins>
  </build>
</project>
