name: 'Build and test Minion Gateway'
description: 'This implements unit and built-time integration tests on minion gateway grpc proxy, dir minion-gateway-grpc-proxy.'
inputs:
  dir-location:
    description: 'The dir containing the change.'
    required: true
    default: 'none'
  enable-sonar-scan:
    description: 'Enables code scanning with SonarCloud.'
    required: true
  github-token:
    description: 'GITHUB_TOKEN secret for the workflow so SonarCloud can get PR information. Required if enable-sonar-scan is true.'
    required: false
  sonar-token:
    description: 'SONAR_TOKEN secret to authenticate job with SonarCloud. Required if enable-sonar-scan is true.'
    required: false

runs:
  using: "composite"
  steps:
    - name: Cache SonarCloud packages
      if: ${{ inputs.enable-sonar-scan == 'true' }}
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-${{ runner.arch }}-sonar

#    - name: global data
#      if: ${{ inputs.enable-sonar-scan == 'true' }}
#      run: |
#
#        mvn -Pcoverage verify jib:dockerBuild -Djib.container.creationTime=USE_CURRENT_TIMESTAMP -Dimage=opennms/horizon-stream-minion-gateway-grpc-proxy:local \
#          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY
#
#      shell: bash
#      working-directory: minion-gateway-grpc-proxy
#      env:
#        GITHUB_TOKEN: ${{ inputs.github-token }}
#        SONAR_TOKEN: ${{ inputs.sonar-token }}
#        SONAR_PROJECT_KEY: 'opennms_horizon-stream_minion-gateway-grpc-proxy'

    - name: global data
      if: ${{ inputs.enable-sonar-scan == 'false' }}
      run: |

        mvn verify jib:dockerBuild -Djib.container.creationTime=USE_CURRENT_TIMESTAMP -Dimage=opennms/horizon-stream-minion-gateway-grpc-proxy:local

      working-directory: minion-gateway-grpc-proxy
      shell: bash
