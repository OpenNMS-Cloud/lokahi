<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ This file is part of OpenNMS(R).
  ~
  ~ Copyright (C) 2012-2022 The OpenNMS Group, Inc.
  ~ OpenNMS(R) is Copyright (C) 1999-2022 The OpenNMS Group, Inc.
  ~
  ~ OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.
  ~
  ~ OpenNMS(R) is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published
  ~ by the Free Software Foundation, either version 3 of the License,
  ~ or (at your option) any later version.
  ~
  ~ OpenNMS(R) is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with OpenNMS(R).  If not, see:
  ~      http://www.gnu.org/licenses/
  ~
  ~ For more information contact:
  ~     OpenNMS(R) Licensing <license@opennms.org>
  ~     http://www.opennms.org/
  ~     http://www.opennms.com/
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
           xsi:schemaLocation="
                http://www.osgi.org/xmlns/blueprint/v1.0.0
                https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
                http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
            ">

    <!-- TBD999: duplicated from "datasource" -->
    <cm:property-placeholder id="datasourceProperties" persistent-id="org.opennms.netmgt.distributed.datasource" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="connection.pool.factory" value="org.opennms.core.db.HikariCPConnectionFactory" />
            <cm:property name="connection.pool.idleTimeout" value="600" />
            <cm:property name="connection.pool.loginTimeout" value="3" />
            <cm:property name="connection.pool.minPool" value="50" />
            <cm:property name="connection.pool.maxPool" value="50" />
            <cm:property name="connection.pool.maxSize" value="50" />

            <cm:property name="datasource.adminUrl" value="jdbc:postgresql://localhost:5432/template1" />
            <cm:property name="datasource.adminDatabaseName" value="template1" />
            <cm:property name="datasource.adminUsername" value="postgres" />
            <cm:property name="datasource.adminPassword" value="" />

            <cm:property name="datasource.url" value="jdbc:postgresql://localhost:5432/opennms" />
            <cm:property name="datasource.username" value="opennms" />
            <cm:property name="datasource.password" value="" />
            <cm:property name="datasource.databaseName" value="opennms" />
            <cm:property name="datasource.initialize" value="true" />

            <cm:property name="datasource.driverClass" value="org.postgresql.Driver" />
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="opennmsLiquibaseChangeLogProvider" interface="org.opennms.core.schema.liquibase.OpennmsLiquibaseChangeLogProvider"/>
    <bean id="liquibaseResourceClassLoader" factory-ref="opennmsLiquibaseChangeLogProvider" factory-method="getResourceClassLoader"/>

    <reference id="dataSourceFactory" interface="org.osgi.service.jdbc.DataSourceFactory" />

    <!--                                                                      -->
    <!-- ADMIN datasource - for creating the opennms database and other admin -->
    <!--                                                                      -->

    <!-- No connection pool needed for the Admin datasource - it's use is very limited -->
    <bean id="adminDatasource" factory-ref="dataSourceFactory" factory-method="createDataSource">
        <argument>
            <props>
                <prop key="databaseName" value="${datasource.adminDatabaseName}"/>

                <prop key="user" value="${datasource.adminUsername}"/>
                <prop key="password" value="${datasource.adminPassword}"/>
                <prop key="url" value="${datasource.adminUrl}"/>

                <!--<prop key="osgi.jdbc.driver.class" value="${datasource.driverClass}"/>-->
            </props>
        </argument>
    </bean>

    <!-- RAW datasource - accessible before DB setup + Liquibase executes -->
    <!-- TBD999: Connection pooling - do we use createConnectionPoolDataSource() which does NOT return a javax.sql.DataSource??? -->
    <bean id="earlyDatasource" factory-ref="dataSourceFactory" factory-method="createDataSource">
        <argument>
            <props>
                <prop key="databaseName" value="${datasource.databaseName}"/>

                <prop key="user" value="${datasource.username}"/>
                <prop key="password" value="${datasource.password}"/>
                <prop key="url" value="${datasource.url}"/>

                <!-- TBD999: pool settings -->
                <!--<prop key="osgi.jdbc.driver.class" value="${datasource.driverClass}"/>-->
            </props>
        </argument>
    </bean>


    <!--&lt;!&ndash;                              &ndash;&gt;-->
    <!--&lt;!&ndash; DATABASE SETUP AND MIGRATION &ndash;&gt;-->
    <!--&lt;!&ndash;                              &ndash;&gt;-->
    <!--<reference id="opennmsLiquibaseChangeLogProvider" interface="org.opennms.core.schema.liquibase.OpennmsLiquibaseChangeLogProvider"/>-->
    <!--<bean id="liquibaseResourceClassloader" factory-ref="opennmsLiquibaseChangeLogProvider" factory-method="getResourceClassLoader"/>-->

    <!--<bean id="initialDatabaseSetup" class="org.opennms.netmgt.distributed.datasource.BootTimeDatabaseInit" init-method="init">-->
    <!--    <property name="enabled" value="${datasource.initialize}" />-->
    <!--    <property name="databaseName" value="${datasource.databaseName}" />-->
    <!--    <property name="databaseUsername" value="${datasource.username}" />-->
    <!--    <property name="databasePassword" value="${datasource.password}" />-->

    <!--    <property name="adminDataSourceConfig" ref="adminDataSourceConfig"/>-->
    <!--    <property name="adminDatasource" ref="adminDatasource"/>-->
    <!--</bean>-->
    <!--<bean id="datasourceMigration" class="org.opennms.netmgt.distributed.datasource.BootTimeDatabaseMigration" init-method="init" depends-on="initialDatabaseSetup">-->
    <!--    <property name="enabled" value="${datasource.initialize}" />-->
    <!--    <property name="datasource" ref="datasource" />-->
    <!--    <property name="dataSourceConfig" ref="dataSourceConfig" />-->

    <!--    <property name="adminDataSourceConfig" ref="adminDataSourceConfig"/>-->
    <!--    <property name="adminDatasource" ref="adminDatasource"/>-->

    <!--    <property name="liquibaseResourceClassLoader" ref="liquibaseResourceClassloader"/>-->
    <!--</bean>-->

    <bean id="openNmsDatabasePreHook" class="org.opennms.core.schema.OpenNMSDatabasePrehook">
        <property name="enabled" value="${datasource.initialize}"/>
        <property name="adminDatasource" ref="adminDatasource"/>

        <property name="opennmsAdminDatasourceProperties">
            <props>
                <prop key="databaseName" value="${datasource.adminDatabaseName}"/>

                <prop key="user" value="${datasource.adminUsername}"/>
                <prop key="password" value="${datasource.adminPassword}"/>
                <prop key="url" value="${datasource.adminUrl}"/>
            </props>
        </property>

        <property name="opennmsDatasourceProperties">
            <props>
                <prop key="databaseName" value="${datasource.databaseName}"/>

                <prop key="user" value="${datasource.username}"/>
                <prop key="password" value="${datasource.password}"/>
                <prop key="url" value="${datasource.url}"/>
            </props>
        </property>

        <property name="liquibaseResourceClassLoader" ref="liquibaseResourceClassLoader"/>
    </bean>

    <bean id="preparedDataSourceProvider" class="org.opennms.core.schema.impl.MigratorPreparedDataSourceProviderImpl">
        <property name="earlyDatasource" ref="earlyDatasource"/>
        <property name="prehook" ref="openNmsDatabasePreHook"/>
    </bean>

    <bean id="preparedDataSource" factory-ref="preparedDataSourceProvider" factory-method="retrieve"/>

    <service ref="preparedDataSource" interface="javax.sql.DataSource">
        <service-properties>
            <entry key="osgi.jndi.service.name" value="opennms"/>
        </service-properties>
    </service>

</blueprint>