{{- if .Values.OpenNMS.MinionCertificateManager.Enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.MinionCertificateManager.ServiceName }}
  labels:
    app: {{ .Values.OpenNMS.MinionCertificateManager.ServiceName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.OpenNMS.MinionCertificateManager.ServiceName }}
  strategy:
    type: Recreate
  replicas: {{ .Values.OpenNMS.MinionCertificateManager.Replicas }}
  template:
    metadata:
      labels:
        appdomain: opennms
        app: {{ .Values.OpenNMS.MinionCertificateManager.ServiceName }}
      annotations:
        # roll the deployment when the Spring boot environment variable configmap changes
        checksum/spring-boot-env-configmap: {{ include (print $.Template.BasePath "/opennms/spring-boot-env-configmap.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: "{{ .Values.OpenNMS.MinionCertificateManager.ServiceName }}"
    spec:
      {{- if .Values.NodeRestrictions.Enabled }}
      nodeSelector:                                                                                    
        {{ .Values.NodeRestrictions.Key }}: {{ .Values.NodeRestrictions.Value }}                       
      tolerations:
        - effect: "NoSchedule"                                                                         
          key: "{{ .Values.NodeRestrictions.Key }}"                                                    
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }} 
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:                                             
          - weight: 1                                                                                  
            preference:                                                                                
              matchExpressions:                                                                        
              - key: "{{ .Values.NodeRestrictions.Key }}"                                              
                operator: In
                values:                                                                                
                - {{ .Values.NodeRestrictions.Value }}                                                 
      {{- end }}
      volumes:
        - name: certificate-secrets
          secret:
            secretName: {{ .Values.OpenNMS.MinionCertificateManager.CaSecretName }}
        - name: minion-certificate-manager-secrets
          secret:
            secretName: {{ .Values.OpenNMS.MinionCertificateManager.MtlsSecretName }}
        - name: spring-boot-app-config-volume
          configMap:
            name: spring-boot-app-config
        - name: rocksdb
          persistentVolumeClaim:
            claimName: minion-certificate-manager-pvc
      containers:
        - name: {{ .Values.OpenNMS.MinionCertificateManager.ServiceName }}
          image: {{ .Values.OpenNMS.MinionCertificateManager.Image }}
          imagePullPolicy: {{ .Values.OpenNMS.MinionCertificateManager.ImagePullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:agent/opentelemetry-javaagent.jar -agentlib:jdwp=transport=dt_socket,server=y,address=5005,suspend=n,quiet=y"  # FIXME: Permanent debug port, enable only for dev mode
            - name: KEYCLOAK_BASE_URL
              value: "http://{{ .Values.Keycloak.ServiceName }}:8080/auth/"
            - name: KEYCLOAK_REALM
              value: "{{ .Values.Keycloak.RealmName }}"
            - name: GRPC_SERVER_PORT
              value: "{{ .Values.OpenNMS.MinionCertificateManager.Port }}"
            {{- include "deployment.env" .Values.OpenNMS.MinionCertificateManager | nindent 12 }}
          envFrom:
          - configMapRef:
              name: spring-boot-env
          ports:
            - name: grpc
              containerPort: {{ .Values.OpenNMS.MinionCertificateManager.Port }}
            - name: http
              containerPort: {{ .Values.OpenNMS.MinionCertificateManager.PortHealth }}
          volumeMounts:
            - name: certificate-secrets
              mountPath: "/run/secrets/certificates"
              readOnly: true
            - name: minion-certificate-manager-secrets
              mountPath: "/run/secrets/mtls"
              readOnly: true
            - name: spring-boot-app-config-volume
              mountPath: "/app/config"
            - name: rocksdb
              mountPath: "/app/rocks-db"
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 150
      {{- if .Values.OpenNMS.MinionCertificateManager.PrivateRepoEnabled }}
      imagePullSecrets:
        - name: image-credentials
      {{- end }}

{{- end }}
