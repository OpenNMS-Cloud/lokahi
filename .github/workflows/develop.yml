name: develop

on:
  push:
    branches:
      - '**'
#      - 'develop'
#  pull_request:
#    #types: [ labeled, closed]
#    types: [ labeled ]
#    branches:
#      - 'develop'
  pull_request:
    branches:
      - 'develop'

jobs:
  external-it:
    runs-on: self-hosted
    steps:
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          running-workflow-name: feature-shared-lib
          wait-interval: 10

      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          running-workflow-name: feature-inventory
          wait-interval: 10

      - name: test
        run: echo "Workflow complete!"
        shell: bash

      - name: Create & Setup Cluster
        run: |
          
          # Delete if exists from previous failed run.
          kind delete clusters kind
          
          # Setup localhost DNS
          sudo echo "127.0.0.1 onmshs" | sudo tee -a /etc/hosts
          
          # Build cluster with Horizon Stream installed.
          ./install-local.sh custom-images

        shell: bash

      - name: Setup & Run Cucumber Tests
        run: |          
          kubectl --context kind-kind -n local-instance port-forward --pod-running-timeout 1s services/opennms-core 11080:8181 &
          
          # Core takes some time after ready status true before it is setup and
          # has the minion coming in. 
          sleep 500
          
          mvn clean install
          HORIZON_STREAM_BASE_URL=http://localhost:11080 
          KEYCLOAK_BASE_URL=https://onmshs/auth
          KEYCLOAK_REALM=opennms
          KEYCLOAK_USERNAME=admin
          KEYCLOAK_PASSWORD=admin
          export HORIZON_STREAM_BASE_URL KEYCLOAK_BASE_URL KEYCLOAK_REALM KEYCLOAK_USERNAME KEYCLOAK_PASSWORD
          PROJECT_VERSION="$(mvn -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive -q org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)"
          java -jar "external-horizon-stream-it/target/external-horizon-stream-it-${PROJECT_VERSION}.jar"
          
          ## If fail, exit which kills the ci-cd workflow.
          ##for i in $(jq '.[0].elements[].steps[].result.status' external-it/external-horizon-stream-it/cucumber.reports/cucumber-report.json);do
          ##  if [[ $i != '"passed"' ]];then
          ##    exit;
          ##  fi
          ##done

        shell: bash
        working-directory: external-it

      - name: Cleanup
        run: |
          kind delete clusters kind

        shell: bash
