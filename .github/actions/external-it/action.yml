name: 'Test components in Kubernetes cluster'
description: 'This implements external integration test for all components. This is done in kubernetes cluster deployed in the runner.'
inputs:
  dir-location:
    description: 'The dir containing the change.'
    required: true
    default: 'none'

runs:
  using: "composite"
  steps:
    - name: Init
      run: |

        echo "For init - placeholder"
        # Confirm versions
        #java --version # JDK 11
        #docker version
        #kubectl -h

        # Install dependencies
        #brew install operator-sdk
        #operator-sdk
        #which operator-sdk

      shell: bash

    - name: Create & Setup Cluster
      run: |

        #source ./local-sample/config-run 
        echo "Domain: " $DOMAIN   

        # Setup localhost DNS
        cat /etc/hosts
        sudo echo "127.0.0.1 $DOMAIN" | sudo tee -a /etc/hosts

        #sed -i.bak 's/IMAGE_TAG=latest/IMAGE_TAG=local/g' ./local-sample/config-run
        #sed -i.bak 's/image: opennms\/operator:latest/image: opennms\/operator:local-build/g' charts/opennms-operator/values.yaml
        #./local-sample/run.sh cicd

        # List images in kind cluster container.  
        # ISSUE: This produces an error, not required if the '$ kubectl apply
        # -f ...' succeeds below, means image loads were successful.
        #docker exec -it kind-control-plane crictl images ls

        cd operator/
        ./scripts/deploy-horizon-stream.sh

        # Load image into kind cluster, this step can be removed if we get the
        # kind registry working.
        kind load docker-image opennms/operator:local-build
        kind load docker-image opennms/horizon-stream-core:local& 
        kind load docker-image opennms/horizon-stream-minion:local& 
        kind load docker-image opennms/horizon-stream-minion-gateway:local& 
        kind load docker-image opennms/horizon-stream-keycloak:local& 
        kind load docker-image opennms/horizon-stream-grafana:local& 
        kind load docker-image opennms/horizon-stream-ui:local& 
        kind load docker-image opennms/horizon-stream-notification:local& 
        kind load docker-image opennms/horizon-stream-rest-server:local& 

        # Need to wait for the images to be loaded.
        sleep 120

        # Update the image tags in all the deployments.
        kubectl -n local-instance patch deployments opennms-ui             -p '{"spec": {"template": {"spec":{"containers":[{"name": "opennms-ui",            "image":"opennms/horizon-stream-ui:local"}]}}}}'
        kubectl -n local-instance patch deployments opennms-core           -p '{"spec": {"template": {"spec":{"containers":[{"name": "opennms-core",          "image":"opennms/horizon-stream-core:local"}]}}}}'
        kubectl -n local-instance patch deployments opennms-rest-server    -p '{"spec": {"template": {"spec":{"containers":[{"name": "opennms-rest-server",   "image":"opennms/horizon-stream-rest-server:local"}]}}}}'
        kubectl -n local-instance patch deployments opennms-notifications  -p '{"spec": {"template": {"spec":{"containers":[{"name": "opennms-notifications", "image":"opennms/horizon-stream-rest-server:local"}]}}}}'
        kubectl -n local-instance patch deployments opennms-minion         -p '{"spec": {"template": {"spec":{"containers":[{"name": "opennms-minion",        "image":"opennms/horizon-stream-rest-server:local"}]}}}}'
        kubectl -n local-instance patch deployments opennms-minion-gateway -p '{"spec": {"template": {"spec":{"containers":[{"name": "opennms-minion-gateway","image":"opennms/horizon-stream-rest-server:local"}]}}}}'
        kubectl -n local-instance patch deployments onms-keycloak          -p '{"spec": {"template": {"spec":{"containers":[{"name": "keycloak",              "image":"opennms/horizon-stream-keycloak:local"}]}}}}'
        kubectl -n local-instance patch deployments grafana                -p '{"spec": {"template": {"spec":{"containers":[{"name": "grafana",               "image":"opennms/horizon-stream-grafana:local"}]}}}}'

      shell: bash

    - name: Setup & Run Cucumber Tests
      run: |

        kubectl get pods --all-namespaces

        ### Install dependecies
        ##cd platform/
        ##mvn clean install
        ##cd .. 
        #
        ## Cucumber test
        #cd ${{ inputs.dir-location }}
        #mvn clean install
        #HORIZON_STREAM_BASE_URL=https://onmshs/core
        #KEYCLOAK_BASE_URL=https://onmshs/auth
        #KEYCLOAK_REALM=opennms
        #KEYCLOAK_USERNAME=admin
        #KEYCLOAK_PASSWORD=admin
        #export HORIZON_STREAM_BASE_URL KEYCLOAK_BASE_URL KEYCLOAK_REALM KEYCLOAK_USERNAME KEYCLOAK_PASSWORD
        #PROJECT_VERSION="$(mvn -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive -q org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)"
        #java -jar "external-horizon-stream-it/target/external-horizon-stream-it-${PROJECT_VERSION}.jar"

        ## If fail, exit which kills the ci-cd workflow.
        ##for i in $(jq '.[0].elements[].steps[].result.status' external-it/external-horizon-stream-it/cucumber.reports/cucumber-report.json);do
        ##  if [[ $i != '"passed"' ]];then
        ##    exit;
        ##  fi
        ##done

        kind delete clusters kind

      shell: bash
