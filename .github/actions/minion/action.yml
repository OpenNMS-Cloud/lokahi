name: 'Build and test Minion'
description: 'This implements unit and built-time integration tests on minion, dir minion.'
inputs:
  dir-location:
    description: 'The dir containing the change.'
    required: true
    default: 'none'
  enable-sonar-scan:
    description: 'Enables code scanning with SonarCloud.'
    required: true
  github-token:
    description: 'GITHUB_TOKEN secret for the workflow so SonarCloud can get PR information. Required if enable-sonar-scan is true.'
    required: false
  sonar-token:
    description: 'SONAR_TOKEN secret to authenticate job with SonarCloud. Required if enable-sonar-scan is true.'
    required: false

runs:
  using: "composite"
  environment: docker-publish-account
  steps:
    - name: Cache SonarCloud packages
      if: ${{ inputs.enable-sonar-scan == 'true' }}
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-${{ runner.arch }}-sonar

    - name: dockerhub-login
      run: |

        # This and the following steps are put here rather than put into an
        # action because it is only ever called from this workflow.

        # Login to dockerhub. The session doesn't seem to carry across steps,
        # re-test to confirm.
        #docker login -u ${{ secrets.DOCKERHUB_LOGIN }} -p ${{ secrets.DOCKERHUB_PASS }}
        echo ${{ secrets.DOCKERHUB_PASS }} | docker login -u ${{ secrets.DOCKERHUB_LOGIN }} --password-stdin
      shell: bash

    - name: global data
      if: ${{ inputs.enable-sonar-scan == 'true' }}
      run: |

        mvn -Pcoverage verify -Ddocker.image=opennms/horizon-stream-minion:local -Ddocker.skipPush=true \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY

        docker buildx create --use --driver docker-container --name maven
        docker buildx build --tag opennms/horizon-stream-minion:local-multi-arch docker-assembly/target/docker/opennms/horizon-stream-minion/local/build/ -f docker-assembly/src/main/docker/app/Dockerfile --platform linux/amd64,linux/arm64,linux/arm/v7

        # Test
        docker tag opennms/horizon-stream-minion:local opennms/horizon-stream-minion:test-20230117-1151
        docker push opennms/horizon-stream-minion:test-20230117-1151

      shell: bash
      working-directory: minion
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_PROJECT_KEY: 'opennms_horizon-stream_minion'

    - name: global data
      if: ${{ inputs.enable-sonar-scan == 'false' }}
      run: |

        #mvn verify -DskipTests -Ddocker.image=opennms/horizon-stream-minion:local -Ddocker.skipPush=true
        mvn verify -Ddocker.image=opennms/horizon-stream-minion:local -Ddocker.skipPush=true
        
        # Test release
        docker buildx create --use --driver docker-container --name maven
        #docker buildx build --push --tag opennms/horizon-stream-minion:test-20230112 docker-assembly/target/docker/opennms/horizon-stream-minion/local/build/ -f docker-assembly/src/main/docker/app/Dockerfile --platform linux/amd64,linux/arm64,linux/arm/v7
        docker buildx build --tag opennms/horizon-stream-minion:local-multi-arch docker-assembly/target/docker/opennms/horizon-stream-minion/local/build/ -f docker-assembly/src/main/docker/app/Dockerfile --platform linux/amd64,linux/arm64,linux/arm/v7

        docker images

      working-directory: minion
      shell: bash
