name: feature-core

on:
  push:
    branches:
      - '**'
      - '!develop'
      - '!release'
    paths:
      - 'platform/**'
  workflow_call: {}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: maven

      - name: 'Build Image'
        run: |
          echo "Testing actions - " ${{ inputs.dir-location }}
  
          netstat -ltan
  
          cd ${{ inputs.dir-location }}
          # Keep the input arg of the dir, if the process is the same for each
          # core, rest-server, and ui, we can make this like a generic function.
  
          # IMPORTANT: Check the .circleci/ original build.
  
          # Simple build - no Integration Tests
          #mvn clean install
          # For testing the pipeline, just run this without tests to get the
          # publish working with releasing working correctly. The test takes
          # 5mins roughly.
          # Release on 0.0.0 for now.
  
          # Full build, including docker image creation and Integration Tests
          #mvn -Prun-it clean install
          mvn -Prun-it \
          -Dhttp.keepAlive=false \
          -Dmaven.wagon.http.pool=false \
          -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 \
          -Dmaven.wagon.http.retryHandler.count=3 \
          clean install 
          # Added extra args to deal with time out issue, see
          # https://github.com/actions/virtual-environments/issues/1499.
  
          # How do we trigger the unit tests?
  
          #docker images
          # The image, opennms-horizon-application-it-image, is just for the
          # integration tests, ignore.

      - name: 'SonarCloud Scan'
        uses: ./.github/actions/sonar-scan-maven
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          dir-location: 'platform'
          project-key: 'opennms_horizon-stream_core'
