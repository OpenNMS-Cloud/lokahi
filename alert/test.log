[INFO] Scanning for projects...
[INFO] 
[INFO] -----------< org.opennms.horizon.alertservice:alert-service >-----------
[INFO] Building OpenNMS Horizon Stream :: Alert Service 0.1.0-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[WARNING] The artifact org.hibernate:hibernate-core:jar:6.1.6.Final has been relocated to org.hibernate.orm:hibernate-core:jar:6.1.6.Final
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ alert-service ---
[INFO] Deleting /Users/rellis/horizon-stream-project/alert/target
[INFO] 
[INFO] --- resources:3.3.0:resources (default-resources) @ alert-service ---
[INFO] Copying 7 resources
[INFO] 
[INFO] --- compiler:3.10.1:compile (default-compile) @ alert-service ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 36 source files to /Users/rellis/horizon-stream-project/alert/target/classes
[INFO] 
[INFO] --- resources:3.3.0:testResources (default-testResources) @ alert-service ---
[INFO] Copying 5 resources
[INFO] 
[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ alert-service ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 11 source files to /Users/rellis/horizon-stream-project/alert/target/test-classes
[INFO] /Users/rellis/horizon-stream-project/alert/src/test/java/org/opennms/horizon/alertservice/testcontainers/TestContainerRunnerClassRule.java: /Users/rellis/horizon-stream-project/alert/src/test/java/org/opennms/horizon/alertservice/testcontainers/TestContainerRunnerClassRule.java uses unchecked or unsafe operations.
[INFO] /Users/rellis/horizon-stream-project/alert/src/test/java/org/opennms/horizon/alertservice/testcontainers/TestContainerRunnerClassRule.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- surefire:3.0.0-M7:test (default-test) @ alert-service ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- jar:3.3.0:jar (default-jar) @ alert-service ---
[INFO] Building jar: /Users/rellis/horizon-stream-project/alert/target/alert-service-0.1.0-SNAPSHOT.jar
[INFO] 
[INFO] --- jib:3.3.1:dockerBuild (build-docker-image) @ alert-service ---
[INFO] 
[INFO] Containerizing application to Docker daemon as [36mopennms/horizon-stream-alert[0m...
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> building image to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [1m> launching application layer builders[0m
[INFO] [4A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [4A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [5A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [6A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[                              ] 0.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> building jvm arg files layer[0m
[INFO] [8A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=                             ] 4.0% complete[0m
[INFO] [1m> pulling base image manifest[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=======                       ] 24.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [6A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=======                       ] 24.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> scheduling obtaining base images layers[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=======                       ] 24.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> launching base image layer pullers[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=======                       ] 24.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> checking base image layer sha256:b65bcf19d144...[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=======                       ] 24.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> checking base image layer sha256:b65bcf19d144...[0m
[INFO] [1m> checking base image layer sha256:e504afe67521...[0m
[INFO] [8A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=======                       ] 24.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> checking base image layer sha256:b65bcf19d144...[0m
[INFO] [1m> checking base image layer sha256:e504afe67521...[0m
[INFO] [1m> checking base image layer sha256:1c732984ccf0...[0m
[INFO] [9A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=======                       ] 24.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> checking base image layer sha256:b65bcf19d144...[0m
[INFO] [1m> checking base image layer sha256:e504afe67521...[0m
[INFO] [1m> checking base image layer sha256:1c732984ccf0...[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [10A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[===========                   ] 38.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> checking base image layer sha256:1c732984ccf0...[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=============                 ] 43.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> launching base image layer pullers[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==========                    ] 34.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> checking base image layer sha256:1c732984ccf0...[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [8A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=========                     ] 29.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building resources layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> checking base image layer sha256:b65bcf19d144...[0m
[INFO] [1m> checking base image layer sha256:1c732984ccf0...[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [9A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=============                 ] 43.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [1m> checking base image layer sha256:94b1a9235653...[0m
[INFO] [7A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==============                ] 48.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> building classes layer[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [6A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[================              ] 52.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> building snapshot dependencies layer[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [5A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=================             ] 56.0% complete[0m
[INFO] [1m> building dependencies layer[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [4A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==================            ] 60.0% complete[0m
[INFO] [1m> scheduling building manifests[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==================            ] 60.0% complete[0m
[INFO] [1m> building image format[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] 
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==================            ] 60.0% complete[0m
[INFO] [1m> building image format[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] Container entrypoint set to [java, --add-opens=java.base/java.util=ALL-UNNAMED, --add-opens=java.base/java.lang=ALL-UNNAMED, --add-opens=java.base/java.lang.reflect=ALL-UNNAMED, --add-opens=java.base/java.text=ALL-UNNAMED, --add-opens=java.desktop/java.awt.font=ALL-UNNAMED, -cp, @/app/jib-classpath-file, org.opennms.horizon.alertservice.service.AlertServiceMain]
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==================            ] 60.0% complete[0m
[INFO] [1m> building image format[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[========================      ] 80.0% complete[0m
[INFO] [1m> building image to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[========================      ] 80.0% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[========================      ] 80.1% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[========================      ] 81.6% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=========================     ] 83.3% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[=========================     ] 84.9% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==========================    ] 86.6% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==========================    ] 88.3% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[===========================   ] 89.9% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[===========================   ] 91.6% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[============================  ] 93.3% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[============================  ] 95.0% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[============================= ] 96.6% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[============================= ] 98.3% complete[0m
[INFO] [1m> loading to Docker daemon[0m
[INFO] [3A[0J
[INFO] [2A
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==============================] 100.0% complete[0m
[INFO] [2A[0J
[INFO] [2A
[INFO] 
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==============================] 100.0% complete[0m
[INFO] [2A[0J
[INFO] [2A
[INFO] Built image to Docker daemon as [36mopennms/horizon-stream-alert[0m
[INFO] [1mExecuting tasks:[0m
[INFO] [1m[==============================] 100.0% complete[0m
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.0.1:repackage (default) @ alert-service ---
[INFO] Layout: ZIP
[INFO] Replacing main artifact with repackaged archive
[INFO] 
[INFO] --- failsafe:3.0.0-M7:integration-test (horizon-integration-test) @ alert-service ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.opennms.horizon.alertservice.CucumberRunnerIT
17:13:45,510 |-INFO in ch.qos.logback.classic.LoggerContext[default] - This is logback-classic version 1.4.5
17:13:45,520 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
17:13:45,521 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/Users/rellis/horizon-stream-project/alert/target/test-classes/logback.xml]
17:13:45,557 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [CONSOLE]
17:13:45,557 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
17:13:45,570 |-WARN in ch.qos.logback.core.ConsoleAppender[CONSOLE] - This appender no longer admits a layout as a sub-component, set an encoder instead.
17:13:45,570 |-WARN in ch.qos.logback.core.ConsoleAppender[CONSOLE] - To ensure compatibility, wrapping your layout in LayoutWrappingEncoder.
17:13:45,570 |-WARN in ch.qos.logback.core.ConsoleAppender[CONSOLE] - See also http://logback.qos.ch/codes.html#layoutInsteadOfEncoder for details
17:13:45,570 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting level of logger [com.github.dockerjava] to WARN
17:13:45,571 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting level of logger [org.testcontainers] to INFO
17:13:45,571 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to INFO
17:13:45,571 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [CONSOLE] to Logger[ROOT]
17:13:45,571 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@5669c5fb - End of configuration.
17:13:45,571 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@373ebf74 - Registering current configuration as safe fallback point

2023-03-28 17:13:45.591 [main] INFO  org.testcontainers.utility.ImageNameSubstitutor - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2023-03-28 17:13:45.605 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2023-03-28 17:13:45.846 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2023-03-28 17:13:45.847 [main] INFO  org.testcontainers.DockerClientFactory - Docker host IP address is localhost
2023-03-28 17:13:45.869 [main] INFO  org.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 20.10.22
  API Version: 1.41
  Operating System: Docker Desktop
  Total Memory: 24010 MB
2023-03-28 17:13:45.922 [main] INFO  🐳 [testcontainers/ryuk:0.3.4] - Creating container for image: testcontainers/ryuk:0.3.4
2023-03-28 17:13:46.279 [main] INFO  🐳 [testcontainers/ryuk:0.3.4] - Container testcontainers/ryuk:0.3.4 is starting: 7210dc7731aaab03477c8932d5d9ba5938f7ab395d99a93dde1393753290a69d
2023-03-28 17:13:46.571 [main] INFO  🐳 [testcontainers/ryuk:0.3.4] - Container testcontainers/ryuk:0.3.4 started in PT0.698904S
2023-03-28 17:13:46.577 [main] INFO  org.testcontainers.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2023-03-28 17:13:46.577 [main] INFO  org.testcontainers.DockerClientFactory - Checking the system...
2023-03-28 17:13:46.578 [main] INFO  org.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2023-03-28 17:13:46.619 [main] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - USING TEST DOCKER NETWORK 8d77d4aa91350dff160c9f6f1d35a52a3198069b9a12078fb86f2ff794c8ab30
2023-03-28 17:13:46.908 [main] INFO  🐳 [confluentinc/cp-kafka:7.3.0] - Creating container for image: confluentinc/cp-kafka:7.3.0
2023-03-28 17:13:46.934 [main] INFO  🐳 [confluentinc/cp-kafka:7.3.0] - Container confluentinc/cp-kafka:7.3.0 is starting: fd0909400041d6893961049fcaa66fb9042c039508007274d53b7883ef7e3feb
2023-03-28 17:13:47.203 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: ===> User
2023-03-28 17:13:47.204 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
2023-03-28 17:13:47.205 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: ===> Configuring ...
2023-03-28 17:13:47.653 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,652] INFO Reading configuration from: zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.654 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,653] WARN zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.657 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,656] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.658 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,656] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.658 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,656] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.658 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,656] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.659 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,658] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
2023-03-28 17:13:47.659 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,658] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
2023-03-28 17:13:47.659 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,658] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
2023-03-28 17:13:47.659 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,658] WARN Either no config or no quorum defined in config, running in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
2023-03-28 17:13:47.659 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] INFO Log4j 1.2 jmx support not found; jmx disabled. (org.apache.zookeeper.jmx.ManagedUtil)
2023-03-28 17:13:47.660 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] INFO Reading configuration from: zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.660 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] WARN zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.660 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.660 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.660 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.661 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
2023-03-28 17:13:47.661 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,659] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
2023-03-28 17:13:47.667 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,666] INFO ServerMetrics initialized with provider org.apache.zookeeper.metrics.impl.DefaultMetricsProvider@140c9f39 (org.apache.zookeeper.server.ServerMetrics)
2023-03-28 17:13:47.669 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,669] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
2023-03-28 17:13:47.675 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,674] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.676 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO   ______                  _                                           (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.676 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO  |___  /                 | |                                          (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.676 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO     / /    ___     ___   | | __   ___    ___   _ __     ___   _ __    (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.676 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO    / /    / _ \   / _ \  | |/ /  / _ \  / _ \ | '_ \   / _ \ | '__| (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.677 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO   / /__  | (_) | | (_) | |   <  |  __/ |  __/ | |_) | |  __/ | |     (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.677 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO  /_____|  \___/   \___/  |_|\_\  \___|  \___| | .__/   \___| |_| (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.677 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO                                               | |                      (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.677 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO                                               |_|                      (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.677 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.677 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO Server environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.678 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,675] INFO Server environment:host.name=fd0909400041 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.678 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:java.version=11.0.16.1 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.678 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.678 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.678 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:java.class.path=/usr/bin/../share/java/kafka/jetty-security-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.13.3.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/kafka-streams-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.13.3.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.8.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.79.Final.jar:/usr/bin/..
2023-03-28 17:13:47.679 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: /share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.79.Final.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.79.Final.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/jackson-databind-2.13.3.jar:/us
2023-03-28 17:13:47.679 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: r/bin/../share/java/kafka/commons-lang3-3.12.0.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.13.3.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/connect-json-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/connect-runtime-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/connect-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.13.3.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/jli
2023-03-28 17:13:47.679 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: ne-3.21.0.jar:/usr/bin/../share/java/kafka/scala-library-2.13.8.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/bin/../share/java/kafka/plexus-utils-3.3.0.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/connect-transforms-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/kafka-storage-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/trogdor-7.3.0-ccs.jar:/usr/bin/../share/ja
2023-03-28 17:13:47.680 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: va/kafka/jetty-servlets-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/jose4j-0.7.9.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/connect-mirror-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-tools-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/scala-collection-compat
2023-03-28 17:13:47.681 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: _2.13-2.6.0.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.4.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/kafka-clients-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-raft-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/swagger-annotations-2.2.0.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/netty-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/jackson-core-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-shell-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/reload4j-1.2.19.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.681 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:java.library.path=/usr/java/packages/lib:/lib:/usr/lib:/usr/lib64:/lib64 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.681 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.681 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.681 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.681 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:os.arch=aarch64 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.681 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:os.version=5.15.49-linuxkit (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.682 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:user.name=appuser (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.682 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:user.home=/home/appuser (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:user.dir=/home/appuser (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:os.memory.free=491MB (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO zookeeper.enableEagerACLCheck = false (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO zookeeper.digest.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO zookeeper.closeSessionTxn.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO zookeeper.flushDelay=0 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO zookeeper.maxWriteQueuePollTime=0 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO zookeeper.maxBatchSize=1000 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,676] INFO zookeeper.intBufferStartingSizeBytes = 1024 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.683 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,677] INFO Weighed connection throttling is disabled (org.apache.zookeeper.server.BlueThrottle)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,677] INFO minSessionTimeout set to 6000 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,677] INFO maxSessionTimeout set to 60000 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,678] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,678] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,678] INFO zookeeper.pathStats.slotCapacity = 60 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,678] INFO zookeeper.pathStats.slotDuration = 15 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,678] INFO zookeeper.pathStats.maxDepth = 6 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,678] INFO zookeeper.pathStats.initialDelay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,679] INFO zookeeper.pathStats.delay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,679] INFO zookeeper.pathStats.enabled = false (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,680] INFO The max bytes for all large requests are set to 104857600 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,680] INFO The large request threshold is set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.684 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,680] INFO Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 clientPortListenBacklog -1 datadir /var/lib/zookeeper/log/version-2 snapdir /var/lib/zookeeper/data/version-2 (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.695 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,694] INFO Logging initialized @364ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
2023-03-28 17:13:47.748 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,748] WARN o.e.j.s.ServletContextHandler@5efa40fe{/,null,STOPPED} contextPath ends with /* (org.eclipse.jetty.server.handler.ContextHandler)
2023-03-28 17:13:47.749 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,748] WARN Empty contextPath (org.eclipse.jetty.server.handler.ContextHandler)
2023-03-28 17:13:47.759 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,758] INFO jetty-9.4.48.v20220622; built: 2022-06-21T20:42:25.880Z; git: 6b67c5719d1f4371b33655ff2d047d24e171e49a; jvm 11.0.16.1+1-LTS (org.eclipse.jetty.server.Server)
2023-03-28 17:13:47.776 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,775] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
2023-03-28 17:13:47.776 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,775] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
2023-03-28 17:13:47.777 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,776] INFO node0 Scavenging every 600000ms (org.eclipse.jetty.server.session)
2023-03-28 17:13:47.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,778] WARN ServletContext@o.e.j.s.ServletContextHandler@5efa40fe{/,null,STARTING} has uncovered http methods for path: /* (org.eclipse.jetty.security.SecurityHandler)
2023-03-28 17:13:47.783 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,782] INFO Started o.e.j.s.ServletContextHandler@5efa40fe{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
2023-03-28 17:13:47.792 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,791] INFO Started ServerConnector@3f4faf53{HTTP/1.1, (http/1.1)}{0.0.0.0:8080} (org.eclipse.jetty.server.AbstractConnector)
2023-03-28 17:13:47.792 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,791] INFO Started @462ms (org.eclipse.jetty.server.Server)
2023-03-28 17:13:47.792 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,791] INFO Started AdminServer on address 0.0.0.0, port 8080 and command URL /commands (org.apache.zookeeper.server.admin.JettyAdminServer)
2023-03-28 17:13:47.795 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,794] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
2023-03-28 17:13:47.797 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,795] WARN maxCnxns is not configured, using default value 0. (org.apache.zookeeper.server.ServerCnxnFactory)
2023-03-28 17:13:47.797 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,795] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 16 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
2023-03-28 17:13:47.798 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,796] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
2023-03-28 17:13:47.805 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,804] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
2023-03-28 17:13:47.806 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,804] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
2023-03-28 17:13:47.806 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,805] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
2023-03-28 17:13:47.806 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,805] INFO zookeeper.commitLogCount=500 (org.apache.zookeeper.server.ZKDatabase)
2023-03-28 17:13:47.809 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,809] INFO zookeeper.snapshot.compression.method = CHECKED (org.apache.zookeeper.server.persistence.SnapStream)
2023-03-28 17:13:47.810 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,809] INFO Snapshotting: 0x0 to /var/lib/zookeeper/data/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
2023-03-28 17:13:47.811 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,810] INFO Snapshot loaded in 5 ms, highest zxid is 0x0, digest is 1371985504 (org.apache.zookeeper.server.ZKDatabase)
2023-03-28 17:13:47.811 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,811] INFO Snapshotting: 0x0 to /var/lib/zookeeper/data/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
2023-03-28 17:13:47.811 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,811] INFO Snapshot taken in 1 ms (org.apache.zookeeper.server.ZooKeeperServer)
2023-03-28 17:13:47.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,816] INFO PrepRequestProcessor (sid:0) started, reconfigEnabled=false (org.apache.zookeeper.server.PrepRequestProcessor)
2023-03-28 17:13:47.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,817] INFO zookeeper.request_throttler.shutdownTimeout = 10000 (org.apache.zookeeper.server.RequestThrottler)
2023-03-28 17:13:47.826 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,825] INFO Using checkIntervalMs=60000 maxPerMinute=10000 maxNeverUsedIntervalMs=0 (org.apache.zookeeper.server.ContainerManager)
2023-03-28 17:13:47.827 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:47,826] INFO ZooKeeper audit is disabled. (org.apache.zookeeper.audit.ZKAuditProvider)
2023-03-28 17:13:48.483 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: ===> Running preflight checks ... 
2023-03-28 17:13:48.485 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: ===> Launching ... 
2023-03-28 17:13:48.491 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: ===> Launching kafka ... 
2023-03-28 17:13:48.844 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:48,843] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
2023-03-28 17:13:49.035 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,034] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
2023-03-28 17:13:49.077 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,076] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
2023-03-28 17:13:49.078 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,077] INFO starting (kafka.server.KafkaServer)
2023-03-28 17:13:49.078 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,078] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
2023-03-28 17:13:49.086 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,085] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
2023-03-28 17:13:49.088 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,087] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.088 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,087] INFO Client environment:host.name=fd0909400041 (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.088 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,087] INFO Client environment:java.version=11.0.16.1 (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.088 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,087] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.088 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,087] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.089 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,087] INFO Client environment:java.class.path=/usr/bin/../share/java/kafka/jetty-security-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.13.3.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/kafka-streams-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.13.3.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.8.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.79.Final.jar:/usr/bin/..
2023-03-28 17:13:49.089 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: /share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.79.Final.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.79.Final.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/jackson-databind-2.13.3.jar:/us
2023-03-28 17:13:49.089 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: r/bin/../share/java/kafka/commons-lang3-3.12.0.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.13.3.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/connect-json-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/connect-runtime-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/connect-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.13.3.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/jli
2023-03-28 17:13:49.090 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: ne-3.21.0.jar:/usr/bin/../share/java/kafka/scala-library-2.13.8.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/bin/../share/java/kafka/plexus-utils-3.3.0.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/connect-transforms-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/kafka-storage-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/trogdor-7.3.0-ccs.jar:/usr/bin/../share/ja
2023-03-28 17:13:49.090 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: va/kafka/jetty-servlets-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/jose4j-0.7.9.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/connect-mirror-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-tools-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/scala-collection-compat
2023-03-28 17:13:49.090 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: _2.13-2.6.0.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.4.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/kafka-clients-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-raft-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/swagger-annotations-2.2.0.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/netty-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/jackson-core-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-shell-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/reload4j-1.2.19.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,087] INFO Client environment:java.library.path=/usr/java/packages/lib:/lib:/usr/lib:/usr/lib64:/lib64 (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:os.arch=aarch64 (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:os.version=5.15.49-linuxkit (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.092 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.093 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:os.memory.free=1007MB (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.093 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.093 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,088] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.093 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,089] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@cd1d761 (org.apache.zookeeper.ZooKeeper)
2023-03-28 17:13:49.093 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,091] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
2023-03-28 17:13:49.095 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,094] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
2023-03-28 17:13:49.098 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,097] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
2023-03-28 17:13:49.099 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,098] INFO Opening socket connection to server localhost/127.0.0.1:2181. (org.apache.zookeeper.ClientCnxn)
2023-03-28 17:13:49.104 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,103] INFO Socket connection established, initiating session, client: /127.0.0.1:51140, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
2023-03-28 17:13:49.113 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,112] INFO Creating new log file: log.1 (org.apache.zookeeper.server.persistence.FileTxnLog)
2023-03-28 17:13:49.122 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,121] INFO Session establishment complete on server localhost/127.0.0.1:2181, session id = 0x100002585f30000, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
2023-03-28 17:13:49.124 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,123] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
2023-03-28 17:13:49.285 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,284] INFO Cluster ID = 7CYNflq7R5eVnr4eO4stxg (kafka.server.KafkaServer)
2023-03-28 17:13:49.286 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,286] WARN No meta.properties file under dir /var/lib/kafka/data/meta.properties (kafka.server.BrokerMetadataCheckpoint)
2023-03-28 17:13:49.312 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,310] INFO KafkaConfig values: 
2023-03-28 17:13:49.312 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	advertised.listeners = BROKER://tc-iwku93D6:9092
2023-03-28 17:13:49.312 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	alter.config.policy.class.name = null
2023-03-28 17:13:49.312 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	alter.log.dirs.replication.quota.window.num = 11
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	alter.log.dirs.replication.quota.window.size.seconds = 1
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	authorizer.class.name = 
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	auto.create.topics.enable = true
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	auto.leader.rebalance.enable = true
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	background.threads = 10
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.heartbeat.interval.ms = 2000
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.id = 1
2023-03-28 17:13:49.313 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.id.generation.enable = true
2023-03-28 17:13:49.316 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.rack = null
2023-03-28 17:13:49.316 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.session.timeout.ms = 9000
2023-03-28 17:13:49.316 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	client.quota.callback.class = null
2023-03-28 17:13:49.316 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	compression.type = producer
2023-03-28 17:13:49.316 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	connection.failed.authentication.delay.ms = 100
2023-03-28 17:13:49.316 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	connections.max.idle.ms = 600000
2023-03-28 17:13:49.316 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	connections.max.reauth.ms = 0
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	control.plane.listener.name = null
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controlled.shutdown.enable = true
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controlled.shutdown.max.retries = 3
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controlled.shutdown.retry.backoff.ms = 5000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.listener.names = null
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.append.linger.ms = 25
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.election.backoff.max.ms = 1000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.election.timeout.ms = 1000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.fetch.timeout.ms = 2000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.request.timeout.ms = 2000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.retry.backoff.ms = 20
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.voters = []
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quota.window.num = 11
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quota.window.size.seconds = 1
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.socket.timeout.ms = 30000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	create.topic.policy.class.name = null
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	default.replication.factor = 1
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.expiry.check.interval.ms = 3600000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.expiry.time.ms = 86400000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.master.key = null
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.max.lifetime.ms = 604800000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.secret.key = null
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delete.records.purgatory.purge.interval.requests = 1
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delete.topic.enable = true
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	early.start.listeners = null
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	fetch.max.bytes = 57671680
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	fetch.purgatory.purge.interval.requests = 1000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.initial.rebalance.delay.ms = 0
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.max.session.timeout.ms = 1800000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.max.size = 2147483647
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.min.session.timeout.ms = 6000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	initial.broker.registration.timeout.ms = 60000
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	inter.broker.listener.name = BROKER
2023-03-28 17:13:49.317 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	inter.broker.protocol.version = 3.3-IV3
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	kafka.metrics.polling.interval.secs = 10
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	kafka.metrics.reporters = []
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	leader.imbalance.check.interval.seconds = 300
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	leader.imbalance.per.broker.percentage = 10
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	listener.security.protocol.map = BROKER:PLAINTEXT,PLAINTEXT:PLAINTEXT
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	listeners = PLAINTEXT://0.0.0.0:9093,BROKER://0.0.0.0:9092
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.backoff.ms = 15000
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.dedupe.buffer.size = 134217728
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.delete.retention.ms = 86400000
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.enable = true
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.io.buffer.load.factor = 0.9
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.io.buffer.size = 524288
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.max.compaction.lag.ms = 9223372036854775807
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.min.cleanable.ratio = 0.5
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.min.compaction.lag.ms = 0
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.threads = 1
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleanup.policy = [delete]
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.dir = /tmp/kafka-logs
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.dirs = /var/lib/kafka/data
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.interval.messages = 9223372036854775807
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.interval.ms = null
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.offset.checkpoint.interval.ms = 60000
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.scheduler.interval.ms = 9223372036854775807
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.start.offset.checkpoint.interval.ms = 60000
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.index.interval.bytes = 4096
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.index.size.max.bytes = 10485760
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.downconversion.enable = true
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.format.version = 3.0-IV1
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.timestamp.difference.max.ms = 9223372036854775807
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.timestamp.type = CreateTime
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.preallocate = false
2023-03-28 17:13:49.318 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.bytes = -1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.check.interval.ms = 300000
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.hours = 168
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.minutes = null
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.ms = null
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.hours = 168
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.jitter.hours = 0
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.jitter.ms = null
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.ms = null
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.segment.bytes = 1073741824
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.segment.delete.delay.ms = 60000
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connection.creation.rate = 2147483647
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connections = 2147483647
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connections.per.ip = 2147483647
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connections.per.ip.overrides = 
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.incremental.fetch.session.cache.slots = 1000
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	message.max.bytes = 1048588
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.dir = null
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.max.record.bytes.between.snapshots = 20971520
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.segment.bytes = 1073741824
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.segment.min.bytes = 8388608
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.segment.ms = 604800000
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.max.idle.interval.ms = 500
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.max.retention.bytes = -1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.max.retention.ms = 604800000
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metric.reporters = []
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metrics.num.samples = 2
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metrics.recording.level = INFO
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metrics.sample.window.ms = 30000
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	min.insync.replicas = 1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	node.id = 1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.io.threads = 8
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.network.threads = 3
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.partitions = 1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.recovery.threads.per.data.dir = 1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.replica.alter.log.dirs.threads = null
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.replica.fetchers = 1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offset.metadata.max.bytes = 4096
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.commit.required.acks = -1
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.commit.timeout.ms = 5000
2023-03-28 17:13:49.319 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.load.buffer.size = 5242880
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.retention.check.interval.ms = 600000
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.retention.minutes = 10080
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.compression.codec = 0
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.num.partitions = 1
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.replication.factor = 1
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.segment.bytes = 104857600
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.iterations = 4096
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.key.length = 128
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.keyfactory.algorithm = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.old.secret = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.secret = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	process.roles = []
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	producer.purgatory.purge.interval.requests = 1000
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	queued.max.request.bytes = -1
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	queued.max.requests = 500
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	quota.window.num = 11
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	quota.window.size.seconds = 1
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.index.file.cache.total.size.bytes = 1073741824
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.interval.ms = 30000
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.retry.backoff.max.ms = 30000
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.retry.backoff.ms = 500
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.retry.jitter = 0.2
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.thread.pool.size = 10
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.class.name = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.class.path = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.impl.prefix = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.listener.name = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.reader.max.pending.tasks = 100
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.reader.threads = 10
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.manager.class.name = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.manager.class.path = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.manager.impl.prefix = null
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.system.enable = false
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.backoff.ms = 1000
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.max.bytes = 1048576
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.min.bytes = 1
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.response.max.bytes = 10485760
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.wait.max.ms = 500
2023-03-28 17:13:49.320 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.high.watermark.checkpoint.interval.ms = 5000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.lag.time.max.ms = 30000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.selector.class = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.socket.receive.buffer.bytes = 65536
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.socket.timeout.ms = 30000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replication.quota.window.num = 11
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replication.quota.window.size.seconds = 1
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	request.timeout.ms = 30000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	reserved.broker.max.id = 1000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.client.callback.handler.class = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.enabled.mechanisms = [GSSAPI]
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.jaas.config = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.min.time.before.relogin = 60000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.principal.to.local.rules = [DEFAULT]
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.service.name = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.ticket.renew.jitter = 0.05
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.ticket.renew.window.factor = 0.8
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.callback.handler.class = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.class = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.connect.timeout.ms = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.read.timeout.ms = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.buffer.seconds = 300
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.min.period.seconds = 60
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.window.factor = 0.8
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.window.jitter = 0.05
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.retry.backoff.max.ms = 10000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.retry.backoff.ms = 100
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.mechanism.controller.protocol = GSSAPI
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.mechanism.inter.broker.protocol = GSSAPI
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.clock.skew.seconds = 30
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.expected.audience = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.expected.issuer = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.url = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.scope.claim.name = scope
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.sub.claim.name = sub
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.token.endpoint.url = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.server.callback.handler.class = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.server.max.receive.size = 524288
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	security.inter.broker.protocol = PLAINTEXT
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	security.providers = null
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.connection.setup.timeout.max.ms = 30000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.connection.setup.timeout.ms = 10000
2023-03-28 17:13:49.321 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.listen.backlog.size = 50
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.receive.buffer.bytes = 102400
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.request.max.bytes = 104857600
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.send.buffer.bytes = 102400
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.cipher.suites = []
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.client.auth = none
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.endpoint.identification.algorithm = https
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.engine.factory.class = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.key.password = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keymanager.algorithm = SunX509
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.certificate.chain = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.key = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.location = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.password = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.type = JKS
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.principal.mapping.rules = DEFAULT
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.protocol = TLSv1.3
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.provider = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.secure.random.implementation = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.trustmanager.algorithm = PKIX
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.certificates = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.location = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.password = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.type = JKS
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.max.timeout.ms = 900000
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.load.buffer.size = 5242880
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.min.isr = 1
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.num.partitions = 50
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.replication.factor = 1
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.segment.bytes = 104857600
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transactional.id.expiration.ms = 604800000
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	unclean.leader.election.enable = false
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.clientCnxnSocket = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.connect = localhost:2181
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.connection.timeout.ms
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT:  = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.max.in.flight.requests = 10
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.session.timeout.ms = 18000
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.set.acl = false
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.cipher.suites = null
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.client.enable = false
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.crl.enable = false
2023-03-28 17:13:49.322 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.enabled.protocols = null
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.keystore.location = null
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.keystore.password = null
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.keystore.type = null
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.ocsp.enable = false
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.protocol = TLSv1.2
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.truststore.location = null
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.truststore.password = null
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.truststore.type = null
2023-03-28 17:13:49.323 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT:  (kafka.server.KafkaConfig)
2023-03-28 17:13:49.336 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,335] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
2023-03-28 17:13:49.336 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,335] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
2023-03-28 17:13:49.337 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,336] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
2023-03-28 17:13:49.338 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,337] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
2023-03-28 17:13:49.361 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,360] INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data) (kafka.log.LogManager)
2023-03-28 17:13:49.362 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,362] INFO Attempting recovery for all logs in /var/lib/kafka/data since no clean shutdown file was found (kafka.log.LogManager)
2023-03-28 17:13:49.370 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,369] INFO Loaded 0 logs in 9ms. (kafka.log.LogManager)
2023-03-28 17:13:49.370 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,369] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
2023-03-28 17:13:49.371 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,371] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
2023-03-28 17:13:49.389 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,388] INFO Starting the log cleaner (kafka.log.LogCleaner)
2023-03-28 17:13:49.513 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,513] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner)
2023-03-28 17:13:49.524 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,524] INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
2023-03-28 17:13:49.531 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,530] INFO Feature ZK node at path: /feature does not exist (kafka.server.FinalizedFeatureChangeListener)
2023-03-28 17:13:49.547 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,546] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
2023-03-28 17:13:49.769 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,768] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
2023-03-28 17:13:49.772 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,772] INFO Awaiting socket connections on 0.0.0.0:9093. (kafka.network.DataPlaneAcceptor)
2023-03-28 17:13:49.788 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,787] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
2023-03-28 17:13:49.789 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,787] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
2023-03-28 17:13:49.790 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,788] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.DataPlaneAcceptor)
2023-03-28 17:13:49.795 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,794] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(BROKER) (kafka.network.SocketServer)
2023-03-28 17:13:49.799 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,798] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Starting (kafka.server.BrokerToControllerRequestThread)
2023-03-28 17:13:49.812 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,811] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.813 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,812] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.814 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,813] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.815 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,814] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.825 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,824] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
2023-03-28 17:13:49.838 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,838] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.zk.KafkaZkClient)
2023-03-28 17:13:49.851 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,850] INFO Stat of the created znode at /brokers/ids/1 is: 25,25,1680020029845,1680020029845,1,0,0,72057755199012864,200,0,25
2023-03-28 17:13:49.851 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT:  (kafka.zk.KafkaZkClient)
2023-03-28 17:13:49.851 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,850] INFO Registered broker 1 at path /brokers/ids/1 with addresses: BROKER://tc-iwku93D6:9092, czxid (broker epoch): 25 (kafka.zk.KafkaZkClient)
2023-03-28 17:13:49.872 [main] INFO  🐳 [confluentinc/cp-kafka:7.3.0] - Container confluentinc/cp-kafka:7.3.0 started in PT2.964435S
2023-03-28 17:13:49.889 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,888] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
2023-03-28 17:13:49.895 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,894] INFO [ExpirationReaper-1-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.912 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,901] INFO Successfully created /controller_epoch with initial epoch 0 (kafka.zk.KafkaZkClient)
2023-03-28 17:13:49.913 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,912] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.917 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,916] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.921 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,921] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
2023-03-28 17:13:49.924 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,923] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
2023-03-28 17:13:49.929 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,928] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:13:49.930 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,929] INFO Feature ZK node created at path: /feature (kafka.server.FinalizedFeatureChangeListener)
2023-03-28 17:13:49.932 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,932] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:13:49.944 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,943] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
2023-03-28 17:13:49.947 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,946] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
2023-03-28 17:13:49.947 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,946] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
2023-03-28 17:13:49.948 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,947] INFO [MetadataCache brokerId=1] Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Map(), epoch=0). (kafka.server.metadata.ZkMetadataCache)
2023-03-28 17:13:49.948 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,947] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
2023-03-28 17:13:49.951 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,950] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
2023-03-28 17:13:49.953 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,952] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
2023-03-28 17:13:49.955 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,954] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
2023-03-28 17:13:49.964 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,963] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 25) (kafka.controller.KafkaController)
2023-03-28 17:13:49.968 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,967] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
2023-03-28 17:13:49.972 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,971] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
2023-03-28 17:13:49.976 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,976] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
2023-03-28 17:13:49.978 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,977] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
2023-03-28 17:13:49.978 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,978] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
2023-03-28 17:13:49.979 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,978] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
2023-03-28 17:13:49.979 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,978] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
2023-03-28 17:13:49.979 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,978] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
2023-03-28 17:13:49.981 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,980] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
2023-03-28 17:13:49.981 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,981] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
2023-03-28 17:13:49.981 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,981] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
2023-03-28 17:13:49.981 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,981] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
2023-03-28 17:13:49.982 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,982] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
2023-03-28 17:13:49.993 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:49,983] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
2023-03-28 17:13:50.001 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,000] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
2023-03-28 17:13:50.001 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,001] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
2023-03-28 17:13:50.004 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,004] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
2023-03-28 17:13:50.005 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,004] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
2023-03-28 17:13:50.006 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,005] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
2023-03-28 17:13:50.006 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,005] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
2023-03-28 17:13:50.008 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,007] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
2023-03-28 17:13:50.008 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,007] INFO [RequestSendThread controllerId=1] Controller 1 connected to tc-iwku93D6:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
2023-03-28 17:13:50.008 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,008] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
2023-03-28 17:13:50.016 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,014] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
2023-03-28 17:13:50.016 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,016] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
2023-03-28 17:13:50.016 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,016] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
2023-03-28 17:13:50.016 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,016] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
2023-03-28 17:13:50.017 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,016] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
2023-03-28 17:13:50.018 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,017] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
2023-03-28 17:13:50.035 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,034] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
2023-03-28 17:13:50.041 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,040] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
2023-03-28 17:13:50.051 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,050] INFO Kafka version: 7.3.0-ccs (org.apache.kafka.common.utils.AppInfoParser)
2023-03-28 17:13:50.052 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,050] INFO Kafka commitId: b8341813ae2b0444690121942f62c3a125fbf4b3 (org.apache.kafka.common.utils.AppInfoParser)
2023-03-28 17:13:50.052 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,050] INFO Kafka startTimeMs: 1680020030045 (org.apache.kafka.common.utils.AppInfoParser)
2023-03-28 17:13:50.052 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,052] INFO [KafkaServer id=1] started (kafka.server.KafkaServer)
2023-03-28 17:13:50.077 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,076] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker tc-iwku93D6:9092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:13:50.114 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,113] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Recorded new controller, from now on will use broker tc-iwku93D6:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
2023-03-28 17:13:50.155 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,154] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Recorded new controller, from now on will use broker tc-iwku93D6:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
2023-03-28 17:13:50.800 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,799] INFO [Admin Manager on Broker 1]: Updating broker 1 with new configuration : advertised.listeners -> PLAINTEXT://localhost:60601,BROKER://fd0909400041:9092 (kafka.server.ZkAdminManager)
2023-03-28 17:13:50.810 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,810] INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener)
2023-03-28 17:13:50.816 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,814] INFO Processing override for entityPath: brokers/1 with config: HashMap(advertised.listeners -> PLAINTEXT://localhost:60601,BROKER://fd0909400041:9092) (kafka.server.ZkConfigManager)
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,816] INFO KafkaConfig values: 
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	advertised.listeners = PLAINTEXT://localhost:60601,BROKER://fd0909400041:9092
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	alter.config.policy.class.name = null
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	alter.log.dirs.replication.quota.window.num = 11
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	alter.log.dirs.replication.quota.window.size.seconds = 1
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	authorizer.class.name = 
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	auto.create.topics.enable = true
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	auto.leader.rebalance.enable = true
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	background.threads = 10
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.heartbeat.interval.ms = 2000
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.id = 1
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.id.generation.enable = true
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.rack = null
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	broker.session.timeout.ms = 9000
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	client.quota.callback.class = null
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	compression.type = producer
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	connection.failed.authentication.delay.ms = 100
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	connections.max.idle.ms = 600000
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	connections.max.reauth.ms = 0
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	control.plane.listener.name = null
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controlled.shutdown.enable = true
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controlled.shutdown.max.retries = 3
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controlled.shutdown.retry.backoff.ms = 5000
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.listener.names = null
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.append.linger.ms = 25
2023-03-28 17:13:50.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.election.backoff.max.ms = 1000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.election.timeout.ms = 1000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.fetch.timeout.ms = 2000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.request.timeout.ms = 2000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.retry.backoff.ms = 20
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quorum.voters = []
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quota.window.num = 11
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.quota.window.size.seconds = 1
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	controller.socket.timeout.ms = 30000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	create.topic.policy.class.name = null
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	default.replication.factor = 1
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.expiry.check.interval.ms = 3600000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.expiry.time.ms = 86400000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.master.key = null
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.max.lifetime.ms = 604800000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delegation.token.secret.key = null
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delete.records.purgatory.purge.interval.requests = 1
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	delete.topic.enable = true
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	early.start.listeners = null
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	fetch.max.bytes = 57671680
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	fetch.purgatory.purge.interval.requests = 1000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.initial.rebalance.delay.ms = 0
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.max.session.timeout.ms = 1800000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.max.size = 2147483647
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	group.min.session.timeout.ms = 6000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	initial.broker.registration.timeout.ms = 60000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	inter.broker.listener.name = BROKER
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	inter.broker.protocol.version = 3.3-IV3
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	kafka.metrics.polling.interval.secs = 10
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	kafka.metrics.reporters = []
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	leader.imbalance.check.interval.seconds = 300
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	leader.imbalance.per.broker.percentage = 10
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	listener.security.protocol.map = BROKER:PLAINTEXT,PLAINTEXT:PLAINTEXT
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	listeners = PLAINTEXT://0.0.0.0:9093,BROKER://0.0.0.0:9092
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.backoff.ms = 15000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.dedupe.buffer.size = 134217728
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.delete.retention.ms = 86400000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.enable = true
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.io.buffer.load.factor = 0.9
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.io.buffer.size = 524288
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.max.compaction.lag.ms = 9223372036854775807
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.min.cleanable.ratio = 0.5
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.min.compaction.lag.ms = 0
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleaner.threads = 1
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.cleanup.policy = [delete]
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.dir = /tmp/kafka-logs
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.dirs = /var/lib/kafka/data
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.interval.messages = 9223372036854775807
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.interval.ms = null
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.offset.checkpoint.interval.ms = 60000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.scheduler.interval.ms = 9223372036854775807
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.flush.start.offset.checkpoint.interval.ms = 60000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.index.interval.bytes = 4096
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.index.size.max.bytes = 10485760
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.downconversion.enable = true
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.format.version = 3.0-IV1
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.timestamp.difference.max.ms = 9223372036854775807
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.message.timestamp.type = CreateTime
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.preallocate = false
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.bytes = -1
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.check.interval.ms = 300000
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.hours = 168
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.minutes = null
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.retention.ms = null
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.hours = 168
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.jitter.hours = 0
2023-03-28 17:13:50.819 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.jitter.ms = null
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.roll.ms = null
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.segment.bytes = 1073741824
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	log.segment.delete.delay.ms = 60000
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connection.creation.rate = 2147483647
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connections = 2147483647
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connections.per.ip = 2147483647
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.connections.per.ip.overrides = 
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	max.incremental.fetch.session.cache.slots = 1000
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	message.max.bytes = 1048588
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.dir = null
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.max.record.bytes.between.snapshots = 20971520
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.segment.bytes = 1073741824
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.segment.min.bytes = 8388608
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.log.segment.ms = 604800000
2023-03-28 17:13:50.820 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.max.idle.interval.ms = 500
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.max.retention.bytes = -1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metadata.max.retention.ms = 604800000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metric.reporters = []
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metrics.num.samples = 2
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metrics.recording.level = INFO
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	metrics.sample.window.ms = 30000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	min.insync.replicas = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	node.id = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.io.threads = 8
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.network.threads = 3
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.partitions = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.recovery.threads.per.data.dir = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.replica.alter.log.dirs.threads = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	num.replica.fetchers = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offset.metadata.max.bytes = 4096
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.commit.required.acks = -1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.commit.timeout.ms = 5000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.load.buffer.size = 5242880
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.retention.check.interval.ms = 600000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.retention.minutes = 10080
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.compression.codec = 0
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.num.partitions = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.replication.factor = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	offsets.topic.segment.bytes = 104857600
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.iterations = 4096
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.key.length = 128
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.keyfactory.algorithm = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.old.secret = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	password.encoder.secret = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	process.roles = []
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	producer.purgatory.purge.interval.requests = 1000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	queued.max.request.bytes = -1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	queued.max.requests = 500
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	quota.window.num = 11
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	quota.window.size.seconds = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.index.file.cache.total.size.bytes = 1073741824
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.interval.ms = 30000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.retry.backoff.max.ms = 30000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.retry.backoff.ms = 500
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.task.retry.jitter = 0.2
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.manager.thread.pool.size = 10
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.class.name = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.class.path = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.impl.prefix = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.metadata.manager.listener.name = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.reader.max.pending.tasks = 100
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.reader.threads = 10
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.manager.class.name = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.manager.class.path = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.manager.impl.prefix = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	remote.log.storage.system.enable = false
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.backoff.ms = 1000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.max.bytes = 1048576
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.min.bytes = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.response.max.bytes = 10485760
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.fetch.wait.max.ms = 500
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.high.watermark.checkpoint.interval.ms = 5000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.lag.time.max.ms = 30000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.selector.class = null
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.socket.receive.buffer.bytes = 65536
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replica.socket.timeout.ms = 30000
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replication.quota.window.num = 11
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	replication.quota.window.size.seconds = 1
2023-03-28 17:13:50.821 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	request.timeout.ms = 30000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	reserved.broker.max.id = 1000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.client.callback.handler.class = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.enabled.mechanisms = [GSSAPI]
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.jaas.config = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.min.time.before.relogin = 60000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.principal.to.local.rules = [DEFAULT]
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.service.name = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.ticket.renew.jitter = 0.05
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.kerberos.ticket.renew.window.factor = 0.8
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.callback.handler.class = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.class = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.connect.timeout.ms = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.read.timeout.ms = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.buffer.seconds = 300
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.min.period.seconds = 60
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.window.factor = 0.8
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.refresh.window.jitter = 0.05
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.retry.backoff.max.ms = 10000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.login.retry.backoff.ms = 100
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.mechanism.controller.protocol = GSSAPI
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.mechanism.inter.broker.protocol = GSSAPI
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.clock.skew.seconds = 30
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.expected.audience = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.expected.issuer = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.jwks.endpoint.url = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.scope.claim.name = scope
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.sub.claim.name = sub
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.oauthbearer.token.endpoint.url = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.server.callback.handler.class = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	sasl.server.max.receive.size = 524288
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	security.inter.broker.protocol = PLAINTEXT
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	security.providers = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.connection.setup.timeout.max.ms = 30000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.connection.setup.timeout.ms = 10000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.listen.backlog.size = 50
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.receive.buffer.bytes = 102400
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.request.max.bytes = 104857600
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	socket.send.buffer.bytes = 102400
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.cipher.suites = []
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.client.auth = none
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.endpoint.identification.algorithm = https
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.engine.factory.class = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.key.password = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keymanager.algorithm = SunX509
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.certificate.chain = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.key = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.location = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.password = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.keystore.type = JKS
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.principal.mapping.rules = DEFAULT
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.protocol = TLSv1.3
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.provider = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.secure.random.implementation = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.trustmanager.algorithm = PKIX
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.certificates = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.location = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.password = null
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	ssl.truststore.type = JKS
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.max.timeout.ms = 900000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.load.buffer.size = 5242880
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.min.isr = 1
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.num.partitions = 50
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.replication.factor = 1
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transaction.state.log.segment.bytes = 104857600
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	transactional.id.expiration.ms = 604800000
2023-03-28 17:13:50.822 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	unclean.leader.election.enable = false
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.clientCnxnSocket = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.connect = localhost:2181
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.connection.timeout.ms = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.max.in.flight.requests = 10
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.session.timeout.ms = 18000
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.set.acl = false
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.cipher.suites = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.client.enable = false
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.crl.enable = false
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.enabled.protocols = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.keystore.location = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.keystore.password = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.keystore.type = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.ocsp.enable = false
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.protocol = TLSv1.2
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.truststore.location = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.truststore.password = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 	zookeeper.ssl.truststore.type = null
2023-03-28 17:13:50.823 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT:  (kafka.server.KafkaConfig)
2023-03-28 17:13:50.835 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,834] INFO Updated broker 1 at path /brokers/ids/1 with addresses: ArraySeq(EndPoint(localhost,60601,ListenerName(PLAINTEXT),PLAINTEXT), EndPoint(fd0909400041,9092,ListenerName(BROKER),PLAINTEXT)) (kafka.zk.KafkaZkClient)
2023-03-28 17:13:50.837 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,836] INFO [Controller id=1] Updated broker metadata: 1 : (EndPoint(tc-iwku93D6,9092,ListenerName(BROKER),PLAINTEXT)) : null : Features{} -> 1 : (EndPoint(localhost,60601,ListenerName(PLAINTEXT),PLAINTEXT),EndPoint(fd0909400041,9092,ListenerName(BROKER),PLAINTEXT)) : null : Features{} (kafka.controller.KafkaController)
2023-03-28 17:13:50.837 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,837] INFO [Controller id=1] Broker info update callback for 1 (kafka.controller.KafkaController)
2023-03-28 17:13:50.837 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,837] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
2023-03-28 17:13:50.839 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:50,838] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker tc-iwku93D6:9092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:13:51.187 [main] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - KAFKA LOCALHOST BOOTSTRAP SERVERS PLAINTEXT://localhost:60601
2023-03-28 17:13:51.195 [testcontainers-lifecycle-0] INFO  🐳 [postgres:14.5-alpine] - Pulling docker image: postgres:14.5-alpine. Please be patient; this may take some time but only needs to be done once.
2023-03-28 17:13:52.784 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Starting to pull image
2023-03-28 17:13:52.802 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  0 pending,  0 downloaded,  0 extracted, (0 bytes/0 bytes)
2023-03-28 17:13:53.578 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  7 pending,  1 downloaded,  0 extracted, (149 bytes/? MB)
2023-03-28 17:13:53.620 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  6 pending,  2 downloaded,  0 extracted, (28 KB/? MB)
2023-03-28 17:13:53.868 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  5 pending,  3 downloaded,  0 extracted, (2 MB/? MB)
2023-03-28 17:13:53.946 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  5 pending,  3 downloaded,  1 extracted, (2 MB/? MB)
2023-03-28 17:13:53.988 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  5 pending,  3 downloaded,  2 extracted, (2 MB/? MB)
2023-03-28 17:13:54.025 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  5 pending,  3 downloaded,  3 extracted, (2 MB/? MB)
2023-03-28 17:13:54.082 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  4 pending,  4 downloaded,  3 extracted, (2 MB/? MB)
2023-03-28 17:13:54.288 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  3 pending,  5 downloaded,  3 extracted, (2 MB/? MB)
2023-03-28 17:13:54.673 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  2 pending,  6 downloaded,  3 extracted, (6 MB/? MB)
2023-03-28 17:13:54.987 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  1 pending,  7 downloaded,  3 extracted, (10 MB/? MB)
2023-03-28 17:13:55.036 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:55,036] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
2023-03-28 17:13:55.036 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:13:55,036] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
2023-03-28 17:14:01.178 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  0 pending,  8 downloaded,  3 extracted, (78 MB/79 MB)
2023-03-28 17:14:02.203 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  0 pending,  8 downloaded,  4 extracted, (79 MB/79 MB)
2023-03-28 17:14:02.242 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  0 pending,  8 downloaded,  5 extracted, (79 MB/79 MB)
2023-03-28 17:14:02.281 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  0 pending,  8 downloaded,  6 extracted, (79 MB/79 MB)
2023-03-28 17:14:02.318 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  0 pending,  8 downloaded,  7 extracted, (79 MB/79 MB)
2023-03-28 17:14:02.357 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pulling image layers:  0 pending,  8 downloaded,  8 extracted, (79 MB/79 MB)
2023-03-28 17:14:02.365 [docker-java-stream--195060077] INFO  🐳 [postgres:14.5-alpine] - Pull complete. 8 layers, pulled in 9s (downloaded 79 MB at 8 MB/s)
2023-03-28 17:14:02.373 [testcontainers-lifecycle-0] INFO  🐳 [postgres:14.5-alpine] - Creating container for image: postgres:14.5-alpine
2023-03-28 17:14:02.511 [testcontainers-lifecycle-0] INFO  🐳 [postgres:14.5-alpine] - Container postgres:14.5-alpine is starting: ddc0e58a72513ba71a9fbe194ca3a46e2b2947b6c8cb0b09b9dfd5a33172a30b
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: The files belonging to this database system will be owned by user "postgres".
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: This user must also own the server process.
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: The database cluster will be initialized with locale "en_US.utf8".
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: The default database encoding has accordingly been set to "UTF8".
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: The default text search configuration will be set to "english".
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: Data page checksums are disabled.
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:02.777 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: fixing permissions on existing directory /var/lib/postgresql/data ... ok
2023-03-28 17:14:02.778 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: creating subdirectories ... ok
2023-03-28 17:14:02.778 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: selecting dynamic shared memory implementation ... posix
2023-03-28 17:14:02.790 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: selecting default max_connections ... 100
2023-03-28 17:14:02.805 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: selecting default shared_buffers ... 128MB
2023-03-28 17:14:02.858 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: selecting default time zone ... UTC
2023-03-28 17:14:02.859 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: creating configuration files ... ok
2023-03-28 17:14:02.958 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: running bootstrap script ... ok
2023-03-28 17:14:03.134 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: sh: locale: not found
2023-03-28 17:14:03.134 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:03.133 UTC [30] WARNING:  no usable system locales were found
2023-03-28 17:14:03.437 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: performing post-bootstrap initialization ... ok
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: syncing data to disk ... ok
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: Success. You can now start the database server using:
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT:     pg_ctl -D /var/lib/postgresql/data -l logfile start
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: initdb: warning: enabling "trust" authentication for local connections
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: You can change this by editing pg_hba.conf or using the option -A, or
2023-03-28 17:14:03.515 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: --auth-local and --auth-host, the next time you run initdb.
2023-03-28 17:14:03.542 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: waiting for server to start....2023-03-28 16:14:03.542 UTC [36] LOG:  starting PostgreSQL 14.5 on aarch64-unknown-linux-musl, compiled by gcc (Alpine 11.2.1_git20220219) 11.2.1 20220219, 64-bit
2023-03-28 17:14:03.542 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 2023-03-28 16:14:03.542 UTC [36] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-03-28 17:14:03.543 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 2023-03-28 16:14:03.543 UTC [37] LOG:  database system was shut down at 2023-03-28 16:14:03 UTC
2023-03-28 17:14:03.546 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 2023-03-28 16:14:03.546 UTC [36] LOG:  database system is ready to accept connections
2023-03-28 17:14:03.630 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT:  done
2023-03-28 17:14:03.630 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: server started
2023-03-28 17:14:03.669 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: CREATE DATABASE
2023-03-28 17:14:03.669 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.669 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.669 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
2023-03-28 17:14:03.669 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.670 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: waiting for server to shut down....2023-03-28 16:14:03.670 UTC [36] LOG:  received fast shutdown request
2023-03-28 17:14:03.670 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 2023-03-28 16:14:03.670 UTC [36] LOG:  aborting any active transactions
2023-03-28 17:14:03.671 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 2023-03-28 16:14:03.671 UTC [36] LOG:  background worker "logical replication launcher" (PID 43) exited with exit code 1
2023-03-28 17:14:03.671 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 2023-03-28 16:14:03.671 UTC [38] LOG:  shutting down
2023-03-28 17:14:03.677 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 2023-03-28 16:14:03.677 UTC [36] LOG:  database system is shut down
2023-03-28 17:14:03.771 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT:  done
2023-03-28 17:14:03.771 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: server stopped
2023-03-28 17:14:03.771 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.771 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: PostgreSQL init process complete; ready for start up.
2023-03-28 17:14:03.771 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDOUT: 
2023-03-28 17:14:03.793 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:03.792 UTC [1] LOG:  starting PostgreSQL 14.5 on aarch64-unknown-linux-musl, compiled by gcc (Alpine 11.2.1_git20220219) 11.2.1 20220219, 64-bit
2023-03-28 17:14:03.793 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:03.793 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
2023-03-28 17:14:03.793 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:03.793 UTC [1] LOG:  listening on IPv6 address "::", port 5432
2023-03-28 17:14:03.793 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:03.793 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2023-03-28 17:14:03.795 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:03.795 UTC [50] LOG:  database system was shut down at 2023-03-28 16:14:03 UTC
2023-03-28 17:14:03.798 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:03.798 UTC [1] LOG:  database system is ready to accept connections
2023-03-28 17:14:03.806 [testcontainers-lifecycle-0] INFO  🐳 [postgres:14.5-alpine] - Container postgres:14.5-alpine started in PT12.615903S
2023-03-28 17:14:03.806 [main] INFO  🐳 [opennms/horizon-stream-alert:latest] - Creating container for image: opennms/horizon-stream-alert:latest
2023-03-28 17:14:03.831 [main] INFO  🐳 [opennms/horizon-stream-alert:latest] - Container opennms/horizon-stream-alert:latest is starting: 9b1cf8b930417f16a14112063458955d54f703c8d9620d87fdec29d43d74958f
2023-03-28 17:14:04.150 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDERR: Picked up JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
2023-03-28 17:14:04.869 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: Listening for transport dt_socket at address: 5005
2023-03-28 17:14:09.086 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 
2023-03-28 17:14:09.086 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT:   .   ____          _            __ _ _
2023-03-28 17:14:09.086 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT:  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
2023-03-28 17:14:09.086 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
2023-03-28 17:14:09.086 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT:  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
2023-03-28 17:14:09.086 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT:   '  |____| .__|_| |_|_| |_\__, | / / / /
2023-03-28 17:14:09.086 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT:  =========|_|==============|___/=/_/_/_/
2023-03-28 17:14:09.090 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT:  :: Spring Boot ::                (v3.0.1)
2023-03-28 17:14:09.090 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 
2023-03-28 17:14:09.460 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:09.447Z  INFO 1 --- [  restartedMain] o.o.h.a.service.AlertServiceMain         : Starting AlertServiceMain using Java 17.0.6 with PID 1 (/app/classes started by root in /)
2023-03-28 17:14:09.468 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:09.467Z  INFO 1 --- [  restartedMain] o.o.h.a.service.AlertServiceMain         : No active profile set, falling back to 1 default profile: "default"
2023-03-28 17:14:09.847 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:09.845Z  INFO 1 --- [  restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in /app/libs/grpc-netty-shaded-1.43.2.jar referenced one or more files that do not exist: file:/app/libs/guava-30.1.1-android.jar,file:/app/libs/checker-compat-qual-2.5.5.jar
2023-03-28 17:14:09.847 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:09.846Z  INFO 1 --- [  restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in /app/libs/jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/app/libs/jakarta.xml.bind-api-2.3.2.jar,file:/app/libs/txw2-2.3.2.jar,file:/app/libs/istack-commons-runtime-3.0.8.jar,file:/app/libs/stax-ex-1.8.1.jar,file:/app/libs/FastInfoset-1.2.16.jar,file:/app/libs/jakarta.activation-api-1.2.1.jar
2023-03-28 17:14:09.848 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:09.848Z  INFO 1 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-28 17:14:09.848 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:09.848Z  INFO 1 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-28 17:14:14.384 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:14.382Z  INFO 1 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-28 17:14:14.682 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:14.681Z  INFO 1 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 261 ms. Found 3 JPA repository interfaces.
2023-03-28 17:14:23.631 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:23.629Z  INFO 1 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-03-28 17:14:23.698 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:23.697Z  INFO 1 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-03-28 17:14:23.698 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:23.698Z  INFO 1 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.4]
2023-03-28 17:14:24.315 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:24.314Z  INFO 1 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-03-28 17:14:24.337 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:24.336Z  INFO 1 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 14465 ms
2023-03-28 17:14:25.724 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:25.718Z  INFO 1 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-28 17:14:26.351 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:26.349Z  INFO 1 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6fd8e63d
2023-03-28 17:14:26.356 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:26.355Z  INFO 1 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-03-28 17:14:27.151 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:27.147Z  INFO 1 --- [  restartedMain] liquibase.database                       : Set default schema name to public
2023-03-28 17:14:28.260 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:28.259 UTC [57] ERROR:  relation "public.databasechangeloglock" does not exist at character 22
2023-03-28 17:14:28.260 [docker-java-stream-2070218308] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [POSTGRES] STDERR: 2023-03-28 16:14:28.259 UTC [57] STATEMENT:  SELECT COUNT(*) FROM public.databasechangeloglock
2023-03-28 17:14:28.537 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:28.534Z  INFO 1 --- [  restartedMain] liquibase.lockservice                    : Successfully acquired change log lock
2023-03-28 17:14:31.057 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:31.055Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Creating database history table with name: public.databasechangelog
2023-03-28 17:14:31.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:31.072Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Reading from public.databasechangelog
2023-03-28 17:14:32.109 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: Running Changeset: db/changelog/hs-0.1.0/tables/alert.xml::hs-0.1.0-alert::jwhite
2023-03-28 17:14:32.136 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.135Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Table alert created
2023-03-28 17:14:32.146 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.145Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Primary key added to alert (tenant_id, alert_id)
2023-03-28 17:14:32.150 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.149Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Index alert_reductionkey_idx created
2023-03-28 17:14:32.154 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.152Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Sequence alert_nxt_id created
2023-03-28 17:14:32.155 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.154Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : ChangeSet db/changelog/hs-0.1.0/tables/alert.xml::hs-0.1.0-alert::jwhite ran successfully in 42ms
2023-03-28 17:14:32.254 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: Running Changeset: db/changelog/hs-0.1.0/tables/alert.xml::hs-0.1.0-alert-distributed-table::jwhite
2023-03-28 17:14:32.268 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.266Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Marking ChangeSet: "db/changelog/hs-0.1.0/tables/alert.xml::hs-0.1.0-alert-distributed-table::jwhite" as ran despite precondition failure due to onFail='MARK_RAN': 
2023-03-28 17:14:32.268 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT:           db/changelog/changelog.xml : SQL Precondition failed.  Expected 't' got 'f'
2023-03-28 17:14:32.268 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 
2023-03-28 17:14:32.277 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: Running Changeset: db/changelog/hs-0.1.0/tables/policy.xml::0.1.0-monitoring-policy::yli
2023-03-28 17:14:32.416 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.415Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Table monitoring_policy created
2023-03-28 17:14:32.420 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.419Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Primary key added to monitoring_policy (id)
2023-03-28 17:14:32.424 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.423Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Index idx_monitoring_policy_name created
2023-03-28 17:14:32.431 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.430Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Table policy_rule created
2023-03-28 17:14:32.435 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.434Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Primary key added to policy_rule (id)
2023-03-28 17:14:32.446 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.443Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Foreign key constraint added to policy_rule (policy_id)
2023-03-28 17:14:32.466 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.465Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Table trigger_event created
2023-03-28 17:14:32.471 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.469Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Primary key added to trigger_event (id)
2023-03-28 17:14:32.476 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.474Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Foreign key constraint added to trigger_event (rule_id)
2023-03-28 17:14:32.477 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.476Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : ChangeSet db/changelog/hs-0.1.0/tables/policy.xml::0.1.0-monitoring-policy::yli ran successfully in 198ms
2023-03-28 17:14:32.490 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: Running Changeset: db/changelog/hs-0.1.0/tables/alert_definition.xml::hs-0.1.0-alert-definitions::rellis
2023-03-28 17:14:32.550 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.548Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Table alert_definition created
2023-03-28 17:14:32.554 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.552Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Primary key added to alert_definition (id)
2023-03-28 17:14:32.557 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.555Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Index idx_alert_definition_uei created
2023-03-28 17:14:32.564 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.563Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Table event_match created
2023-03-28 17:14:32.566 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.565Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Primary key added to event_match (id)
2023-03-28 17:14:32.571 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.570Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : Foreign key constraint added to event_match (id)
2023-03-28 17:14:32.572 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.571Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : ChangeSet db/changelog/hs-0.1.0/tables/alert_definition.xml::hs-0.1.0-alert-definitions::rellis ran successfully in 81ms
2023-03-28 17:14:32.581 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: Running Changeset: db/changelog/hs-0.1.0/data/alert_definition_default.xml::hs-0.1.0-alert-definitions-default-data::rellis
2023-03-28 17:14:32.585 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.584Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.588 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.587Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.589 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.588Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : ChangeSet db/changelog/hs-0.1.0/data/alert_definition_default.xml::hs-0.1.0-alert-definitions-default-data::rellis ran successfully in 7ms
2023-03-28 17:14:32.594 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: Running Changeset: db/changelog/hs-0.1.0/data/alert_definition_test_data.xml::hs-0.1.0-alert-definitions-test-data::rellis
2023-03-28 17:14:32.599 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.598Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.602 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.601Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.604 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.603Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.607 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.606Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.610 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.609Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.612 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.611Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.618 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.617Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.621 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.620Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.624 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.623Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.630 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.627Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.633 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.632Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.637 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.636Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.639 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.638Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.641 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.641Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.644 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.643Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.646 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.645Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : New row inserted into alert_definition
2023-03-28 17:14:32.647 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.646Z  INFO 1 --- [  restartedMain] liquibase.changelog                      : ChangeSet db/changelog/hs-0.1.0/data/alert_definition_test_data.xml::hs-0.1.0-alert-definitions-test-data::rellis ran successfully in 52ms
2023-03-28 17:14:32.660 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:32.659Z  INFO 1 --- [  restartedMain] liquibase.lockservice                    : Successfully released change log lock
2023-03-28 17:14:33.802 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:33.782Z  INFO 1 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-28 17:14:34.088 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:34.086Z  INFO 1 --- [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.6.Final
2023-03-28 17:14:34.801 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:34.800Z  WARN 1 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2023-03-28 17:14:35.543 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:35.539Z  INFO 1 --- [  restartedMain] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2023-03-28 17:14:39.502 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:39.499Z  INFO 1 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-28 17:14:39.531 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:39.528Z  INFO 1 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-28 17:14:39.667 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:39.665Z  WARN 1 --- [  restartedMain] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.opennms.horizon.alertservice.grpc.AlertGrpcService
2023-03-28 17:14:40.143 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:40.141Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:40.289 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:40.287Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:40.651 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:40.649Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:41.751 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:41.741Z  WARN 1 --- [  restartedMain] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.opennms.horizon.alertservice.db.repository.AlertRepository
2023-03-28 17:14:41.827 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:41.825Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:41.872 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:41.870Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:42.198 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:42.196Z  WARN 1 --- [  restartedMain] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.opennms.horizon.alertservice.service.AlertEventProcessor
2023-03-28 17:14:42.230 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:42.229Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:42.315 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:42.313Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:42.414 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:42.412Z  WARN 1 --- [  restartedMain] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.opennms.horizon.alertservice.db.repository.AlertDefinitionRepository
2023-03-28 17:14:42.415 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:42.414Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:42.417 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:42.416Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:42.620 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:42.618Z  WARN 1 --- [  restartedMain] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.opennms.horizon.alertservice.service.AlertServiceImpl
2023-03-28 17:14:43.508 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.507Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:43.588 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.587Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:43.667 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.665Z  WARN 1 --- [  restartedMain] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.opennms.horizon.alertservice.db.repository.MonitorPolicyRepository
2023-03-28 17:14:43.669 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.668Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:43.671 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.670Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:43.682 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.679Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:43.683 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.682Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:43.779 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.777Z  WARN 1 --- [  restartedMain] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.opennms.horizon.alertservice.service.AlertEngine
2023-03-28 17:14:43.891 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:43.890Z  WARN 1 --- [  restartedMain] o.o.h.a.d.t.TenantIdentifierResolver     : No tenant ID present
2023-03-28 17:14:45.374 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:45.372Z  INFO 1 --- [  restartedMain] o.o.h.a.grpc.GrpcServerManager           : Alert gRPC server started at port 6565
2023-03-28 17:14:45.644 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:45.643Z  WARN 1 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-28 17:14:48.805 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:48.800Z  INFO 1 --- [        Timer-0] o.o.h.alertservice.service.AlertEngine   : Tick with: {}
2023-03-28 17:14:49.663 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:49.660Z  INFO 1 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-03-28 17:14:49.690 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:49.689Z  INFO 1 --- [  restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path ''
2023-03-28 17:14:50.200 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:50.198Z  INFO 1 --- [  restartedMain] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	bootstrap.servers = [kafka-host:9092]
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	client.dns.lookup = use_all_dns_ips
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	client.id = 
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	connections.max.idle.ms = 300000
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	default.api.timeout.ms = 60000
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metadata.max.age.ms = 300000
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metric.reporters = []
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.num.samples = 2
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.recording.level = INFO
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.sample.window.ms = 30000
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	receive.buffer.bytes = 65536
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	reconnect.backoff.max.ms = 1000
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	reconnect.backoff.ms = 50
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	request.timeout.ms = 30000
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	retries = 2147483647
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	retry.backoff.ms = 100
2023-03-28 17:14:50.201 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.client.callback.handler.class = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.jaas.config = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.min.time.before.relogin = 60000
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.service.name = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.ticket.renew.jitter = 0.05
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.ticket.renew.window.factor = 0.8
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.callback.handler.class = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.class = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.connect.timeout.ms = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.read.timeout.ms = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.buffer.seconds = 300
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.min.period.seconds = 60
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.window.factor = 0.8
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.window.jitter = 0.05
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.retry.backoff.max.ms = 10000
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.retry.backoff.ms = 100
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.mechanism = GSSAPI
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.clock.skew.seconds = 30
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.expected.audience = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.expected.issuer = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.url = null
2023-03-28 17:14:50.202 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.scope.claim.name = scope
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.sub.claim.name = sub
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.token.endpoint.url = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	security.protocol = PLAINTEXT
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	security.providers = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	send.buffer.bytes = 131072
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	socket.connection.setup.timeout.max.ms = 30000
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	socket.connection.setup.timeout.ms = 10000
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.cipher.suites = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.endpoint.identification.algorithm = https
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.engine.factory.class = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.key.password = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keymanager.algorithm = SunX509
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.certificate.chain = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.key = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.location = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.password = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.type = JKS
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.protocol = TLSv1.3
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.provider = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.secure.random.implementation = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.trustmanager.algorithm = PKIX
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.certificates = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.location = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.password = null
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.type = JKS
2023-03-28 17:14:50.203 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 
2023-03-28 17:14:50.608 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:50.606Z  INFO 1 --- [  restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-28 17:14:50.608 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:50.607Z  INFO 1 --- [  restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:50.608 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:50.607Z  INFO 1 --- [  restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1680020090593
2023-03-28 17:14:51.710 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,708] INFO Creating topic alerts with configuration {} and initial partition assignment HashMap(0 -> ArrayBuffer(1), 1 -> ArrayBuffer(1), 2 -> ArrayBuffer(1), 3 -> ArrayBuffer(1), 4 -> ArrayBuffer(1), 5 -> ArrayBuffer(1), 6 -> ArrayBuffer(1), 7 -> ArrayBuffer(1), 8 -> ArrayBuffer(1), 9 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient)
2023-03-28 17:14:51.726 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,725] INFO [Controller id=1] New topics: [Set(alerts)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(alerts,Some(mFbj3JI4QDKuPGOsox9ZEg),HashMap(alerts-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), alerts-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.K
2023-03-28 17:14:51.726 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: afkaController)
2023-03-28 17:14:51.726 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,726] INFO [Controller id=1] New partition creation callback for alerts-6,alerts-0,alerts-1,alerts-8,alerts-2,alerts-9,alerts-5,alerts-7,alerts-4,alerts-3 (kafka.controller.KafkaController)
2023-03-28 17:14:51.728 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-6 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-8 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-9 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-5 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Changed partition alerts-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:51.729 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,728] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-2 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-0 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-6 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-4 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-7 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-8 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-9 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-3 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-5 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.732 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-1 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:51.733 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,731] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:51.756 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,755] INFO [Controller id=1 epoch=1] Changed partition alerts-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,756] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-1 (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-2 (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-3 (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-4 (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-5 (state.change.logger)
2023-03-28 17:14:51.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-6 (state.change.logger)
2023-03-28 17:14:51.758 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-7 (state.change.logger)
2023-03-28 17:14:51.758 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-8 (state.change.logger)
2023-03-28 17:14:51.758 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-9 (state.change.logger)
2023-03-28 17:14:51.758 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition alerts-0 (state.change.logger)
2023-03-28 17:14:51.758 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,757] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 10 become-leader and 0 become-follower partitions (state.change.logger)
2023-03-28 17:14:51.759 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,759] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 10 partitions (state.change.logger)
2023-03-28 17:14:51.760 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-2 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-0 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-6 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-4 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-7 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-8 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-9 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-3 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-5 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition alerts-1 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:51.761 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,760] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:51.762 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 for 10 partitions (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.763 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,762] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='alerts', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 2 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-1 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-0 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-9 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-8 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-7 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-6 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-5 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-4 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-3 (state.change.logger)
2023-03-28 17:14:51.778 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,777] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition alerts-2 (state.change.logger)
2023-03-28 17:14:51.779 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,778] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(alerts-6, alerts-0, alerts-1, alerts-8, alerts-2, alerts-9, alerts-5, alerts-7, alerts-4, alerts-3) (kafka.server.ReplicaFetcherManager)
2023-03-28 17:14:51.779 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,778] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 2 from controller 1 epoch 1 as part of the become-leader transition for 10 partitions (state.change.logger)
2023-03-28 17:14:51.818 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,817] INFO [LogLoader partition=alerts-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.826 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,825] INFO Created log for partition alerts-1 in /var/lib/kafka/data/alerts-1 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.826 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,826] INFO [Partition alerts-1 broker=1] No checkpointed highwatermark is found for partition alerts-1 (kafka.cluster.Partition)
2023-03-28 17:14:51.827 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,826] INFO [Partition alerts-1 broker=1] Log loaded for partition alerts-1 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.828 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,827] INFO [Broker id=1] Leader alerts-1 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.835 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,835] INFO [LogLoader partition=alerts-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.836 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,835] INFO Created log for partition alerts-0 in /var/lib/kafka/data/alerts-0 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.836 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,835] INFO [Partition alerts-0 broker=1] No checkpointed highwatermark is found for partition alerts-0 (kafka.cluster.Partition)
2023-03-28 17:14:51.836 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,835] INFO [Partition alerts-0 broker=1] Log loaded for partition alerts-0 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.836 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,835] INFO [Broker id=1] Leader alerts-0 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.840 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,839] INFO [LogLoader partition=alerts-9, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.840 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,840] INFO Created log for partition alerts-9 in /var/lib/kafka/data/alerts-9 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.840 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,840] INFO [Partition alerts-9 broker=1] No checkpointed highwatermark is found for partition alerts-9 (kafka.cluster.Partition)
2023-03-28 17:14:51.840 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,840] INFO [Partition alerts-9 broker=1] Log loaded for partition alerts-9 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.841 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,840] INFO [Broker id=1] Leader alerts-9 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.844 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,844] INFO [LogLoader partition=alerts-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.845 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,844] INFO Created log for partition alerts-8 in /var/lib/kafka/data/alerts-8 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.845 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,844] INFO [Partition alerts-8 broker=1] No checkpointed highwatermark is found for partition alerts-8 (kafka.cluster.Partition)
2023-03-28 17:14:51.845 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,844] INFO [Partition alerts-8 broker=1] Log loaded for partition alerts-8 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.845 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,844] INFO [Broker id=1] Leader alerts-8 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.848 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,847] INFO [LogLoader partition=alerts-7, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.849 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,848] INFO Created log for partition alerts-7 in /var/lib/kafka/data/alerts-7 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.849 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,848] INFO [Partition alerts-7 broker=1] No checkpointed highwatermark is found for partition alerts-7 (kafka.cluster.Partition)
2023-03-28 17:14:51.849 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,848] INFO [Partition alerts-7 broker=1] Log loaded for partition alerts-7 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.849 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,848] INFO [Broker id=1] Leader alerts-7 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.852 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,852] INFO [LogLoader partition=alerts-6, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.853 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,852] INFO Created log for partition alerts-6 in /var/lib/kafka/data/alerts-6 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.853 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,852] INFO [Partition alerts-6 broker=1] No checkpointed highwatermark is found for partition alerts-6 (kafka.cluster.Partition)
2023-03-28 17:14:51.853 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,852] INFO [Partition alerts-6 broker=1] Log loaded for partition alerts-6 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.853 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,852] INFO [Broker id=1] Leader alerts-6 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.858 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,857] INFO [LogLoader partition=alerts-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.858 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,857] INFO Created log for partition alerts-5 in /var/lib/kafka/data/alerts-5 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.859 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,857] INFO [Partition alerts-5 broker=1] No checkpointed highwatermark is found for partition alerts-5 (kafka.cluster.Partition)
2023-03-28 17:14:51.859 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,857] INFO [Partition alerts-5 broker=1] Log loaded for partition alerts-5 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.859 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,857] INFO [Broker id=1] Leader alerts-5 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.862 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,861] INFO [LogLoader partition=alerts-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.862 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,861] INFO Created log for partition alerts-4 in /var/lib/kafka/data/alerts-4 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.862 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,862] INFO [Partition alerts-4 broker=1] No checkpointed highwatermark is found for partition alerts-4 (kafka.cluster.Partition)
2023-03-28 17:14:51.862 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,862] INFO [Partition alerts-4 broker=1] Log loaded for partition alerts-4 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.862 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,862] INFO [Broker id=1] Leader alerts-4 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.866 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,865] INFO [LogLoader partition=alerts-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.866 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,866] INFO Created log for partition alerts-3 in /var/lib/kafka/data/alerts-3 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.866 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,866] INFO [Partition alerts-3 broker=1] No checkpointed highwatermark is found for partition alerts-3 (kafka.cluster.Partition)
2023-03-28 17:14:51.867 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,866] INFO [Partition alerts-3 broker=1] Log loaded for partition alerts-3 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.867 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,866] INFO [Broker id=1] Leader alerts-3 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.870 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,869] INFO [LogLoader partition=alerts-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:51.870 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,870] INFO Created log for partition alerts-2 in /var/lib/kafka/data/alerts-2 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:51.870 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,870] INFO [Partition alerts-2 broker=1] No checkpointed highwatermark is found for partition alerts-2 (kafka.cluster.Partition)
2023-03-28 17:14:51.870 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,870] INFO [Partition alerts-2 broker=1] Log loaded for partition alerts-2 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:51.870 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,870] INFO [Broker id=1] Leader alerts-2 with topic id Some(mFbj3JI4QDKuPGOsox9ZEg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:51.873 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-1 (state.change.logger)
2023-03-28 17:14:51.873 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-0 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-9 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-8 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-7 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-6 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-5 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-4 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-3 (state.change.logger)
2023-03-28 17:14:51.874 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,873] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition alerts-2 (state.change.logger)
2023-03-28 17:14:51.879 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,878] INFO [Broker id=1] Finished LeaderAndIsr request in 116ms correlationId 2 from controller 1 for 10 partitions (state.change.logger)
2023-03-28 17:14:51.882 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,881] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=mFbj3JI4QDKuPGOsox9ZEg, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 2 sent to broker tc-iwku93D6:9
2023-03-28 17:14:51.882 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: 092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,884] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,884] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.885 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='alerts', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition alerts-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.886 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,885] INFO [Broker id=1] Add 10 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
2023-03-28 17:14:51.891 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:51,890] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 3 sent to broker tc-iwku93D6:9092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:14:52.014 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.001Z  INFO 1 --- [| adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-28 17:14:52.044 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.042Z  INFO 1 --- [| adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-28 17:14:52.046 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.044Z  INFO 1 --- [| adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-28 17:14:52.048 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.046Z  INFO 1 --- [| adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-28 17:14:52.159 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.158Z  INFO 1 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.292Z  INFO 1 --- [  restartedMain] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	allow.auto.create.topics = true
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	auto.commit.interval.ms = 5000
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	auto.offset.reset = latest
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	bootstrap.servers = [kafka-host:9092]
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	check.crcs = true
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	client.dns.lookup = use_all_dns_ips
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	client.id = consumer-alert-1
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	client.rack = 
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	connections.max.idle.ms = 540000
2023-03-28 17:14:52.294 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	default.api.timeout.ms = 60000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	enable.auto.commit = false
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	exclude.internal.topics = true
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	fetch.max.bytes = 52428800
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	fetch.max.wait.ms = 500
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	fetch.min.bytes = 1
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	group.id = alert
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	group.instance.id = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	heartbeat.interval.ms = 3000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	interceptor.classes = []
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	internal.leave.group.on.close = true
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	internal.throw.on.fetch.stable.offset.unsupported = false
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	isolation.level = read_uncommitted
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	max.partition.fetch.bytes = 1048576
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	max.poll.interval.ms = 300000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	max.poll.records = 500
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metadata.max.age.ms = 300000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metric.reporters = []
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.num.samples = 2
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.recording.level = INFO
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.sample.window.ms = 30000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	receive.buffer.bytes = 65536
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	reconnect.backoff.max.ms = 1000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	reconnect.backoff.ms = 50
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	request.timeout.ms = 30000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	retry.backoff.ms = 100
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.client.callback.handler.class = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.jaas.config = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.min.time.before.relogin = 60000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.service.name = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.ticket.renew.jitter = 0.05
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.ticket.renew.window.factor = 0.8
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.callback.handler.class = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.class = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.connect.timeout.ms = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.read.timeout.ms = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.buffer.seconds = 300
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.min.period.seconds = 60
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.window.factor = 0.8
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.window.jitter = 0.05
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.retry.backoff.max.ms = 10000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.retry.backoff.ms = 100
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.mechanism = GSSAPI
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.clock.skew.seconds = 30
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.expected.audience = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.expected.issuer = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.url = null
2023-03-28 17:14:52.295 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.scope.claim.name = scope
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.sub.claim.name = sub
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.token.endpoint.url = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	security.protocol = PLAINTEXT
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	security.providers = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	send.buffer.bytes = 131072
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	session.timeout.ms = 45000
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	socket.connection.setup.timeout.max.ms = 30000
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	socket.connection.setup.timeout.ms = 10000
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.cipher.suites = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.endpoint.identification.algorithm = https
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.engine.factory.class = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.key.password = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keymanager.algorithm = SunX509
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.certificate.chain = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.key = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.location = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.password = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.type = JKS
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.protocol = TLSv1.3
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.provider = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.secure.random.implementation = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.trustmanager.algorithm = PKIX
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.certificates = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.location = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.password = null
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.type = JKS
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
2023-03-28 17:14:52.296 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 
2023-03-28 17:14:52.437 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.436Z  INFO 1 --- [  restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-28 17:14:52.438 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.437Z  INFO 1 --- [  restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:52.438 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.437Z  INFO 1 --- [  restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1680020092436
2023-03-28 17:14:52.444 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.443Z  INFO 1 --- [  restartedMain] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-alert-1, groupId=alert] Subscribed to topic(s): events
2023-03-28 17:14:52.521 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,520] INFO Creating topic events with configuration {} and initial partition assignment HashMap(0 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient)
2023-03-28 17:14:52.530 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,529] INFO [Controller id=1] New topics: [Set(events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(events,Some(wKJrcK-pRema3HgM0eJ0XA),Map(events-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
2023-03-28 17:14:52.530 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,529] INFO [Controller id=1] New partition creation callback for events-0 (kafka.controller.KafkaController)
2023-03-28 17:14:52.530 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,530] INFO [Controller id=1 epoch=1] Changed partition events-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:52.530 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,530] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:52.530 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,530] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition events-0 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:52.530 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,530] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:52.534 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,533] INFO Creating topic __consumer_offsets with configuration {compression.type=producer, cleanup.policy=compact, segment.bytes=104857600} and initial partition assignment HashMap(0 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient)
2023-03-28 17:14:52.539 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,538] INFO [Controller id=1 epoch=1] Changed partition events-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:52.539 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,539] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='events', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition events-0 (state.change.logger)
2023-03-28 17:14:52.539 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,539] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
2023-03-28 17:14:52.540 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,539] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 1 partitions (state.change.logger)
2023-03-28 17:14:52.540 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,539] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition events-0 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:52.540 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,540] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:52.540 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,540] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 for 1 partitions (state.change.logger)
2023-03-28 17:14:52.540 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,540] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='events', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 4 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:52.541 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,541] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition events-0 (state.change.logger)
2023-03-28 17:14:52.551 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,542] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(events-0) (kafka.server.ReplicaFetcherManager)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,542] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 4 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,544] INFO [LogLoader partition=events-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,545] INFO Created log for partition events-0 in /var/lib/kafka/data/events-0 with properties {} (kafka.log.LogManager)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,546] INFO [Partition events-0 broker=1] No checkpointed highwatermark is found for partition events-0 (kafka.cluster.Partition)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,546] INFO [Partition events-0 broker=1] Log loaded for partition events-0 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,546] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(7eEd6JYkQlSzpX7M0Cx9dg),Map(__consumer_offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,546] INFO [Broker id=1] Leader events-0 with topic id Some(wKJrcK-pRema3HgM0eJ0XA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,547] INFO [Controller id=1] New partition creation callback for __consumer_offsets-0 (kafka.controller.KafkaController)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,547] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,547] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,547] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger)
2023-03-28 17:14:52.552 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,547] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:52.554 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.553Z  WARN 1 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-alert-1, groupId=alert] Error while fetching metadata with correlation id 2 : {events=LEADER_NOT_AVAILABLE}
2023-03-28 17:14:52.555 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,555] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition events-0 (state.change.logger)
2023-03-28 17:14:52.556 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,555] INFO [Broker id=1] Finished LeaderAndIsr request in 15ms correlationId 4 from controller 1 for 1 partitions (state.change.logger)
2023-03-28 17:14:52.556 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,556] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=wKJrcK-pRema3HgM0eJ0XA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 4 sent to broker tc-iwku93D6:9092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:14:52.558 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,557] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='events', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition events-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
2023-03-28 17:14:52.558 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,557] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
2023-03-28 17:14:52.558 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,558] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 5 sent to broker tc-iwku93D6:9092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:14:52.563 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.562Z  INFO 1 --- [ntainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-alert-1, groupId=alert] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:52.564 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,563] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
2023-03-28 17:14:52.564 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,564] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
2023-03-28 17:14:52.564 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,564] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
2023-03-28 17:14:52.564 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,564] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 1 partitions (state.change.logger)
2023-03-28 17:14:52.564 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,564] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger)
2023-03-28 17:14:52.564 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,564] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
2023-03-28 17:14:52.565 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,565] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 1 for 1 partitions (state.change.logger)
2023-03-28 17:14:52.565 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,565] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], partitionEpoch=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 6 from controller 1 epoch 1 (state.change.logger)
2023-03-28 17:14:52.566 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,565] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
2023-03-28 17:14:52.566 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,565] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-0) (kafka.server.ReplicaFetcherManager)
2023-03-28 17:14:52.566 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,565] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 6 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
2023-03-28 17:14:52.571 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,570] INFO [LogLoader partition=__consumer_offsets-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
2023-03-28 17:14:52.572 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,571] INFO Created log for partition __consumer_offsets-0 in /var/lib/kafka/data/__consumer_offsets-0 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
2023-03-28 17:14:52.572 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,572] INFO [Partition __consumer_offsets-0 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
2023-03-28 17:14:52.572 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,572] INFO [Partition __consumer_offsets-0 broker=1] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
2023-03-28 17:14:52.572 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,572] INFO [Broker id=1] Leader __consumer_offsets-0 with topic id Some(7eEd6JYkQlSzpX7M0Cx9dg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
2023-03-28 17:14:52.574 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,574] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 6 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
2023-03-28 17:14:52.575 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,575] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 0 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:52.576 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,576] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-0 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
2023-03-28 17:14:52.577 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,576] INFO [Broker id=1] Finished LeaderAndIsr request in 11ms correlationId 6 from controller 1 for 1 partitions (state.change.logger)
2023-03-28 17:14:52.577 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,577] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=7eEd6JYkQlSzpX7M0Cx9dg, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 6 sent to broker tc-iwku93D6:9092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:14:52.581 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,580] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
2023-03-28 17:14:52.581 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,580] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
2023-03-28 17:14:52.581 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,581] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 7 sent to broker tc-iwku93D6:9092 (id: 1 rack: null) (state.change.logger)
2023-03-28 17:14:52.585 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.584Z  INFO 1 --- [  restartedMain] o.o.h.a.service.AlertServiceMain         : Started AlertServiceMain in 45.315 seconds (process running for 48.438)
2023-03-28 17:14:52.586 [main] INFO  🐳 [opennms/horizon-stream-alert:latest] - Container opennms/horizon-stream-alert:latest started in PT48.7796S
2023-03-28 17:14:52.586 [main] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - APPLICATION MAPPED PORTS: http=60633, grpc=60632; debugger=60631
2023-03-28 17:14:52.589 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,581] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-0 in 4 milliseconds for epoch 0, of which 2 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
2023-03-28 17:14:52.676 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.675Z  INFO 1 --- [ntainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-alert-1, groupId=alert] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:52.691 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.690Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Discovered group coordinator fd0909400041:9092 (id: 2147483646 rack: null)
2023-03-28 17:14:52.698 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.697Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] (Re-)joining group
2023-03-28 17:14:52.757 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,756] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group alert in Empty state. Created a new member id consumer-alert-1-27096871-514f-4bc9-abda-2ca6f76d7635 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:52.764 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.763Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Request joining group due to: need to re-join with the given member-id: consumer-alert-1-27096871-514f-4bc9-abda-2ca6f76d7635
2023-03-28 17:14:52.767 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.766Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-28 17:14:52.767 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.767Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] (Re-)joining group
2023-03-28 17:14:52.776 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,775] INFO [GroupCoordinator 1]: Preparing to rebalance group alert in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member consumer-alert-1-27096871-514f-4bc9-abda-2ca6f76d7635 with group instance id None; client reason: rebalance failed due to MemberIdRequiredException) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:52.782 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,781] INFO [GroupCoordinator 1]: Stabilized group alert generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:52.790 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.786Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Successfully joined group with generation Generation{generationId=1, memberId='consumer-alert-1-27096871-514f-4bc9-abda-2ca6f76d7635', protocol='range'}
2023-03-28 17:14:52.798 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.797Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Finished assignment for group at generation 1: {consumer-alert-1-27096871-514f-4bc9-abda-2ca6f76d7635=Assignment(partitions=[events-0])}
2023-03-28 17:14:52.816 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:52,815] INFO [GroupCoordinator 1]: Assignment received from leader consumer-alert-1-27096871-514f-4bc9-abda-2ca6f76d7635 for group alert for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)

Scenario: Verify when an event is received from Kafka, a new alert is created                                                 [90m# org/opennms/horizon/alertservice/alert.feature:10[0m
2023-03-28 17:14:52.854 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:52.859 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:52.859 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                      [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:52.872 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.871Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Successfully synced group in generation Generation{generationId=1, memberId='consumer-alert-1-27096871-514f-4bc9-abda-2ca6f76d7635', protocol='range'}
2023-03-28 17:14:52.876 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.875Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:52.886 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.884Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Adding newly assigned partitions: events-0
2023-03-28 17:14:52.910 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.909Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Found no committed offset for partition events-0
2023-03-28 17:14:52.941 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.939Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-alert-1, groupId=alert] Found no committed offset for partition events-0
2023-03-28 17:14:52.970 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group1-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group1
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:52.981 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:52.979Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-alert-1, groupId=alert] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[fd0909400041:9092 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.020 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:53.019Z  INFO 1 --- [ntainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : alert: partitions assigned: [events-0]
2023-03-28 17:14:53.042 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:53.043 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:53.043 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:53.043 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020093042
2023-03-28 17:14:53.047 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:53.048 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:53.062 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:53.063 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:53.063 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020093062
2023-03-28 17:14:53.063 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:53.063 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:53.063 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Subscribed to topic(s): events
2023-03-28 17:14:53.063 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:53.064 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group2-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group2
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:53.066 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:53.066 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:53.066 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:53.066 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020093066
2023-03-28 17:14:53.067 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:53.067 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-2
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:53.070 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:53.070 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:53.070 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020093070
2023-03-28 17:14:53.070 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:53.070 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:53.070 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Subscribed to topic(s): alerts
2023-03-28 17:14:53.070 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:53.203 [Thread-4] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [kafka-producer-network-thread | producer-2] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-2] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.203 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:53.204 [Thread-4] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:53.204 [Thread-5] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:53.204 [kafka-producer-network-thread | producer-2] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-2] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:53.205 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:53.205 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:53.208 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] (Re-)joining group
2023-03-28 17:14:53.209 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] (Re-)joining group
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantA"[0m[32m with node [0m[32m[1m10[0m             [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:53.220 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,218] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group2 in Empty state. Created a new member id test-consumer-for-alerts-7e3f1619-6e2d-4476-ad99-4b180a73124d for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.220 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,218] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group1 in Empty state. Created a new member id test-consumer-for-events-e2495947-abc2-4959-a551-ba95c83b7946 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.223 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,219] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group1 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-e2495947-abc2-4959-a551-ba95c83b7946 with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.223 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,219] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group2 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-7e3f1619-6e2d-4476-ad99-4b180a73124d with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.224 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,222] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group1 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.224 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-e2495947-abc2-4959-a551-ba95c83b7946', protocol='range'}
2023-03-28 17:14:53.226 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Finished assignment for group at generation 1: {test-consumer-for-events-e2495947-abc2-4959-a551-ba95c83b7946=Assignment(partitions=[events-0])}
2023-03-28 17:14:53.228 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,225] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group2 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.229 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-7e3f1619-6e2d-4476-ad99-4b180a73124d', protocol='range'}
2023-03-28 17:14:53.229 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Finished assignment for group at generation 1: {test-consumer-for-alerts-7e3f1619-6e2d-4476-ad99-4b180a73124d=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:53.236 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,235] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-7e3f1619-6e2d-4476-ad99-4b180a73124d for group test-consumer-group2 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.236 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:53,236] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-e2495947-abc2-4959-a551-ba95c83b7946 for group test-consumer-group1 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:53.239 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-e2495947-abc2-4959-a551-ba95c83b7946', protocol='range'}
2023-03-28 17:14:53.240 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:53.241 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Adding newly assigned partitions: events-0
2023-03-28 17:14:53.244 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-7e3f1619-6e2d-4476-ad99-4b180a73124d', protocol='range'}
2023-03-28 17:14:53.244 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:53.244 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:53.254 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-1
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-2
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-3
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-4
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-5
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-6
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-7
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-8
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-9
2023-03-28 17:14:53.255 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Found no committed offset for partition alerts-0
2023-03-28 17:14:53.255 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Found no committed offset for partition events-0
2023-03-28 17:14:53.274 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.274 [Thread-4] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.275 [Thread-5] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:53.285 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:53.906 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:53.827Z  INFO 1 --- [        Timer-0] o.o.h.alertservice.service.AlertEngine   : Tick with: {}
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.098Z  INFO 1 --- [ntainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	acks = -1
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	batch.size = 16384
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	bootstrap.servers = [kafka-host:9092]
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	buffer.memory = 33554432
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	client.dns.lookup = use_all_dns_ips
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	client.id = producer-1
2023-03-28 17:14:55.100 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	compression.type = none
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	connections.max.idle.ms = 540000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	delivery.timeout.ms = 120000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	enable.idempotence = false
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	interceptor.classes = []
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	linger.ms = 0
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	max.block.ms = 60000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	max.in.flight.requests.per.connection = 5
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	max.request.size = 1048576
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metadata.max.age.ms = 300000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metadata.max.idle.ms = 300000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metric.reporters = []
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.num.samples = 2
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.recording.level = INFO
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	metrics.sample.window.ms = 30000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	partitioner.adaptive.partitioning.enable = true
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	partitioner.availability.timeout.ms = 0
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	partitioner.class = null
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	partitioner.ignore.keys = false
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	receive.buffer.bytes = 32768
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	reconnect.backoff.max.ms = 1000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	reconnect.backoff.ms = 50
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	request.timeout.ms = 30000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	retries = 2147483647
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	retry.backoff.ms = 100
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.client.callback.handler.class = null
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.jaas.config = null
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.min.time.before.relogin = 60000
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.service.name = null
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.ticket.renew.jitter = 0.05
2023-03-28 17:14:55.101 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.kerberos.ticket.renew.window.factor = 0.8
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.callback.handler.class = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.class = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.connect.timeout.ms = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.read.timeout.ms = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.buffer.seconds = 300
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.min.period.seconds = 60
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.window.factor = 0.8
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.refresh.window.jitter = 0.05
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.retry.backoff.max.ms = 10000
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.login.retry.backoff.ms = 100
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.mechanism = GSSAPI
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.clock.skew.seconds = 30
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.expected.audience = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.expected.issuer = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.jwks.endpoint.url = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.scope.claim.name = scope
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.sub.claim.name = sub
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	sasl.oauthbearer.token.endpoint.url = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	security.protocol = PLAINTEXT
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	security.providers = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	send.buffer.bytes = 131072
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	socket.connection.setup.timeout.max.ms = 30000
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	socket.connection.setup.timeout.ms = 10000
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.cipher.suites = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.endpoint.identification.algorithm = https
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.engine.factory.class = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.key.password = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keymanager.algorithm = SunX509
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.certificate.chain = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.key = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.location = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.password = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.keystore.type = JKS
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.protocol = TLSv1.3
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.provider = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.secure.random.implementation = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.trustmanager.algorithm = PKIX
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.certificates = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.location = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.password = null
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	ssl.truststore.type = JKS
2023-03-28 17:14:55.102 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	transaction.timeout.ms = 60000
2023-03-28 17:14:55.103 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	transactional.id = null
2023-03-28 17:14:55.103 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
2023-03-28 17:14:55.103 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 
2023-03-28 17:14:55.249 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.248Z  INFO 1 --- [ntainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-28 17:14:55.250 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.249Z  INFO 1 --- [ntainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:55.250 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.249Z  INFO 1 --- [ntainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1680020095246
2023-03-28 17:14:55.289 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.288Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:55.305 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.304Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.305 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.304Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.306 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.305Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.306 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.305Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.306 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.306Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.306 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.306Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.306 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.306Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.306 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.306Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.307 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.306Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.307 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:55.307Z  INFO 1 --- [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.388 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:55.425 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantA",
    "databaseId": "1",
    "uei": "",
    "reductionKey": "tenantA:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020093085",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantA"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1          |
    | alerts[0].counter == 1      |
    | alerts[0].severity == MINOR |
  [32mThen [0m[32mVerify alert topic has [0m[32m[1m1[0m[32m messages with tenant [0m[32m[1m"tenantA"[0m                                                                [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.verifyTopicContainsTenant(int,java.lang.String)[0m

Scenario: Verify when an event is received from Kafka, with no matching alert configuration, no new alert is created                                                              [90m# org/opennms/horizon/alertservice/alert.feature:18[0m
2023-03-28 17:14:55.939 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                                                                                  [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:55.939 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                                                                                  [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:55.939 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                                                                          [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                                                                                [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                                                                                [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:55.941 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group3-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group3
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:55.942 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:55.942 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:55.942 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:55.942 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020095942
2023-03-28 17:14:55.943 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:55.943 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-3
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:55.944 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:55.944 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:55.944 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020095944
2023-03-28 17:14:55.944 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:55.944 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:55.944 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Subscribed to topic(s): events
2023-03-28 17:14:55.947 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:55.947 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group4-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group4
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:55.949 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:55.949 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:55.949 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:55.949 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020095949
2023-03-28 17:14:55.949 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:55.950 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-4
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:55.951 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:55.951 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:55.951 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020095951
2023-03-28 17:14:55.951 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:55.951 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:55.951 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Subscribed to topic(s): alerts
2023-03-28 17:14:55.951 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:55.953 [kafka-producer-network-thread | producer-3] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-3] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:55.954 [Thread-6] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:55.955 [Thread-6] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:55.955 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:55.955 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] (Re-)joining group
2023-03-28 17:14:55.958 [kafka-producer-network-thread | producer-4] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-4] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:55.958 [kafka-producer-network-thread | producer-4] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-4] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:55.958 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/perspective/nodes/nodeLostService"[0m[32m with tenant [0m[32m[1m"tenantB"[0m[32m with node [0m[32m[1m10[0m                                                                 [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:55.959 [Thread-7] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:55.960 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:55.961 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] (Re-)joining group
2023-03-28 17:14:55.964 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,963] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group3 in Empty state. Created a new member id test-consumer-for-events-81635ed4-5576-49ca-978d-c8386e6654cf for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.964 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,963] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group3 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-81635ed4-5576-49ca-978d-c8386e6654cf with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.965 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,964] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group3 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.965 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-81635ed4-5576-49ca-978d-c8386e6654cf', protocol='range'}
2023-03-28 17:14:55.966 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Finished assignment for group at generation 1: {test-consumer-for-events-81635ed4-5576-49ca-978d-c8386e6654cf=Assignment(partitions=[events-0])}
2023-03-28 17:14:55.971 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,968] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-81635ed4-5576-49ca-978d-c8386e6654cf for group test-consumer-group3 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.971 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,968] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group4 in Empty state. Created a new member id test-consumer-for-alerts-9d689843-043d-4ce6-aeaf-dd076f379df2 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.971 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,969] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group4 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-9d689843-043d-4ce6-aeaf-dd076f379df2 with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.974 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-81635ed4-5576-49ca-978d-c8386e6654cf', protocol='range'}
2023-03-28 17:14:55.974 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:55.974 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Adding newly assigned partitions: events-0
2023-03-28 17:14:55.977 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Found no committed offset for partition events-0
2023-03-28 17:14:55.977 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-9d689843-043d-4ce6-aeaf-dd076f379df2', protocol='range'}
2023-03-28 17:14:55.977 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,976] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group4 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.977 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Finished assignment for group at generation 1: {test-consumer-for-alerts-9d689843-043d-4ce6-aeaf-dd076f379df2=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:55.984 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:55.988 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:55,987] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-9d689843-043d-4ce6-aeaf-dd076f379df2 for group test-consumer-group4 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:55.990 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-9d689843-043d-4ce6-aeaf-dd076f379df2', protocol='range'}
2023-03-28 17:14:55.990 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:55.990 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:55.991 [Thread-6] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-1
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-2
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-3
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-4
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-5
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-6
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-7
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-8
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-9
2023-03-28 17:14:55.993 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Found no committed offset for partition alerts-0
2023-03-28 17:14:55.997 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=2; topics=[events]
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.001 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:56.006 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:56.499 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:56.498Z  INFO 1 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-28 17:14:56.500 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:56.499Z  INFO 1 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-03-28 17:14:56.519 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:56.518Z  INFO 1 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 18 ms
  [32mThen [0m[32mSend GET request to application at path [0m[32m[1m"/metrics/events_without_alert_data_counter"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendGETRequestToApplicationAtPathUntilJSONResponseMatchesTheFollowingJSONPathExpressions(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | measurements[0].value == 1.0 |
  [32mThen [0m[32mVerify alert topic has [0m[32m[1m0[0m[32m messages with tenant [0m[32m[1m"tenantB"[0m                                                                                                                    [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.verifyTopicContainsTenant(int,java.lang.String)[0m

Scenario: Verify when an event is received from Kafka with a different tenant id, you do not see the new alert                     [90m# org/opennms/horizon/alertservice/alert.feature:24[0m
2023-03-28 17:14:57.320 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                                   [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:57.320 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                                   [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:57.320 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                           [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                                 [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                                 [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:57.321 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group5-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group5
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:57.323 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:57.323 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.323 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.323 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097323
2023-03-28 17:14:57.323 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:57.323 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-5
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:57.324 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.324 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.324 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097324
2023-03-28 17:14:57.324 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:57.324 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:57.324 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Subscribed to topic(s): events
2023-03-28 17:14:57.324 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:57.324 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group6-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group6
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:57.326 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:57.326 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.326 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.326 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097326
2023-03-28 17:14:57.326 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:57.326 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-6
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:57.327 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.327 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.327 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097327
2023-03-28 17:14:57.327 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:57.327 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:57.327 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Subscribed to topic(s): alerts
2023-03-28 17:14:57.327 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:57.332 [kafka-producer-network-thread | producer-5] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-5] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.332 [Thread-8] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:57.333 [Thread-8] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.333 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:57.333 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] (Re-)joining group
2023-03-28 17:14:57.335 [kafka-producer-network-thread | producer-6] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-6] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [kafka-producer-network-thread | producer-6] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-6] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantA"[0m[32m with node [0m[32m[1m10[0m                  [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:57.335 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:57.338 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] (Re-)joining group
2023-03-28 17:14:57.345 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,343] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group6 in Empty state. Created a new member id test-consumer-for-alerts-c7a8b801-ea4e-48c3-a655-b301877bc50a for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.345 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,344] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group6 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-c7a8b801-ea4e-48c3-a655-b301877bc50a with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.346 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,346] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group6 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.350 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-c7a8b801-ea4e-48c3-a655-b301877bc50a', protocol='range'}
2023-03-28 17:14:57.350 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Finished assignment for group at generation 1: {test-consumer-for-alerts-c7a8b801-ea4e-48c3-a655-b301877bc50a=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:57.353 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.353 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.357 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,352] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group5 in Empty state. Created a new member id test-consumer-for-events-8adfc3f3-197a-430d-b5fd-1795838f61ec for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.357 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,352] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group5 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-8adfc3f3-197a-430d-b5fd-1795838f61ec with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.361 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,360] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-c7a8b801-ea4e-48c3-a655-b301877bc50a for group test-consumer-group6 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.361 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,360] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group5 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.365 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-c7a8b801-ea4e-48c3-a655-b301877bc50a', protocol='range'}
2023-03-28 17:14:57.365 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-8adfc3f3-197a-430d-b5fd-1795838f61ec', protocol='range'}
2023-03-28 17:14:57.365 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Finished assignment for group at generation 1: {test-consumer-for-events-8adfc3f3-197a-430d-b5fd-1795838f61ec=Assignment(partitions=[events-0])}
2023-03-28 17:14:57.365 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:57.365 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:57.368 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,367] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-8adfc3f3-197a-430d-b5fd-1795838f61ec for group test-consumer-group5 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-1
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-2
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-3
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-4
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-5
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-6
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-7
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-8
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-9
2023-03-28 17:14:57.368 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Found no committed offset for partition alerts-0
2023-03-28 17:14:57.370 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-8adfc3f3-197a-430d-b5fd-1795838f61ec', protocol='range'}
2023-03-28 17:14:57.370 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:57.370 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Adding newly assigned partitions: events-0
2023-03-28 17:14:57.386 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Found no committed offset for partition events-0
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.389 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.394 [Thread-8] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.399 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=3; topics=[events]
2023-03-28 17:14:57.399 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.451 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantA",
    "databaseId": "1",
    "uei": "",
    "reductionKey": "tenantA:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020093085",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantA"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m      [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1     |
    | alerts[0].counter == 1 |
2023-03-28 17:14:57.497 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenant-other"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 0 |

Scenario: Verify that alerts can be deleted                                                                                   [90m# org/opennms/horizon/alertservice/alert.feature:32[0m
2023-03-28 17:14:57.511 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:57.512 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:57.512 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                      [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:57.513 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.514 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.514 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
Mar 28, 2023 5:14:57 PM io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference cleanQueue
SEVERE: *~*~*~ Channel ManagedChannelImpl{logId=9, target=localhost:60632} was not shutdown properly!!! ~*~*~*
    Make sure to call shutdown()/shutdownNow() and wait until awaitTermination() returns true.
java.lang.RuntimeException: ManagedChannel allocation site
	at io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference.<init>(ManagedChannelOrphanWrapper.java:93)
	at io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:53)
	at io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:44)
	at io.grpc.internal.ManagedChannelImplBuilder.build(ManagedChannelImplBuilder.java:630)
	at io.grpc.internal.AbstractManagedChannelImplBuilder.build(AbstractManagedChannelImplBuilder.java:297)
	at org.opennms.horizon.alertservice.AlertGrpcClientUtils.initStubs(AlertGrpcClientUtils.java:31)
	at org.opennms.horizon.alertservice.AlertGrpcClientUtils.<init>(AlertGrpcClientUtils.java:22)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)
	at org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)
	at org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)
	at org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)
	at org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)
	at org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632)
	at org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118)
	at org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136)
	at org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78)
	at org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309)
	at org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335)
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)
	at org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)
	at org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)
	at org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)
	at org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)
	at io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:49)
	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
	at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
	at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)
	at io.cucumber.core.runner.TestStep.run(TestStep.java:57)
	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
	at io.cucumber.core.runner.TestCase.run(TestCase.java:95)
	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:110)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:110)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at io.cucumber.junit.Cucumber$RunBeforeAllHooks.evaluate(Cucumber.java:266)
	at io.cucumber.junit.Cucumber$RunAfterAllHooks.evaluate(Cucumber.java:281)
	at io.cucumber.junit.Cucumber$StartTestRun.evaluate(Cucumber.java:233)
	at io.cucumber.junit.Cucumber$FinishTestRun.evaluate(Cucumber.java:248)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)

2023-03-28 17:14:57.518 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group7-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group7
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:57.519 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:57.519 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.519 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.519 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097519
2023-03-28 17:14:57.519 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:57.519 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-7
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:57.520 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.520 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.520 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097520
2023-03-28 17:14:57.520 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:57.520 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:57.520 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Subscribed to topic(s): events
2023-03-28 17:14:57.520 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:57.521 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group8-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group8
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:57.522 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:57.522 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.522 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.522 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097522
2023-03-28 17:14:57.522 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:57.522 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-8
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:57.523 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.523 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.523 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097523
2023-03-28 17:14:57.523 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:57.523 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:57.523 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Subscribed to topic(s): alerts
2023-03-28 17:14:57.523 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:57.527 [Thread-10] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:57.527 [kafka-producer-network-thread | producer-7] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-7] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.527 [Thread-10] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.528 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:57.528 [kafka-producer-network-thread | producer-8] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-8] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:57.528 [kafka-producer-network-thread | producer-8] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-8] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantC"[0m[32m with node [0m[32m[1m10[0m             [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:57.529 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] (Re-)joining group
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.530 [Thread-11] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.531 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:57.532 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] (Re-)joining group
2023-03-28 17:14:57.539 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,538] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group8 in Empty state. Created a new member id test-consumer-for-alerts-1676b70d-852e-4b25-a305-31eeceee7a4b for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.542 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,538] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group7 in Empty state. Created a new member id test-consumer-for-events-29d5fd6a-dad5-44f1-9a18-11b696b72b4a for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.542 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,538] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group8 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-1676b70d-852e-4b25-a305-31eeceee7a4b with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.542 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,539] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group7 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-29d5fd6a-dad5-44f1-9a18-11b696b72b4a with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.543 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.543 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.545 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,545] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group7 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.546 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-29d5fd6a-dad5-44f1-9a18-11b696b72b4a', protocol='range'}
2023-03-28 17:14:57.546 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Finished assignment for group at generation 1: {test-consumer-for-events-29d5fd6a-dad5-44f1-9a18-11b696b72b4a=Assignment(partitions=[events-0])}
2023-03-28 17:14:57.547 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,546] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group8 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.547 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-1676b70d-852e-4b25-a305-31eeceee7a4b', protocol='range'}
2023-03-28 17:14:57.547 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Finished assignment for group at generation 1: {test-consumer-for-alerts-1676b70d-852e-4b25-a305-31eeceee7a4b=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:57.547 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.549 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,548] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-29d5fd6a-dad5-44f1-9a18-11b696b72b4a for group test-consumer-group7 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.550 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-29d5fd6a-dad5-44f1-9a18-11b696b72b4a', protocol='range'}
2023-03-28 17:14:57.550 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,549] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-1676b70d-852e-4b25-a305-31eeceee7a4b for group test-consumer-group8 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.550 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:57.550 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Adding newly assigned partitions: events-0
2023-03-28 17:14:57.550 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-1676b70d-852e-4b25-a305-31eeceee7a4b', protocol='range'}
2023-03-28 17:14:57.550 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:57.550 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:57.551 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Found no committed offset for partition events-0
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-1
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-2
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-3
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-4
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-5
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-6
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-7
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-8
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-9
2023-03-28 17:14:57.551 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Found no committed offset for partition alerts-0
2023-03-28 17:14:57.556 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-11] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.559 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=4; topics=[events]
2023-03-28 17:14:57.563 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=2; topics=[alerts]
2023-03-28 17:14:57.565 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [],
  "nextPageToken": ""
}
2023-03-28 17:14:57.581 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.584 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.585 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.586 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.694 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantC",
    "databaseId": "2",
    "uei": "",
    "reductionKey": "tenantC:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020097523",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantC"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1     |
    | alerts[0].counter == 1 |
  [32mThen [0m[32mRemember the first alert from the last response[0m                                                                        [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.rememberFirstAlertFromLastResponse()[0m
2023-03-28 17:14:57.829 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.829 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.829 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.829 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
  [32mThen [0m[32mDelete the alert[0m                                                                                                       [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.deleteTheAlert()[0m
2023-03-28 17:14:57.876 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantC"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 0 |

Scenario: Verify that alerts can be cleared by other events                                                                   [90m# org/opennms/horizon/alertservice/alert.feature:42[0m
2023-03-28 17:14:57.886 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:57.886 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:57.886 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                      [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:57.887 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group9-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group9
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:57.888 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:57.888 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.888 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.888 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097888
2023-03-28 17:14:57.888 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:57.888 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-9
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:57.889 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.889 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.889 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097889
2023-03-28 17:14:57.889 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:57.889 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:57.889 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Subscribed to topic(s): events
2023-03-28 17:14:57.889 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:57.890 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group10-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group10
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:57.891 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:57.891 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.891 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.891 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097891
2023-03-28 17:14:57.891 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:57.891 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-10
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:57.892 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:57.892 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:57.892 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020097892
2023-03-28 17:14:57.892 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:57.892 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:57.892 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Subscribed to topic(s): alerts
2023-03-28 17:14:57.892 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:57.895 [Thread-12] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:57.895 [Thread-12] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.895 [kafka-producer-network-thread | producer-9] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-9] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.895 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:57.896 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] (Re-)joining group
2023-03-28 17:14:57.896 [kafka-producer-network-thread | producer-10] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-10] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:57.896 [kafka-producer-network-thread | producer-10] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-10] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantD"[0m[32m with node [0m[32m[1m10[0m             [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:57.896 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.896 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.896 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.896 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:57.897 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:57.899 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] (Re-)joining group
2023-03-28 17:14:57.900 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,900] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group9 in Empty state. Created a new member id test-consumer-for-events-258a9f4c-3763-4920-a38f-6ac632452078 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.900 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,900] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group9 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-258a9f4c-3763-4920-a38f-6ac632452078 with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.902 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,902] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group9 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.903 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-258a9f4c-3763-4920-a38f-6ac632452078', protocol='range'}
2023-03-28 17:14:57.903 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Finished assignment for group at generation 1: {test-consumer-for-events-258a9f4c-3763-4920-a38f-6ac632452078=Assignment(partitions=[events-0])}
2023-03-28 17:14:57.904 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,903] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group10 in Empty state. Created a new member id test-consumer-for-alerts-2e150f5c-33a9-4bb4-88db-a9c5878e8500 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.904 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,904] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group10 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-2e150f5c-33a9-4bb4-88db-a9c5878e8500 with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.906 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.909 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,908] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-258a9f4c-3763-4920-a38f-6ac632452078 for group test-consumer-group9 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.909 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,908] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group10 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.909 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-2e150f5c-33a9-4bb4-88db-a9c5878e8500', protocol='range'}
2023-03-28 17:14:57.909 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Finished assignment for group at generation 1: {test-consumer-for-alerts-2e150f5c-33a9-4bb4-88db-a9c5878e8500=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:57.913 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.913 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.914 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:57.914 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-258a9f4c-3763-4920-a38f-6ac632452078', protocol='range'}
2023-03-28 17:14:57.914 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:57.914 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Adding newly assigned partitions: events-0
2023-03-28 17:14:57.915 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:57,914] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-2e150f5c-33a9-4bb4-88db-a9c5878e8500 for group test-consumer-group10 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:57.916 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-2e150f5c-33a9-4bb4-88db-a9c5878e8500', protocol='range'}
2023-03-28 17:14:57.916 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:57.916 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:57.916 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Found no committed offset for partition events-0
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-1
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-2
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-3
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-4
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-5
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-6
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-7
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-8
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-9
2023-03-28 17:14:57.920 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Found no committed offset for partition alerts-0
2023-03-28 17:14:57.923 [Thread-12] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.926 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=5; topics=[events]
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.927 [Thread-13] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:57.930 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=4; topics=[alerts]
2023-03-28 17:14:57.941 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [],
  "nextPageToken": ""
}
2023-03-28 17:14:57.959 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.959 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.959 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.959 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:57.960 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.078 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantD",
    "databaseId": "3",
    "uei": "",
    "reductionKey": "tenantD:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020097892",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantD"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1          |
    | alerts[0].counter == 1      |
    | alerts[0].severity == MINOR |
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Up"[0m[32m with tenant [0m[32m[1m"tenantD"[0m[32m with node [0m[32m[1m10[0m               [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:58.096 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.097 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.097 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.097 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.098 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.118 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantD",
    "databaseId": "3",
    "uei": "",
    "reductionKey": "tenantD:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020097892",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
2023-03-28 17:14:58.133 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.133 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.133 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.134 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.134 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.256 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantD",
    "databaseId": "3",
    "uei": "",
    "reductionKey": "tenantD:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "CLEAR",
    "counter": "2",
    "severity": "CLEARED",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020097892",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantD"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1            |
    | alerts[0].counter == 2        |
    | alerts[0].severity == CLEARED |

Scenario: Verify alert can be acknowledged and unacknowledged                                                                 [90m# org/opennms/horizon/alertservice/alert.feature:54[0m
2023-03-28 17:14:58.273 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:58.274 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:58.274 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                      [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:58.275 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group11-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group11
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:58.275 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:58.275 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.276 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.276 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098275
2023-03-28 17:14:58.276 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:58.276 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-11
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:58.276 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.276 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.276 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098276
2023-03-28 17:14:58.277 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:58.277 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:58.277 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Subscribed to topic(s): events
2023-03-28 17:14:58.277 [Thread-14] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:58.277 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group12-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group12
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:58.278 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:58.278 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.278 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.278 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098278
2023-03-28 17:14:58.278 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:58.278 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-12
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:58.279 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.279 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.279 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098279
2023-03-28 17:14:58.279 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:58.279 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:58.279 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Subscribed to topic(s): alerts
2023-03-28 17:14:58.279 [Thread-15] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:58.280 [kafka-producer-network-thread | producer-11] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-11] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:58.281 [Thread-14] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:58.281 [Thread-14] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:58.282 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:58.282 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] (Re-)joining group
2023-03-28 17:14:58.283 [kafka-producer-network-thread | producer-12] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-12] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [kafka-producer-network-thread | producer-12] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-12] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.283 [Thread-15] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantE"[0m[32m with node [0m[32m[1m10[0m             [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:58.284 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:58.284 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] (Re-)joining group
2023-03-28 17:14:58.287 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,286] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group11 in Empty state. Created a new member id test-consumer-for-events-e8e341f5-b1de-4078-b13e-43fe42154b87 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.287 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,286] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group11 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-e8e341f5-b1de-4078-b13e-43fe42154b87 with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.288 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,288] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group11 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.288 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,288] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group12 in Empty state. Created a new member id test-consumer-for-alerts-a7ac5d53-206e-4864-8b09-64132c1d5873 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.289 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,288] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group12 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-a7ac5d53-206e-4864-8b09-64132c1d5873 with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.289 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-e8e341f5-b1de-4078-b13e-43fe42154b87', protocol='range'}
2023-03-28 17:14:58.289 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Finished assignment for group at generation 1: {test-consumer-for-events-e8e341f5-b1de-4078-b13e-43fe42154b87=Assignment(partitions=[events-0])}
2023-03-28 17:14:58.290 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.290 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.290 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.291 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.291 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,291] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group12 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.292 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-a7ac5d53-206e-4864-8b09-64132c1d5873', protocol='range'}
2023-03-28 17:14:58.292 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,292] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-e8e341f5-b1de-4078-b13e-43fe42154b87 for group test-consumer-group11 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.292 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Finished assignment for group at generation 1: {test-consumer-for-alerts-a7ac5d53-206e-4864-8b09-64132c1d5873=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:58.293 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.294 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-e8e341f5-b1de-4078-b13e-43fe42154b87', protocol='range'}
2023-03-28 17:14:58.294 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:58.294 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Adding newly assigned partitions: events-0
2023-03-28 17:14:58.295 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,295] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-a7ac5d53-206e-4864-8b09-64132c1d5873 for group test-consumer-group12 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.296 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Found no committed offset for partition events-0
2023-03-28 17:14:58.296 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-a7ac5d53-206e-4864-8b09-64132c1d5873', protocol='range'}
2023-03-28 17:14:58.296 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:58.296 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-1
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-2
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-3
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-4
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-5
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-6
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-7
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-8
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-9
2023-03-28 17:14:58.298 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Found no committed offset for partition alerts-0
2023-03-28 17:14:58.302 [Thread-14] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.304 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.305 [Thread-14] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=7; topics=[events]
2023-03-28 17:14:58.309 [Thread-15] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=6; topics=[alerts]
2023-03-28 17:14:58.322 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [],
  "nextPageToken": ""
}
2023-03-28 17:14:58.334 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.334 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.335 [Thread-15] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.335 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.335 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.335 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.457 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantE",
    "databaseId": "4",
    "uei": "",
    "reductionKey": "tenantE:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020098279",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantE"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1          |
    | alerts[0].counter == 1      |
    | alerts[0].severity == MINOR |
  [32mThen [0m[32mRemember the first alert from the last response[0m                                                                        [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.rememberFirstAlertFromLastResponse()[0m
  [32mThen [0m[32mAcknowledge the alert[0m                                                                                                  [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.acknowledgeTheAlert()[0m
2023-03-28 17:14:58.520 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantE",
    "databaseId": "4",
    "uei": "",
    "reductionKey": "tenantE:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020098279",
    "isAcknowledged": true,
    "ackUser": "me",
    "ackTimeMs": "1680020098492"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantE"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1               |
    | alerts[0].counter == 1           |
    | alerts[0].isAcknowledged == true |
    | alerts[0].ackUser == me          |
    | alerts[0].ackTimeMs as long > 0  |
  [32mThen [0m[32mUnacknowledge the alert[0m                                                                                                [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.unacknowledgeTheAlert()[0m
2023-03-28 17:14:58.605 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantE",
    "databaseId": "4",
    "uei": "",
    "reductionKey": "tenantE:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020098279",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantE"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1                |
    | alerts[0].counter == 1            |
    | alerts[0].isAcknowledged == false |
    | alerts[0].ackTimeMs == 0          |

Scenario: Verify alert reduction for duplicate events                                                                         [90m# org/opennms/horizon/alertservice/alert.feature:75[0m
2023-03-28 17:14:58.627 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:58.628 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                              [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:58.628 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                      [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                            [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:58.628 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group13-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group13
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:58.629 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:58.629 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.629 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.629 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098629
2023-03-28 17:14:58.630 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:58.630 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-13
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:58.630 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.630 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.630 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098630
2023-03-28 17:14:58.630 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:58.630 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:58.630 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Subscribed to topic(s): events
2023-03-28 17:14:58.630 [Thread-16] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:58.631 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group14-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group14
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:58.632 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:58.632 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.632 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.632 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098632
2023-03-28 17:14:58.632 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:58.632 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-14
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:58.633 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:58.633 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:58.633 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020098633
2023-03-28 17:14:58.633 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:58.633 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:58.633 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Subscribed to topic(s): alerts
2023-03-28 17:14:58.633 [Thread-17] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:58.635 [kafka-producer-network-thread | producer-13] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-13] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:58.635 [Thread-16] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:58.635 [Thread-16] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:58.635 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:58.636 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] (Re-)joining group
2023-03-28 17:14:58.638 [kafka-producer-network-thread | producer-14] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-14] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [kafka-producer-network-thread | producer-14] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-14] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantF"[0m[32m with node [0m[32m[1m10[0m             [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:58.638 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:58.639 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] (Re-)joining group
2023-03-28 17:14:58.641 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,640] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group13 in Empty state. Created a new member id test-consumer-for-events-d3ddfb64-119d-4805-ae59-59bd311f161b for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.641 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,640] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group13 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-d3ddfb64-119d-4805-ae59-59bd311f161b with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.643 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,642] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group13 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.643 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-d3ddfb64-119d-4805-ae59-59bd311f161b', protocol='range'}
2023-03-28 17:14:58.643 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Finished assignment for group at generation 1: {test-consumer-for-events-d3ddfb64-119d-4805-ae59-59bd311f161b=Assignment(partitions=[events-0])}
2023-03-28 17:14:58.644 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,643] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group14 in Empty state. Created a new member id test-consumer-for-alerts-ac1e0a68-c70b-4e67-9073-8dec745f8605 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.644 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,643] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group14 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-ac1e0a68-c70b-4e67-9073-8dec745f8605 with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.645 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,644] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group14 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.645 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-ac1e0a68-c70b-4e67-9073-8dec745f8605', protocol='range'}
2023-03-28 17:14:58.645 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Finished assignment for group at generation 1: {test-consumer-for-alerts-ac1e0a68-c70b-4e67-9073-8dec745f8605=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:58.646 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,645] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-d3ddfb64-119d-4805-ae59-59bd311f161b for group test-consumer-group13 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.646 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-d3ddfb64-119d-4805-ae59-59bd311f161b', protocol='range'}
2023-03-28 17:14:58.647 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:58.647 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Adding newly assigned partitions: events-0
2023-03-28 17:14:58.648 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.648 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:58,647] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-ac1e0a68-c70b-4e67-9073-8dec745f8605 for group test-consumer-group14 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:58.649 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.649 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Found no committed offset for partition events-0
2023-03-28 17:14:58.649 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.650 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-ac1e0a68-c70b-4e67-9073-8dec745f8605', protocol='range'}
2023-03-28 17:14:58.650 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:58.650 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:58.650 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.652 [Thread-14] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.652 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-1
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-2
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-3
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-4
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-5
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-6
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-7
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-8
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-9
2023-03-28 17:14:58.652 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Found no committed offset for partition alerts-0
2023-03-28 17:14:58.654 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-16] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=8; topics=[events]
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.657 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:58.660 [Thread-17] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=7; topics=[alerts]
2023-03-28 17:14:58.675 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [],
  "nextPageToken": ""
}
2023-03-28 17:14:58.696 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.696 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.697 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.697 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.697 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.698 [Thread-17] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.698 [Thread-15] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:58.809 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantF",
    "databaseId": "5",
    "uei": "",
    "reductionKey": "tenantF:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020098633",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantF"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1          |
    | alerts[0].counter == 1      |
    | alerts[0].severity == MINOR |
  [32mThen [0m[32mVerify alert topic has [0m[32m[1m1[0m[32m messages with tenant [0m[32m[1m"tenantF"[0m                                                                [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.verifyTopicContainsTenant(int,java.lang.String)[0m
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantF"[0m[32m with node [0m[32m[1m10[0m             [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:58.829 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.829 [Thread-16] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.829 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.829 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.829 [Thread-14] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.829 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.829 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:58.845 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantF",
    "databaseId": "5",
    "uei": "",
    "reductionKey": "tenantF:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020098633",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
2023-03-28 17:14:58.982 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantF",
    "databaseId": "5",
    "uei": "",
    "reductionKey": "tenantF:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "2",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020098633",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantF"[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenant(java.lang.String,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1          |
    | alerts[0].counter == 2      |
    | alerts[0].severity == MINOR |
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: 2023-03-28T16:14:58.803Z  INFO 1 --- [        Timer-0] o.o.h.alertservice.service.AlertEngine   : Tick with: {tenantD={tenantD:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10=tenant_id: "tenantD"
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: database_id: 3
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: reduction_key: "tenantD:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10"
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: type: CLEAR
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: counter: 2
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: severity: CLEARED
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: last_update_time_ms: 1680020097892
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: }, tenantE={tenantE:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10=tenant_id: "tenantE"
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: database_id: 4
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: reduction_key: "tenantE:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10"
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: type: PROBLEM_WITH_CLEAR
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: counter: 1
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: severity: MINOR
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: last_update_time_ms: 1680020098279
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: }, tenantF={tenantF:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10=tenant_id: "tenantF"
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: database_id: 5
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: reduction_key: "tenantF:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10"
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: type: PROBLEM_WITH_CLEAR
2023-03-28 17:14:59.074 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: counter: 1
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: severity: MINOR
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: last_update_time_ms: 1680020098633
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: }, tenantA={tenantA:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10=tenant_id: "tenantA"
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: database_id: 1
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: reduction_key: "tenantA:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10"
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: type: PROBLEM_WITH_CLEAR
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: counter: 2
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: severity: MINOR
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: last_update_time_ms: 1680020093085
2023-03-28 17:14:59.075 [docker-java-stream--1017423333] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [APPLICATION] STDOUT: }}
2023-03-28 17:14:59.089 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.089 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.089 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.089 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.089 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.089 [Thread-17] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.089 [Thread-15] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
  [32mThen [0m[32mVerify alert topic has [0m[32m[1m2[0m[32m messages with tenant [0m[32m[1m"tenantF"[0m                                                                [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.verifyTopicContainsTenant(int,java.lang.String)[0m

Scenario: Verify page size 1 should return only 1 alert                                                                                        [90m# org/opennms/horizon/alertservice/alert.feature:89[0m
2023-03-28 17:14:59.097 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m                                                               [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:59.097 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m                                                               [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:59.097 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m                                                                       [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                                                                             [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                                                                             [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
2023-03-28 17:14:59.098 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group15-test-consumer-for-events
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group15
	group.instance.id = test-consumer-for-events
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:59.099 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:59.099 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:59.099 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:59.099 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020099099
2023-03-28 17:14:59.099 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:59.099 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-15
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:59.100 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:59.100 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:59.100 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020099100
2023-03-28 17:14:59.100 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic events
2023-03-28 17:14:59.100 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic events
2023-03-28 17:14:59.100 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Subscribed to topic(s): events
2023-03-28 17:14:59.100 [Thread-18] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[events]
2023-03-28 17:14:59.100 [main] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-group16-test-consumer-for-alerts
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer-group16
	group.instance.id = test-consumer-for-alerts
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2023-03-28 17:14:59.102 [main] WARN  org.apache.kafka.clients.consumer.ConsumerConfig - These configurations '[retries, acks, batch.size, buffer.memory, linger.ms]' were supplied but are not used yet.
2023-03-28 17:14:59.102 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:59.102 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:59.102 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020099102
2023-03-28 17:14:59.102 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - Idempotence will be disabled because retries is set to 0.
2023-03-28 17:14:59.102 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [PLAINTEXT://localhost:60601]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-16
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 1
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2023-03-28 17:14:59.103 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.3.1
2023-03-28 17:14:59.103 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: e23c59d00e687ff5
2023-03-28 17:14:59.103 [main] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680020099103
2023-03-28 17:14:59.103 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding consumer topic alerts
2023-03-28 17:14:59.103 [main] INFO  org.opennms.horizon.alertservice.kafkahelper.KafkaTestHelper - Adding producer topic alerts
2023-03-28 17:14:59.103 [main] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Subscribed to topic(s): alerts
2023-03-28 17:14:59.103 [Thread-19] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - STARTING KAFKA CONSUMER POLL: topics=[alerts]
2023-03-28 17:14:59.106 [kafka-producer-network-thread | producer-15] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-15] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:59.106 [Thread-18] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:59.106 [Thread-18] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:59.107 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:59.108 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] (Re-)joining group
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-0 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-5 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-8 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-2 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-9 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-1 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-4 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-6 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [kafka-producer-network-thread | producer-16] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-16] Resetting the last seen epoch of partition events-0 to 0 since the associated topicId changed from null to wKJrcK-pRema3HgM0eJ0XA
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-7 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.108 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting the last seen epoch of partition alerts-3 to 0 since the associated topicId changed from null to mFbj3JI4QDKuPGOsox9ZEg
2023-03-28 17:14:59.109 [kafka-producer-network-thread | producer-16] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-16] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
2023-03-28 17:14:59.109 [Thread-19] INFO  org.apache.kafka.clients.Metadata - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Cluster ID: 7CYNflq7R5eVnr4eO4stxg
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantG"[0m[32m with node [0m[32m[1m10[0m                              [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:59.109 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Discovered group coordinator localhost:60601 (id: 2147483646 rack: null)
2023-03-28 17:14:59.110 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] (Re-)joining group
2023-03-28 17:14:59.112 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,111] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-events and unknown member id joins group test-consumer-group15 in Empty state. Created a new member id test-consumer-for-events-7978ba40-21bc-40b9-b4f8-221e44c3297e for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.112 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,112] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group15 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-events-7978ba40-21bc-40b9-b4f8-221e44c3297e with group instance id Some(test-consumer-for-events); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.114 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,113] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group15 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.115 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-events-7978ba40-21bc-40b9-b4f8-221e44c3297e', protocol='range'}
2023-03-28 17:14:59.115 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Finished assignment for group at generation 1: {test-consumer-for-events-7978ba40-21bc-40b9-b4f8-221e44c3297e=Assignment(partitions=[events-0])}
2023-03-28 17:14:59.116 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,115] INFO [GroupCoordinator 1]: Static member with groupInstanceId=test-consumer-for-alerts and unknown member id joins group test-consumer-group16 in Empty state. Created a new member id test-consumer-for-alerts-919f8df5-ed92-47cc-b3d2-f22808e8680c for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.116 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,115] INFO [GroupCoordinator 1]: Preparing to rebalance group test-consumer-group16 in state PreparingRebalance with old generation 0 (__consumer_offsets-0) (reason: Adding new member test-consumer-for-alerts-919f8df5-ed92-47cc-b3d2-f22808e8680c with group instance id Some(test-consumer-for-alerts); client reason: ) (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.117 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,116] INFO [GroupCoordinator 1]: Stabilized group test-consumer-group16 generation 1 (__consumer_offsets-0) with 1 members (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.118 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Successfully joined group with generation Generation{generationId=1, memberId='test-consumer-for-alerts-919f8df5-ed92-47cc-b3d2-f22808e8680c', protocol='range'}
2023-03-28 17:14:59.118 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Finished assignment for group at generation 1: {test-consumer-for-alerts-919f8df5-ed92-47cc-b3d2-f22808e8680c=Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])}
2023-03-28 17:14:59.119 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.120 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.120 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,119] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-events-7978ba40-21bc-40b9-b4f8-221e44c3297e for group test-consumer-group15 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.122 [docker-java-stream--583975024] INFO  org.opennms.horizon.alertservice.testcontainers.TestContainerRunnerClassRule - [KAFKA] STDOUT: [2023-03-28 16:14:59,121] INFO [GroupCoordinator 1]: Assignment received from leader test-consumer-for-alerts-919f8df5-ed92-47cc-b3d2-f22808e8680c for group test-consumer-group16 for generation 1. The group has 1 members, 1 of which are static. (kafka.coordinator.group.GroupCoordinator)
2023-03-28 17:14:59.123 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-alerts-919f8df5-ed92-47cc-b3d2-f22808e8680c', protocol='range'}
2023-03-28 17:14:59.123 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Notifying assignor about the new Assignment(partitions=[alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9])
2023-03-28 17:14:59.123 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Adding newly assigned partitions: alerts-0, alerts-1, alerts-2, alerts-3, alerts-4, alerts-5, alerts-6, alerts-7, alerts-8, alerts-9
2023-03-28 17:14:59.123 [Thread-14] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.123 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Successfully synced group in generation Generation{generationId=1, memberId='test-consumer-for-events-7978ba40-21bc-40b9-b4f8-221e44c3297e', protocol='range'}
2023-03-28 17:14:59.123 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Notifying assignor about the new Assignment(partitions=[events-0])
2023-03-28 17:14:59.123 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Adding newly assigned partitions: events-0
2023-03-28 17:14:59.123 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.123 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.124 [Thread-16] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.124 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.125 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-1
2023-03-28 17:14:59.125 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-2
2023-03-28 17:14:59.125 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-3
2023-03-28 17:14:59.125 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-4
2023-03-28 17:14:59.125 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-5
2023-03-28 17:14:59.125 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-6
2023-03-28 17:14:59.125 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-7
2023-03-28 17:14:59.126 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-8
2023-03-28 17:14:59.126 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-9
2023-03-28 17:14:59.126 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Found no committed offset for partition alerts-0
2023-03-28 17:14:59.128 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Found no committed offset for partition events-0
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.132 [Thread-19] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Resetting offset for partition alerts-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.133 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Resetting offset for partition events-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:60601 (id: 1 rack: null)], epoch=0}}.
2023-03-28 17:14:59.136 [Thread-18] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=10; topics=[events]
2023-03-28 17:14:59.136 [Thread-19] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=9; topics=[alerts]
2023-03-28 17:14:59.144 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [],
  "nextPageToken": ""
}
2023-03-28 17:14:59.153 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.153 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.153 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.154 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.154 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.155 [Thread-19] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.155 [Thread-17] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.155 [Thread-15] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.292 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantG",
    "databaseId": "6",
    "uei": "",
    "reductionKey": "tenantG:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020099103",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantG"[0m[32m with page size [0m[32m[1m1[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenantWithPageSize(java.lang.String,int,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1          |
    | alerts[0].counter == 1      |
    | alerts[0].severity == MINOR |
  [32mThen [0m[32mSend event with UEI [0m[32m[1m"uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down"[0m[32m with tenant [0m[32m[1m"tenantG"[0m[32m with node [0m[32m[1m11[0m                              [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.sendMessageToKafkaAtTopic(java.lang.String,java.lang.String,int)[0m
2023-03-28 17:14:59.307 [Thread-10] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.307 [Thread-8] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.308 [Thread-14] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.308 [Thread-16] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.309 [Thread-18] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.309 [Thread-12] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.309 [Thread-4] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.309 [Thread-6] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[events]
2023-03-28 17:14:59.347 [main] INFO  org.opennms.horizon.alertservice.stepdefs.AlertTestSteps - Json response: {
  "alerts": [{
    "tenantId": "tenantG",
    "databaseId": "6",
    "uei": "",
    "reductionKey": "tenantG:uei.opennms.org/vendor/cisco/traps/SNMP_Link_Down:10",
    "clearKey": "",
    "type": "PROBLEM_WITH_CLEAR",
    "counter": "1",
    "severity": "MINOR",
    "description": "",
    "logMessage": "",
    "location": "",
    "firstEventTimeMs": "0",
    "lastEventId": "0",
    "lastUpdateTimeMs": "1680020099103",
    "isAcknowledged": false,
    "ackUser": "",
    "ackTimeMs": "0"
  }],
  "nextPageToken": ""
}
2023-03-28 17:14:59.358 [Thread-9] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.358 [Thread-5] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.358 [Thread-11] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.358 [Thread-19] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.359 [Thread-13] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.359 [Thread-15] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.359 [Thread-7] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
2023-03-28 17:14:59.359 [Thread-17] INFO  org.opennms.horizon.alertservice.kafkahelper.internals.KafkaProcessor - POLL returned records: count=1; topics=[alerts]
  [32mThen [0m[32mList alerts for tenant [0m[32m[1m"tenantG"[0m[32m with page size [0m[32m[1m1[0m[32m, with timeout [0m[32m[1m5000[0m[32mms, until JSON response matches the following JSON path expressions[0m [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.listAlertsForTenantWithPageSize(java.lang.String,int,int,java.util.List<java.lang.String>)[0m
    | alerts.size() == 1          |
    | alerts[0].counter == 1      |
    | alerts[0].severity == MINOR |
  [32mThen [0m[32mVerify alert topic has [0m[32m[1m2[0m[32m messages with tenant [0m[32m[1m"tenantG"[0m                                                                                 [90m# org.opennms.horizon.alertservice.stepdefs.AlertTestSteps.verifyTopicContainsTenant(int,java.lang.String)[0m

Scenario: Create a monitor policy with SNMP Trap event rule                        [90m# org/opennms/horizon/alertservice/monitor-policy.feature:10[0m
2023-03-28 17:14:59.366 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base HTTP URL http://localhost:60633
  [32mGiven [0m[32mApplication base HTTP URL in system property [0m[32m[1m"application.base-http-url"[0m   [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseHttpUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:59.366 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using base gRPC URL: http://localhost:60632
  [32mGiven [0m[32mApplication base gRPC URL in system property [0m[32m[1m"application.base-grpc-url"[0m   [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.applicationBaseGrpcUrlInSystemProperty(java.lang.String)[0m
2023-03-28 17:14:59.366 [main] INFO  org.opennms.horizon.alertservice.stepdefs.BackgroundSteps - Using Kafka base URL: PLAINTEXT://localhost:60601
  [32mGiven [0m[32mKafka bootstrap URL in system property [0m[32m[1m"kafka.bootstrap-servers"[0m           [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.kafkaRestServerURLInSystemProperty(java.lang.String)[0m
  [32mGiven [0m[32mKafka event topic [0m[32m[1m"events"[0m                                                 [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForEvents(java.lang.String)[0m
  [32mGiven [0m[32mKafka alert topic [0m[32m[1m"alerts"[0m                                                 [90m# org.opennms.horizon.alertservice.stepdefs.BackgroundSteps.createKafkaTopicForAlerts(java.lang.String)[0m
  [32mGiven [0m[32mMonitor policy name [0m[32m[1m"test-policy"[0m[32m and memo [0m[32m[1m"the test policy"[0m               [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.monitorPolicyNameAndMemo(java.lang.String,java.lang.String)[0m
  [32mGiven [0m[32mPolicy tags[0m                                                                [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.policyTags(io.cucumber.datatable.DataTable)[0m
    | SNMP Trap        |
    | Default location |
  [32mGiven [0m[32mNotify by email [0m[32m[1m"true"[0m                                                     [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.notifyByEmail(java.lang.String)[0m
  [32mGiven [0m[32mPolicy Rule name [0m[32m[1m"snmp rule"[0m[32m and componentType [0m[32m[1m"NODE"[0m                      [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.policyRuleNameAndComponentType(java.lang.String,java.lang.String)[0m
  [32mGiven [0m[32mTrigger event [0m[32m[1m"COLD_REBOOT"[0m[32m, count [0m[32m[1m3[0m[32m overtime [0m[32m[1m5[0m[32m [0m[32m[1m"MINUTE"[0m[32m, severity [0m[32m[1m"MAJOR"[0m [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.triggerEventCountOvertimeSeverity(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)[0m
2023-03-28 17:14:59.561 [main] INFO  org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps - Creating policy tenantId: "test-tenant"
name: "test-policy"
memo: "the test policy"
rules {
  tenantId: "test-tenant"
  name: "snmp rule"
  componentType: NODE
  snmpEvents {
    tenantId: "test-tenant"
    count: 3
    overtime: 5
    overtimeUnit: MINUTE
    severity: MAJOR
  }
}
tags: "SNMP Trap"
tags: "Default location"
notifyByEmail: true

  [32mThen [0m[32mCreate a new policy with give parameters[0m                                    [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.createANewPolicyWithGiveParameters()[0m
  [32mThen [0m[32mVerify the new policy has been created[0m                                      [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.verifyTheNewPolicyHasBeenCreated()[0m
  [32mThen [0m[32mList policy should contain [0m[32m[1m1[0m                                                [90m# org.opennms.horizon.alertservice.stepdefs.MonitorPolicySteps.listPolicyShouldContain(int)[0m
[32m[1m┌───────────────────────────────────────────────────────────────────────────────────┐[0m
[32m[1m│[0m Share your Cucumber Report with your team at [36m[1m[4mhttps://reports.cucumber.io[0m          [32m[1m│[0m
[32m[1m│[0m Activate publishing with one of the following:                                    [32m[1m│[0m
[32m[1m│[0m                                                                                   [32m[1m│[0m
[32m[1m│[0m src/test/resources/cucumber.properties:          [36mcucumber.publish.enabled[0m=[36mtrue[0m    [32m[1m│[0m
[32m[1m│[0m src/test/resources/junit-platform.properties:    [36mcucumber.publish.enabled[0m=[36mtrue[0m    [32m[1m│[0m
[32m[1m│[0m Environment variable:                            [36mCUCUMBER_PUBLISH_ENABLED[0m=[36mtrue[0m    [32m[1m│[0m
[32m[1m│[0m JUnit:                                           [36m@CucumberOptions[0m(publish = [36mtrue[0m) [32m[1m│[0m
[32m[1m│[0m                                                                                   [32m[1m│[0m
[32m[1m│[0m More information at [36mhttps://cucumber.io/docs/cucumber/environment-variables/[0m      [32m[1m│[0m
[32m[1m│[0m                                                                                   [32m[1m│[0m
[32m[1m│[0m Disable this message with one of the following:                                   [32m[1m│[0m
[32m[1m│[0m                                                                                   [32m[1m│[0m
[32m[1m│[0m src/test/resources/cucumber.properties:          [36mcucumber.publish.quiet[0m=[36mtrue[0m      [32m[1m│[0m
[32m[1m│[0m src/test/resources/junit-platform.properties:    [36mcucumber.publish.quiet[0m=[36mtrue[0m      [32m[1m│[0m
[32m[1m└───────────────────────────────────────────────────────────────────────────────────┘[0m
2023-03-28 17:15:00.503 [Thread-14] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-15] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-15] Node -1 disconnected.
2023-03-28 17:15:00.505 [Thread-11] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-12] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-12] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-13] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-12] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-6] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-6] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-8] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-10] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-9] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-8] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-8] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-11] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-11] Node -1 disconnected.
2023-03-28 17:15:00.505 [Thread-6] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-7] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-9] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-9] Node -1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-7] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-7] Node -1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-4] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-4] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2023-03-28 17:15:00.505 [Thread-5] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-4] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-2] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-2] Node 1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-3] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-3] Node -1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-13] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-13] Node -1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-16] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-16] Node 1 disconnected.
2023-03-28 17:15:00.505 [Thread-18] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Node 1 disconnected.
2023-03-28 17:15:00.503 [Thread-15] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Node 1 disconnected.
2023-03-28 17:15:00.506 [Thread-19] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Node 1 disconnected.
2023-03-28 17:15:00.506 [Thread-17] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Node 1 disconnected.
2023-03-28 17:15:00.506 [Thread-11] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Cancelled in-flight FETCH request with correlation id 20 due to node 1 being disconnected (elapsed time since creation: 642ms, elapsed time since send: 642ms, request timeout: 30000ms)
2023-03-28 17:15:00.506 [Thread-13] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Cancelled in-flight FETCH request with correlation id 18 due to node 1 being disconnected (elapsed time since creation: 643ms, elapsed time since send: 643ms, request timeout: 30000ms)
2023-03-28 17:15:00.506 [Thread-12] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Cancelled in-flight FETCH request with correlation id 18 due to node 1 being disconnected (elapsed time since creation: 189ms, elapsed time since send: 189ms, request timeout: 30000ms)
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-14] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-14] Node 1 disconnected.
2023-03-28 17:15:00.506 [Thread-7] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Cancelled in-flight FETCH request with correlation id 24 due to node 1 being disconnected (elapsed time since creation: 643ms, elapsed time since send: 643ms, request timeout: 30000ms)
2023-03-28 17:15:00.506 [Thread-4] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Cancelled in-flight FETCH request with correlation id 32 due to node 1 being disconnected (elapsed time since creation: 192ms, elapsed time since send: 192ms, request timeout: 30000ms)
2023-03-28 17:15:00.506 [Thread-5] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Cancelled in-flight FETCH request with correlation id 32 due to node 1 being disconnected (elapsed time since creation: 643ms, elapsed time since send: 643ms, request timeout: 30000ms)
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-10] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-10] Node 1 disconnected.
2023-03-28 17:15:00.506 [kafka-producer-network-thread | producer-10] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-10] Node -1 disconnected.
2023-03-28 17:15:00.506 [kafka-producer-network-thread | producer-4] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-4] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-12] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-7] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-4] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Node -1 disconnected.
2023-03-28 17:15:00.505 [kafka-producer-network-thread | producer-5] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-5] Node -1 disconnected.
2023-03-28 17:15:00.506 [kafka-producer-network-thread | producer-16] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-16] Node -1 disconnected.
2023-03-28 17:15:00.506 [kafka-producer-network-thread | producer-2] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-2] Node -1 disconnected.
2023-03-28 17:15:00.506 [kafka-producer-network-thread | producer-6] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-6] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-18] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Cancelled in-flight FETCH request with correlation id 13 due to node 1 being disconnected (elapsed time since creation: 192ms, elapsed time since send: 192ms, request timeout: 30000ms)
2023-03-28 17:15:00.506 [Thread-18] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-5] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-18] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Node 2147483646 disconnected.
2023-03-28 17:15:00.506 [Thread-5] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [kafka-producer-network-thread | producer-8] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-8] Node -1 disconnected.
2023-03-28 17:15:00.507 [Thread-12] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [Thread-11] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Node -1 disconnected.
2023-03-28 17:15:00.507 [Thread-7] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [Thread-11] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Node 2147483646 disconnected.
2023-03-28 17:15:00.506 [Thread-15] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Cancelled in-flight FETCH request with correlation id 16 due to node 1 being disconnected (elapsed time since creation: 641ms, elapsed time since send: 641ms, request timeout: 30000ms)
2023-03-28 17:15:00.507 [Thread-15] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Node -1 disconnected.
2023-03-28 17:15:00.507 [Thread-15] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [Thread-4] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [kafka-producer-network-thread | producer-14] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-14] Node -1 disconnected.
2023-03-28 17:15:00.507 [kafka-coordinator-heartbeat-thread | test-consumer-group2] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.507 [kafka-producer-network-thread | producer-12] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-12] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-14] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Cancelled in-flight FETCH request with correlation id 16 due to node 1 being disconnected (elapsed time since creation: 190ms, elapsed time since send: 190ms, request timeout: 30000ms)
2023-03-28 17:15:00.507 [Thread-14] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Node -1 disconnected.
2023-03-28 17:15:00.507 [Thread-14] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [Thread-13] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Node -1 disconnected.
2023-03-28 17:15:00.507 [kafka-coordinator-heartbeat-thread | test-consumer-group9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.507 [kafka-coordinator-heartbeat-thread | test-consumer-group8] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.507 [kafka-coordinator-heartbeat-thread | test-consumer-group1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.506 [Thread-17] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Cancelled in-flight FETCH request with correlation id 15 due to node 1 being disconnected (elapsed time since creation: 644ms, elapsed time since send: 644ms, request timeout: 30000ms)
2023-03-28 17:15:00.506 [Thread-19] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Cancelled in-flight FETCH request with correlation id 13 due to node 1 being disconnected (elapsed time since creation: 644ms, elapsed time since send: 644ms, request timeout: 30000ms)
2023-03-28 17:15:00.507 [Thread-17] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-16] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Node 1 disconnected.
2023-03-28 17:15:00.507 [Thread-17] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [kafka-coordinator-heartbeat-thread | test-consumer-group11] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [Thread-16] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Cancelled in-flight FETCH request with correlation id 15 due to node 1 being disconnected (elapsed time since creation: 193ms, elapsed time since send: 193ms, request timeout: 30000ms)
2023-03-28 17:15:00.508 [Thread-16] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-8] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Cancelled in-flight FETCH request with correlation id 20 due to node 1 being disconnected (elapsed time since creation: 193ms, elapsed time since send: 193ms, request timeout: 30000ms)
2023-03-28 17:15:00.506 [Thread-10] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Cancelled in-flight FETCH request with correlation id 19 due to node 1 being disconnected (elapsed time since creation: 193ms, elapsed time since send: 193ms, request timeout: 30000ms)
2023-03-28 17:15:00.508 [Thread-10] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Node -1 disconnected.
2023-03-28 17:15:00.508 [Thread-10] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Node 2147483646 disconnected.
2023-03-28 17:15:00.506 [Thread-6] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Cancelled in-flight FETCH request with correlation id 24 due to node 1 being disconnected (elapsed time since creation: 189ms, elapsed time since send: 189ms, request timeout: 30000ms)
2023-03-28 17:15:00.508 [Thread-6] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Node -1 disconnected.
2023-03-28 17:15:00.506 [Thread-9] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Cancelled in-flight FETCH request with correlation id 21 due to node 1 being disconnected (elapsed time since creation: 643ms, elapsed time since send: 643ms, request timeout: 30000ms)
2023-03-28 17:15:00.508 [Thread-6] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Node 2147483646 disconnected.
2023-03-28 17:15:00.508 [Thread-9] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Node -1 disconnected.
2023-03-28 17:15:00.508 [Thread-9] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [Thread-13] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Node 2147483646 disconnected.
2023-03-28 17:15:00.508 [Thread-9] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Cancelled in-flight HEARTBEAT request with correlation id 22 due to node 2147483646 being disconnected (elapsed time since creation: 154ms, elapsed time since send: 154ms, request timeout: 30000ms)
2023-03-28 17:15:00.507 [Thread-12] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Error sending fetch request (sessionId=1179256643, epoch=9) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-10] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Error sending fetch request (sessionId=1435713595, epoch=10) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.507 [Thread-18] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Error sending fetch request (sessionId=1446568052, epoch=4) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-13] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Error sending fetch request (sessionId=608759093, epoch=9) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.507 [Thread-5] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Error sending fetch request (sessionId=1660115297, epoch=20) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-9] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Error sending fetch request (sessionId=662546295, epoch=12) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-18] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [Thread-6] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Error sending fetch request (sessionId=15204374, epoch=14) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-9] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [kafka-coordinator-heartbeat-thread | test-consumer-group10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.507 [Thread-7] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Error sending fetch request (sessionId=663154362, epoch=14) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-10] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [Thread-7] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.507 [Thread-19] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Node -1 disconnected.
2023-03-28 17:15:00.508 [Thread-19] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [Thread-4] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Error sending fetch request (sessionId=1379638442, epoch=20) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-19] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Error sending fetch request (sessionId=1096802494, epoch=4) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-16] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Node 2147483646 disconnected.
2023-03-28 17:15:00.507 [Thread-11] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Error sending fetch request (sessionId=823845033, epoch=11) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-8] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Node -1 disconnected.
2023-03-28 17:15:00.508 [Thread-16] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Error sending fetch request (sessionId=1430642070, epoch=6) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.507 [Thread-17] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Error sending fetch request (sessionId=1209726616, epoch=6) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.507 [Thread-15] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Error sending fetch request (sessionId=2019618887, epoch=7) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [Thread-17] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [kafka-coordinator-heartbeat-thread | test-consumer-group3] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [kafka-coordinator-heartbeat-thread | test-consumer-group16] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.507 [Thread-14] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Error sending fetch request (sessionId=60310761, epoch=7) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [Thread-8] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Node 2147483646 disconnected.
2023-03-28 17:15:00.508 [Thread-15] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.508 [Thread-8] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Cancelled in-flight HEARTBEAT request with correlation id 21 due to node 2147483646 being disconnected (elapsed time since creation: 139ms, elapsed time since send: 139ms, request timeout: 30000ms)
2023-03-28 17:15:00.508 [Thread-8] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Error sending fetch request (sessionId=164961239, epoch=11) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.508 [kafka-coordinator-heartbeat-thread | test-consumer-group5] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Group coordinator localhost:60601 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-28 17:15:00.509 [kafka-producer-network-thread | producer-5] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-5] Node 1 disconnected.
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-7] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-7] Node 1 disconnected.
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-5] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-5] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-11] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-11] Node 1 disconnected.
2023-03-28 17:15:00.509 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-11] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-11] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-15] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-15] Node 1 disconnected.
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-15] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-15] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-13] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-13] Node 1 disconnected.
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-9] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-9] Node 1 disconnected.
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-7] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-7] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-9] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-9] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-3] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-3] Node 1 disconnected.
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-13] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-13] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-03-28 17:15:00.510 [kafka-producer-network-thread | producer-3] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-3] Cancelled in-flight API_VERSIONS request with correlation id 2 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-03-28 17:15:00.568 [Thread-13] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Node 1 disconnected.
2023-03-28 17:15:00.568 [Thread-17] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Node 1 disconnected.
2023-03-28 17:15:00.568 [Thread-17] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.568 [Thread-13] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.568 [Thread-19] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Node 1 disconnected.
2023-03-28 17:15:00.568 [Thread-9] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Node 1 disconnected.
2023-03-28 17:15:00.568 [Thread-19] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.568 [Thread-9] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.568 [Thread-17] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Error sending fetch request (sessionId=1209726616, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.568 [Thread-9] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group6-test-consumer-for-alerts, groupId=test-consumer-group6] Error sending fetch request (sessionId=662546295, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.568 [Thread-13] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Error sending fetch request (sessionId=608759093, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.568 [Thread-19] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group16-test-consumer-for-alerts, groupId=test-consumer-group16] Error sending fetch request (sessionId=1096802494, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.569 [Thread-15] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Node 1 disconnected.
2023-03-28 17:15:00.569 [Thread-15] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.569 [Thread-15] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group12-test-consumer-for-alerts, groupId=test-consumer-group12] Error sending fetch request (sessionId=2019618887, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.571 [Thread-11] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Node 1 disconnected.
2023-03-28 17:15:00.571 [Thread-11] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.571 [Thread-11] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Error sending fetch request (sessionId=823845033, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.571 [Thread-5] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Node 1 disconnected.
2023-03-28 17:15:00.571 [Thread-5] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.571 [Thread-5] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group2-test-consumer-for-alerts, groupId=test-consumer-group2] Error sending fetch request (sessionId=1660115297, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.571 [Thread-7] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Node 1 disconnected.
2023-03-28 17:15:00.571 [Thread-7] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.571 [Thread-7] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Error sending fetch request (sessionId=663154362, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2023-03-28 17:15:00.604 [Thread-14] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Node 1 disconnected.
2023-03-28 17:15:00.604 [Thread-14] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group11-test-consumer-for-events, groupId=test-consumer-group11] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.605 [kafka-producer-network-thread | producer-10] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-10] Node 1 disconnected.
2023-03-28 17:15:00.605 [kafka-producer-network-thread | producer-10] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-10] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.605 [kafka-producer-network-thread | producer-16] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-16] Node 1 disconnected.
2023-03-28 17:15:00.605 [kafka-producer-network-thread | producer-16] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-16] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.605 [kafka-producer-network-thread | producer-8] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-8] Node 1 disconnected.
2023-03-28 17:15:00.605 [kafka-producer-network-thread | producer-8] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-8] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-14] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-14] Node 1 disconnected.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-14] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-14] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-2] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-2] Node 1 disconnected.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-6] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-6] Node 1 disconnected.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-6] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-6] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-2] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-2] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [Thread-8] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Node 1 disconnected.
2023-03-28 17:15:00.606 [Thread-8] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group5-test-consumer-for-events, groupId=test-consumer-group5] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-4] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-4] Node 1 disconnected.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-4] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-4] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [Thread-18] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Node 1 disconnected.
2023-03-28 17:15:00.606 [Thread-18] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group15-test-consumer-for-events, groupId=test-consumer-group15] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [Thread-12] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Node 1 disconnected.
2023-03-28 17:15:00.606 [Thread-12] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group9-test-consumer-for-events, groupId=test-consumer-group9] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [Thread-4] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Node 1 disconnected.
2023-03-28 17:15:00.606 [Thread-4] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group1-test-consumer-for-events, groupId=test-consumer-group1] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-12] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-12] Node 1 disconnected.
2023-03-28 17:15:00.606 [Thread-10] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Node 1 disconnected.
2023-03-28 17:15:00.606 [kafka-producer-network-thread | producer-12] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-12] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.606 [Thread-10] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group7-test-consumer-for-events, groupId=test-consumer-group7] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.607 [Thread-6] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Node 1 disconnected.
2023-03-28 17:15:00.607 [Thread-6] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group3-test-consumer-for-events, groupId=test-consumer-group3] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.607 [Thread-16] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Node 1 disconnected.
2023-03-28 17:15:00.607 [Thread-16] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-events, clientId=consumer-test-consumer-group13-test-consumer-for-events, groupId=test-consumer-group13] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.609 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2023-03-28 17:15:00.610 [kafka-producer-network-thread | producer-1] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.610 [kafka-producer-network-thread | producer-5] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-5] Node 1 disconnected.
2023-03-28 17:15:00.610 [kafka-producer-network-thread | producer-5] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-5] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.610 [kafka-producer-network-thread | producer-13] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-13] Node 1 disconnected.
2023-03-28 17:15:00.610 [kafka-producer-network-thread | producer-13] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-13] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.610 [kafka-producer-network-thread | producer-9] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-9] Node 1 disconnected.
2023-03-28 17:15:00.610 [kafka-producer-network-thread | producer-9] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-9] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-3] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-3] Node 1 disconnected.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-15] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-15] Node 1 disconnected.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-11] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-11] Node 1 disconnected.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-3] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-3] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-15] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-15] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-11] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-11] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-7] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-7] Node 1 disconnected.
2023-03-28 17:15:00.611 [kafka-producer-network-thread | producer-7] WARN  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-7] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 75.131 s - in org.opennms.horizon.alertservice.CucumberRunnerIT
2023-03-28 17:15:00.659 [Thread-17] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Node 1 disconnected.
2023-03-28 17:15:00.659 [Thread-11] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Node 1 disconnected.
2023-03-28 17:15:00.659 [Thread-17] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group14-test-consumer-for-alerts, groupId=test-consumer-group14] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.659 [Thread-7] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Node 1 disconnected.
2023-03-28 17:15:00.659 [Thread-11] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group8-test-consumer-for-alerts, groupId=test-consumer-group8] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.659 [Thread-7] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group4-test-consumer-for-alerts, groupId=test-consumer-group4] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.669 [Thread-13] INFO  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Node 1 disconnected.
2023-03-28 17:15:00.669 [Thread-13] WARN  org.apache.kafka.clients.NetworkClient - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Connection to node 1 (localhost/127.0.0.1:60601) could not be established. Broker may not be available.
2023-03-28 17:15:00.669 [Thread-13] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer instanceId=test-consumer-for-alerts, clientId=consumer-test-consumer-group10-test-consumer-for-alerts, groupId=test-consumer-group10] Error sending fetch request (sessionId=608759093, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- failsafe:3.0.0-M7:integration-test (horizon-developer-test) @ alert-service ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- failsafe:3.0.0-M7:verify (horizon-verify-it) @ alert-service ---
[INFO] 
[INFO] --- install:3.1.0:install (default-install) @ alert-service ---
[INFO] Installing /Users/rellis/horizon-stream-project/alert/pom.xml to /Users/rellis/.m2/repository/org/opennms/horizon/alertservice/alert-service/0.1.0-SNAPSHOT/alert-service-0.1.0-SNAPSHOT.pom
[INFO] Installing /Users/rellis/horizon-stream-project/alert/target/alert-service-0.1.0-SNAPSHOT.jar to /Users/rellis/.m2/repository/org/opennms/horizon/alertservice/alert-service/0.1.0-SNAPSHOT/alert-service-0.1.0-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:25 min
[INFO] Finished at: 2023-03-28T17:15:01+01:00
[INFO] ------------------------------------------------------------------------
