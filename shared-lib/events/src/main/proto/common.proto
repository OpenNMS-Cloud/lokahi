/*******************************************************************************
 * This file is part of OpenNMS(R).
 *
 * Copyright (C) 2023 The OpenNMS Group, Inc.
 * OpenNMS(R) is Copyright (C) 1999-2023 The OpenNMS Group, Inc.
 *
 * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.
 *
 * OpenNMS(R) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * OpenNMS(R) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with OpenNMS(R).  If not, see:
 *      http://www.gnu.org/licenses/
 *
 * For more information contact:
 *     OpenNMS(R) Licensing <license@opennms.org>
 *     http://www.opennms.org/
 *     http://www.opennms.com/
 *******************************************************************************/
syntax = "proto3";

package opennms.model;
option java_multiple_files = true;
option java_package = "org.opennms.horizon.model.common.proto";

enum Severity {
  // No or missing value
  SEVERITY_UNDEFINED = 0;
  // The Indeterminate severity level indicates that the severity level cannot be determined.
  INDETERMINATE = 1;
  // The Cleared severity level indicates the clearing of one or more previously reported alarms. This
  // alarm clears all alarms for this managed object that have the same Alarm type, Probable cause and
  // Specific problems (if given).
  CLEARED = 2;
  // Informational only.
  NORMAL = 3;
  // The Warning severity level indicates the detection of a potential or impending service affecting
  // fault, before any significant effects have been felt. Action should be taken to further diagnose (if
  // necessary) and correct the problem in order to prevent it from becoming a more serious service affecting
  // fault.
  WARNING = 4;
  // The Minor severity level indicates the existence of a non-service affecting fault condition and that
  // corrective action should be taken in order to prevent a more serious (for example, service affecting) fault.
  // Such a severity can be reported, for example, when the detected alarm condition is not currently
  // degrading the capacity of the managed object.
  MINOR = 5;
  // The Major severity level indicates that a service affecting condition has developed and an urgent
  // corrective action is required. Such a severity can be reported, for example, when there is a severe
  // degradation in the capability of the managed object and its full capability must be restored.
  MAJOR = 6;
  // The Critical severity level indicates that a service affecting condition has occurred and an
  // immediate corrective action is required. Such a severity can be reported, for example, when a managed
  // object becomes totally out of service and its capability must be restored.
  CRITICAL = 7;
}
