<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>minion</artifactId>
        <groupId>org.opennms.horizon.minion</groupId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>docker-assembly</artifactId>

    <name>OpenNms Horizon :: Minion :: Docker</name>
    <description>Create docker image for the application.</description>

    <properties>
        <skip-docker-image-build>false</skip-docker-image-build>
        <docker.image>opennms/horizon-stream-minion:${docker.image.tag}</docker.image>
        <docker.image.tag>local</docker.image.tag>
        <docker.image.skipPush>false</docker.image.skipPush>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.opennms.horizon.minion</groupId>
            <artifactId>assembly</artifactId>
            <version>0.1.0-SNAPSHOT</version>
            <type>tar.gz</type>
            <!--<classifier>tar.gz</classifier>-->
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--                                  -->
            <!-- COPY AND UNPACK THE TGZ ASSEMBLY -->
            <!--  FOR USE WITH THE DOCKERFILE     -->
            <!--                                  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.opennms.horizon.minion</groupId>
                                    <artifactId>assembly</artifactId>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <fileMappers>
                                      <org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                                        <pattern>^\Qassembly-${project.version}/\E</pattern>
                                        <replacement>./</replacement>
                                      </org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                                    </fileMappers>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/minion/opt/karaf</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <from>
                        <image>opennms/deploy-base:jre-1.2.0.b105</image>
                    </from>
                    <to>
                        <image>${docker.image}</image>
                    </to>
                    <container>
                        <entrypoint>
                            <entrypoint>/opt/karaf/bin/karaf</entrypoint>
                        </entrypoint>
                        <args>
                            <arg>daemon</arg>
                        </args>
<!--                        <user>nobody</user>-->
                        <appRoot>/opt/karaf</appRoot>
                        <workingDirectory>/opt/karaf</workingDirectory>
                        <environment>

                        </environment>
                        <labels>
                            <!--
                            <org.opencontainers.image.created>${BUILD_DATE}</org.opencontainers.image.created>
                            <org.opencontainers.image.title>TBD ${VERSION}</org.opencontainers.image.title>
                            <org.opencontainers.image.source>${SOURCE}</org.opencontainers.image.source>
                            <org.opencontainers.image.revision>${REVISION}</org.opencontainers.image.revision>
                            <org.opencontainers.image.version>${VERSION}</org.opencontainers.image.version>
                            -->
                            <org.opencontainers.image.vendor>The OpenNMS Group, Inc.</org.opencontainers.image.vendor>
                            <org.opencontainers.image.authors>OpenNMS Community</org.opencontainers.image.authors>
                            <org.opencontainers.image.licenses>AGPL-3.0</org.opencontainers.image.licenses>
                            <!--
                            <org.opennms.image.base>${BASE_IMAGE}</org.opennms.image.base>
                            <org.opennme.cicd.jobid>${BUILD_JOB_ID}</org.opennme.cicd.jobid>
                            <org.opennms.cicd.buildnumber>${BUILD_NUMBER}</org.opennms.cicd.buildnumber>
                            <org.opennms.cicd.buildurl>${BUILD_URL}</org.opennms.cicd.buildurl>
                            <org.opennms.cicd.branch>${BUILD_BRANCH}</org.opennms.cicd.branch>
                            -->
                        </labels>
                        <ports>
                            <port>5005</port>
                            <port>8101</port>
                            <port>8181</port>
                        </ports>

                    </container>
                    <extraDirectories>
                        <paths>
                            <path>${project.build.directory}/minion/</path>
                        </paths>
                        <permissions>
                            <permission>
                                <file>/opt/karaf/bin/karaf</file>
                                <mode>755</mode>
                            </permission>
                        </permissions>
                    </extraDirectories>
                    <pluginExtensions>

                        <pluginExtension>
                            <implementation>org.opennms.horizon.shared.maven.jib.extension.LayerRemover</implementation>
                        </pluginExtension>
                        <pluginExtension>
                            <implementation>com.google.cloud.tools.jib.maven.extension.layerfilter.JibLayerFilterExtension</implementation>
                            <configuration implementation="com.google.cloud.tools.jib.maven.extension.layerfilter.Configuration">
                                <filters>
                                    <!-- Declare layer ordering -->
                                    <filter>
                                        <glob>_nothing_</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>_nothing_</glob>
                                        <toLayer>apache</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>_nothing_</glob>
                                        <toLayer>third-party</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>_nothing_</glob>
                                        <toLayer>opennms</toLayer>
                                    </filter>

                                    <!-- actual filters -->
                                    <filter>
                                        <glob>/opt/karaf/bin/**</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/data/**</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/deploy/**</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/etc/**</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/lib/**</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/system</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/system/**</glob>
                                        <toLayer>third-party</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/system/org/apache/**</glob>
                                        <toLayer>apache</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/system/org/apache/karaf/**</glob>
                                        <toLayer>karaf</toLayer>
                                    </filter>
                                    <filter>
                                        <glob>/opt/karaf/system/org/opennms/**</glob>
                                        <toLayer>opennms</toLayer>
                                    </filter>
                                </filters>
                            </configuration>
                        </pluginExtension>
                    </pluginExtensions>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-layer-filter-extension-maven</artifactId>
                        <version>0.3.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.opennms.horizon.shared</groupId>
                        <artifactId>jib-extensions</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <!-- BUILD THE DOCKER IMAGE -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <skip>${skip-docker-image-build}</skip>
                            <showLogs>true</showLogs>
                            <images>
                                <image>
                                    <name>${docker.image}</name>
                                    <build>
                                        <dockerFileDir>app</dockerFileDir>
                                        <filter>@</filter>
                                        <assemblies>
                                            <!-- COPY the assembly contents to the docker build directory under subdirectory "worK" -->
                                            <assembly>
                                                <name>work</name>
                                                <inline>
                                                    <id>copy-archive</id>
                                                    <fileSets>
                                                        <fileSet>
                                                            <directory>${project.build.directory}/dependency/assembly-${project.version}</directory>
                                                            <outputDirectory>karaf</outputDirectory>
                                                        </fileSet>
                                                    </fileSets>
                                                </inline>
                                            </assembly>
                                        </assemblies>
                                        <skipPush>${docker.image.skipPush}</skipPush> <!-- only applies to the push goal - not the build goal -->
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
