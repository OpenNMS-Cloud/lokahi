apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
#  annotations:
#    kubernetes.io/ingress.class: "ingress-nginx"
    #cert-manager.io/issue-temporary-certificate: "true"
    #acme.cert-manager.io/http01-edit-in-place: "true"
    #cert-manager.io/cluster-issuer: "letsencrypt-prod"

    #nginx.ingress.kubernetes.io/auth-realm: Authentication Required - grafana
    #nginx.ingress.kubernetes.io/auth-secret: basic-auth
    #nginx.ingress.kubernetes.io/auth-type: basic
    #nginx.ingress.kubernetes.io/configuration-snippet: |
    #  #proxy_pass http://$upstream/$1;
    #  proxy_set_header X-WEBAUTH-USER $remote_user;
    #  #proxy_set_header Authorization "";
spec:
  ingressClassName: nginx
  #tls:
  #- hosts:
  #  - grafana-sso.devtenant.oaaslite.opennms.com
  #  secretName: wildcard
  rules:
  #- host: grafana-sso.devtenant.oaaslite.opennms.com
  - host: keycloak
  #- host: localhostgrafana
    http:
      paths:
      - path: /grafana
      #- path: /
        pathType: Prefix
        backend:
          service: 
            name: grafana
            port:
              number: 3000
  tls:
  - hosts:
    - keycloak
    secretName: local-dev-tls-secret
