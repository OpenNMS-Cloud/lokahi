{{- if .Values.ingress.defaultEndpointsEnabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: opennms-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- range $Annotation, $Value := .Values.openNMS.ui.ingressAnnotations }}
    {{ $Annotation | quote }}: {{ $Value | quote }}
    {{- end }}
spec:
  {{- if eq (include "onOpenShift" .) "false" }}
  ingressClassName: nginx
  {{- end }}
  defaultBackend:
    service:
      name: {{ .Values.openNMS.ui.serviceName }}
      port:
        number: {{ .Values.openNMS.ui.port }}
  rules:
    - host: {{ .Values.host }}
      http:
        paths:
          - path: {{ .Values.openNMS.ui.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.openNMS.ui.serviceName }}
                port:
                  number: {{ .Values.openNMS.ui.port }}
          - path: {{ .Values.keycloak.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.keycloak.serviceName }}
                port:
                  number: {{ .Values.keycloak.port }}
          - path: {{ .Values.openNMS.api.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.openNMS.api.serviceName }}
                port:
                  number: 9090
          - path: {{ .Values.grafana.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.grafana.serviceName }}
                port:
                  number: {{ .Values.grafana.port }}
          {{- if .Values.prometheus.enabled }}
          - path: {{ .Values.prometheus.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.prometheus.serviceName }}
                port:
                  number: {{ .Values.prometheus.port }}
          {{- end }}
  {{- if .Values.tls.enabled }}
  tls:
    - hosts:
        -  {{.Values.host }}
      secretName: {{ .Values.openNMS.ui.tlsSecretName }}
  {{- end }}
{{- end }}
