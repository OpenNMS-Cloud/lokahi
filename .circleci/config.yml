version: 2.1

executors:
  build-executor:
    docker:
      - image: circleci/openjdk:11.0.7-jdk-buster
        environment:
          MAVEN_OPTS: -Xmx1g
  test-executor:
      machine:
          image: ubuntu-2004:202010-01

workflows:
  build-deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - docker-build:
          requires:
            - build

jobs:
  build:
    executor: build-executor
    working_directory: ~/horizon-stream/platform
    steps:
      - checkout:
          path: ~/horizon-stream
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Compile source without tests
          command: |
            mvn -DskipITs=true -DskipTests=true clean install

      - persist_to_workspace:
          root: ~/
          paths:
            - .m2
            - horizon-stream
      - run:
          name: Remove build artifacts before storing Maven repository in cache
          command: |
            rm -rf ~/.m2/repository/org/opennms/horizon/
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

  tests:
    executor: test-executor
    working_directory: ~/horizon-stream/platform
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - run:
          name: DEBUG list contents of .m2 folder
          command: |
            find ~/.m2 -ls
      - run:
          name: Run system test with docker-compose
          command: |
            mvn -DskipITs=false -DskipTests=false clean install test integration-test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

  docker-build:
    executor: build-executor
    working_directory: ~/horizon-stream/platform
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - run:
          name: Build the Docker containers
          command: |
            mvn docker:build

