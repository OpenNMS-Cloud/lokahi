name: release

on:
  push:
    branches:
      - 'jira/HS-872-fix-release-cicd-Wrkflw-since-merg-pipeline-refactor'
  #pull_request:
  #  branches:
  #    - 'develop'
  workflow_call:
    inputs:
      image-tag:
        description: 'Tag for all images'
        required: false
        type: string
      image-registry:
        description: 'Docker image registry for all images'
        required: false
        type: string

env:
  IMAGE_TAG: ${{ inputs.image-tag || github.sha }}
  IMAGE_REGISTRY: ${{ inputs.image-registry || 'ghcr.io' }}

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.extract-tag.outputs.image-tag }}
    steps:
    - name: init
      id: extract-tag
      run: |
        TAG=$(echo ${{ github.event.head_commit.message }} | awk '{ print $2 }')

        echo "Head commit message: ${{ github.event.head_commit.message }}"
        echo "Extracted tag: $TAG."
        
        # Validate tag format
        # Format of commit message: RELEASE <tag> - <message>
        # Format of tag (change numbers or dev, but leave everything else): 
        #   v0.0.5-dev
        #   v0.0.5
        if [[ $TAG =~ ^v[0-9]+.[0-9]+.([0-9]+-[a-z]+|[0-9]+)$ ]]
        then
          echo "Valid format, proceed with test."
        else
          echo "Tag format is invalid."
          exit 1
        fi

        echo "release-tag=$TAG" >> $GITHUB_OUTPUT
        echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV
  build-all:
    needs: tag
    uses: ./.github/workflows/develop.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || github.sha }}
      image-registry: 'ghcr.io'
  release:
    needs: [tag, build-all]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [
          'opennms-cloud/horizon-stream-alarm',
          'opennms-cloud/horizon-stream-datachoices',
          'opennms-cloud/horizon-stream-events',
          'opennms-cloud/horizon-stream-grafana',
          'opennms-cloud/horizon-stream-inventory',
          'opennms-cloud/horizon-stream-keycloak-ui',
          'opennms-cloud/horizon-stream-metrics-processor',
          'opennms-cloud/horizon-stream-minion',
          'opennms-cloud/horizon-stream-minion-gateway',
          'opennms-cloud/horizon-stream-minion-gateway-grpc-proxy',
          'opennms-cloud/horizon-stream-notifications',
          'opennms-cloud/horizon-stream-operator',
          'opennms-cloud/horizon-stream-rest-server',
          'opennms-cloud/horizon-stream-ui',
        ]
    environment: docker-publish-account
    # Environment that contains the required secrets.
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        # Is required to call actions.

      - name: Log in to the Container registry
        # Need to pull images from github container registry first.
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish images
        run: |

          echo "github.sha - " ${{ env.IMAGE_TAG }}

          docker pull ghcr.io/opennms-cloud/horizon-stream-minion-gateway:eb00131f443b3c830defcc171dd50009386d7fd7 

          docker pull ghcr.io/${{ matrix.image }}:${{ env.IMAGE_TAG }}
          docker images

          echo "Test - matrix " ${{ matrix.image }}
          echo "Test - image_tag " ${{ env.IMAGE_TAG }} 
          echo "Test - release_tag " ${{ env.RELEASE_TAG }}
          docker tag ${{ matrix.image }}:${{ env.RELEASE_TAG }}
          docker tag ghcr.io/opennms-cloud/horizon-stream-minion-gateway:eb00131f443b3c830defcc171dd50009386d7fd7 \
            opennms/horizon-stream-minion-gateway:latest
          docker tag ghcr.io/${{ matrix.image }}:${{ env.IMAGE_TAG }} \
            opennms/horizon-stream-minion-gateway:latest-2
          docker images

          # Tag and save the image as a file to be published. Both release version and latest.
          docker tag ghcr.io/${{ matrix.image }}:${{ env.IMAGE_TAG }} ${{ matrix.image }}:latest
          docker tag ghcr.io/${{ matrix.image }}:${{ env.IMAGE_TAG }} ${{ matrix.image }}:${{ env.RELEASE_TAG }}

          docker images

          #docker push ${{ matrix.image }}:latest

      - name: Log in to Dockerhub
        # Need to log into Dockerhub to push images.
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASS }}

