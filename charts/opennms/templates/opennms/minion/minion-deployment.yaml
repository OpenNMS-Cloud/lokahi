apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.Minion.ServiceName }}
  labels:
    app: {{ .Values.OpenNMS.Minion.ServiceName }}
  namespace: {{ .Values.Namespace }}
spec:
  selector:
    matchLabels:
      run: {{ .Values.OpenNMS.Minion.ServiceName }}
  replicas: {{ .Values.OpenNMS.Minion.Replicas }}
  template:
    metadata:
      labels:
        run: {{ .Values.OpenNMS.Minion.ServiceName }}
    spec:
      volumes:
        - name: minion-config-volume
          configMap:
            name: {{ .Values.OpenNMS.Minion.ServiceName }}-config-map
      containers:
        - name: minion
          image: {{ .Values.OpenNMS.Minion.Image }}
          imagePullPolicy: {{ .Values.OpenNMS.Minion.ImagePullPolicy }}
          args: ["-f"]
          env:
            - name: KARAF_DEBUG
              value: "true"
            - name: TZ
              value: "America/New_York"
            - name: JAVA_MIN_MEM
              value: "512M"
            - name: JAVA_MAX_MEM
              value: "2048M"
          ports:
            - name: ssh
              containerPort: {{ .Values.OpenNMS.Minion.SshPort }}
            - name: snmp
              containerPort: {{ .Values.OpenNMS.Minion.SnmpPort }}
              protocol: UDP
            - name: syslog
              containerPort: {{ .Values.OpenNMS.Minion.SyslogPort }}
              protocol: UDP
#          livenessProbe: #todo this needs to be added
#            exec:
#              command: ["/health.sh"]
#            initialDelaySeconds: 30
#            periodSeconds: 30
#            timeoutSeconds: 20
#            failureThreshold: 3
          volumeMounts:
            - name: minion-config-volume
              mountPath: "/opt/minion/minion-config.yaml"
              subPath: "minion-config.yaml"
          resources:
            limits:
              cpu: "{{ .Values.OpenNMS.Minion.Resources.Limits.Cpu }}"
              memory: "{{ .Values.OpenNMS.Minion.Resources.Limits.Memory }}"
            requests:
              cpu: "{{ .Values.OpenNMS.Minion.Resources.Requests.Cpu }}"
              memory: "{{ .Values.OpenNMS.Minion.Resources.Requests.Memory }}"