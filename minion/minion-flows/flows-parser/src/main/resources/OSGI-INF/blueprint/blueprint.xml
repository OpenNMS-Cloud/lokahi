<blueprint
    xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
    xsi:schemaLocation="
                http://www.osgi.org/xmlns/blueprint/v1.0.0 https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <reference id="messageDispatcherFactory"
               interface="org.opennms.horizon.shared.ipc.sink.api.MessageDispatcherFactory"/>

    <reference id="identity" interface="org.opennms.horizon.shared.ipc.rpc.IpcIdentity"/>

    <bean id="dnsResolver" class="org.opennms.horizon.minion.flows.parser.factory.dnsresolver.NettyDnsResolver"
          init-method="init" destroy-method="destroy">
        <argument index="0" ref="metricRegistry"/>
    </bean>
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry"/>
    <service ref="metricRegistry" interface="com.codahale.metrics.MetricSet">
        <service-properties>
            <entry key="name" value="Netty DNS Resolver"/>
            <entry key="description" value="Netty DNS resolution metrics"/>
        </service-properties>
    </service>

    <bean id="telemetryRegistry" class="org.opennms.horizon.minion.flows.parser.TelemetryRegistryImpl">
        <argument ref="netflow9UdpParserFactory"/>
        <argument ref="messageDispatcherFactory"/>
        <argument ref="flowSinkModule"/>
    </bean>
    <bean id="flowSinkModule" class="org.opennms.horizon.minion.flows.parser.FlowSinkModule" >
        <argument ref="identity" />
    </bean>

    <cm:property-placeholder id="identityProperties" persistent-id="org.horizon.identity" update-strategy="reload"
                             placeholder-prefix="$[" placeholder-suffix="]">
        <cm:default-properties>
            <cm:property name="id" value="UNKNOWN"/>
            <cm:property name="location" value="Default"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Netflow 9 UDP Parser Factory -->
    <bean id="netflow9UdpParserFactory"
          class="org.opennms.horizon.minion.flows.parser.factory.Netflow9UdpParserFactory">
        <argument ref="telemetryRegistry"/>
        <argument ref="dnsResolver"/>
        <argument ref="flowSinkModule"/>
    </bean>
    <service ref="netflow9UdpParserFactory" interface="org.opennms.horizon.minion.flows.parser.factory.ParserFactory">
    </service>

    <!-- Ipfix TCP Parser Factory -->
    <bean id="ipfixTcpParserFactory"
          class="org.opennms.horizon.minion.flows.parser.factory.IpfixTcpParserFactory">
        <argument ref="telemetryRegistry"/>
        <argument ref="dnsResolver"/>
        <argument ref="flowSinkModule"/>
    </bean>

    <bean id="listenerHolder" class="org.opennms.horizon.minion.flows.parser.ListenerHolder"/>

    <!-- UDP Listener Factory -->
    <bean id="udpListenerFactory" class="org.opennms.horizon.minion.flows.listeners.factory.UdpListenerFactory">
        <argument ref="telemetryRegistry"/>
    </bean>

    <!-- TCP Listener Factory -->
    <bean id="tcpListenerFactory" class="org.opennms.horizon.minion.flows.listeners.factory.TcpListenerFactory">
        <argument ref="telemetryRegistry"/>
    </bean>

    <bean id="configManager" class="org.opennms.horizon.minion.flows.parser.ConfigManager">
        <argument ref="messageDispatcherFactory"/>
        <argument ref="identity"/>
        <argument ref="listenerHolder"/>
        <argument ref="udpListenerFactory"/>
        <argument ref="tcpListenerFactory"/>
    </bean>

    <service ref="configManager" interface="org.opennms.horizon.minion.plugin.api.ListenerFactory">
        <service-properties>
            <entry key="listener.name" value="flows.parsers.config"/>
        </service-properties>
    </service>

</blueprint>
