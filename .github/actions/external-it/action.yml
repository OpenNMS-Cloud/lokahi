name: 'Test components in Kubernetes cluster'
description: 'This implements external integration test for all components. This is done in kubernetes cluster deployed in the runner.'
inputs:
  dir-location:
    description: 'The dir containing the change.'
    required: true
    default: 'none'

runs:
  using: "composite"
  steps:
    - name: Init
      run: |

        echo "For init - placeholder"

      shell: bash

    - name: Create & Setup Cluster
      run: |

        # Delete if exists from previous failed run.
        kind delete clusters kind
        
        # Setup localhost DNS
        sudo echo "127.0.0.1 onmshs" | sudo tee -a /etc/hosts

        # Build cluster with Horizon Stream installed.
        ./install-local.sh custom-images onmshs

      shell: bash

    - name: Setup & Run Cucumber Tests
      run: |

        # Cucumber test
        cd ${{ inputs.dir-location }}

        ###--- kubectl --context kind-kind -n hs-instance port-forward --pod-running-timeout 1s services/ingress-nginx-controller 8123:80 &
        kubectl logs -f --ignore-errors=true -l appdomain=opennms --max-log-requests 20 &

        # Core takes some time after ready status true before it is setup and
        # has the minion coming in.
        echo "Waiting for OpenNMS Horizon Core to start completely..."
        ###--- sleep 500
        sleep 120

        mvn install
        INGRESS_BASE_URL=https://onmshs
        KEYCLOAK_BASE_URL=https://onmshs/auth
        KEYCLOAK_REALM=opennms
        KEYCLOAK_USERNAME=admin
        KEYCLOAK_PASSWORD=admin
        KEYCLOAK_CLIENT_ID=horizon-stream
        export INGRESS_BASE_URL KEYCLOAK_BASE_URL KEYCLOAK_REALM KEYCLOAK_USERNAME KEYCLOAK_PASSWORD KEYCLOAK_CLIENT_ID
        PROJECT_VERSION="$(mvn -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive -q org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)"
        java -jar "external-horizon-stream-it/target/external-horizon-stream-it-${PROJECT_VERSION}.jar"

        ## If fail, exit which kills the ci-cd workflow.
        ##for i in $(jq '.[0].elements[].steps[].result.status' external-it/external-horizon-stream-it/cucumber.reports/cucumber-report.json);do
        ##  if [[ $i != '"passed"' ]];then
        ##    exit;
        ##  fi
        ##done

      shell: bash

    - name: Cleanup
      if: ${{ always() }}
      run: kind delete clusters kind
      shell: bash
