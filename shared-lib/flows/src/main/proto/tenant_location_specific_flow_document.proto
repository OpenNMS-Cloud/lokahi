syntax = "proto3";

option go_package = "github.com/OpenNMS-Cloud/flows/api/flows/document";
option java_multiple_files = true;
option java_package = "org.opennms.horizon.flows.document";
package org.opennms.horizon.flows.document;

import "google/protobuf/wrappers.proto";
import "flow_document.proto";

message TenantLocationSpecificFlowDocument {
    // Timestamp: time when the flow has been received from the system
    uint64 timestamp = 1; // Flow timestamp in milliseconds.

    google.protobuf.UInt64Value num_bytes = 2; // Number of bytes transferred in the flow
    Direction direction = 3; // Direction of the flow (egress vs ingress)
    // Destination address. Used in enrichment phase to calculate NodeInfo
    string dst_address = 4;
    // Destination address hostname. Calculated during enrichment phase
    string dst_hostname = 5;
    google.protobuf.UInt64Value dst_as = 6; // Destination autonomous system (AS).
    google.protobuf.UInt32Value dst_mask_len = 7; // The number of contiguous bits in the source address subnet mask.
    google.protobuf.UInt32Value dst_port = 8; // Destination port.
    google.protobuf.UInt32Value engine_id = 9; // Slot number of the flow-switching engine.
    google.protobuf.UInt32Value engine_type = 10; // Type of flow-switching engine.
    // Delta switched Value minus detected skew
    google.protobuf.UInt64Value delta_switched = 11; // Unix timestamp in ms at which the previous exported packet-
                                                     // -associated with this flow was switched.
    // First switched Value minus detected skew
    google.protobuf.UInt64Value first_switched = 12; // Unix timestamp in ms at which the first packet-
                                                     // -associated with this flow was switched.
    // Last switched Value minus detected skew
    google.protobuf.UInt64Value last_switched = 13;
    google.protobuf.UInt32Value num_flow_records = 14; // Number of flow records in the associated packet.
    google.protobuf.UInt64Value num_packets = 15; // Number of packets in the flow.
    google.protobuf.UInt64Value flow_seq_num = 16; // Flow packet sequence number.
    google.protobuf.UInt32Value input_snmp_ifindex = 17; // Input SNMP ifIndex.
    google.protobuf.UInt32Value output_snmp_ifindex = 18; // Output SNMP ifIndex.
    google.protobuf.UInt32Value ip_protocol_version = 19; // IPv4 vs IPv6.
    string next_hop_address = 20; // Next hop IpAddress.
    string next_hop_hostname = 21; // Next hop hostname.
    google.protobuf.UInt32Value protocol = 22; // IP protocol number i.e 6 for TCP, 17 for UDP
    SamplingAlgorithm sampling_algorithm = 23; // Sampling algorithm ID.
    google.protobuf.DoubleValue sampling_interval = 24; // Sampling interval.
    // Source address. Used in enrichment phase to calculate NodeInfo
    string src_address = 26;
    // Source hostname. Calculated during enrichment phase
    string src_hostname = 27;
    google.protobuf.UInt64Value src_as = 28; // Source AS number.
    google.protobuf.UInt32Value src_mask_len = 29; // The number of contiguous bits in the destination address subnet mask.
    google.protobuf.UInt32Value src_port = 30; // Source port.
    google.protobuf.UInt32Value tcp_flags = 31; // TCP Flags.
    google.protobuf.UInt32Value tos = 32; // TOS
    NetflowVersion netflow_version = 33; // Netflow version
    google.protobuf.UInt32Value vlan = 34; // VLAN ID.
    // Calculated during enrichment phase from 'location', 'dstAddress', 'tenantId' fields
    NodeInfo src_node = 35;
    // Calculated during enrichment phase from 'location', 'exporterAddress', 'tenantId' fields
    NodeInfo exporter_node = 36;
    // Calculated during enrichment phase from 'location', 'srcAddress', 'tenantId' fields
    NodeInfo dest_node = 37;
    // Calculated during enrichment phase
    string application = 38;
    string host = 39;


    // The user can specify where the node / minion is
    string location = 40;


    // Determined during enrichment phase from SrcAddress field
    Locality src_locality = 41;
    // Determined during enrichment phase from DstAddress field
    Locality dst_locality = 42;
    // Determined during enrichment phase from DstLocality and SrcLocality field
    Locality flow_locality = 43;
    reserved 44; // former convo_key

    // This field stores the detected skew, that is the difference between timestamp and received_at field
    // If received time and export time differ too much, correct all timestamps by the difference
    // Not needed to be persisted
    uint64 clock_correction = 45;// Applied clock correction im milliseconds.
    google.protobuf.UInt32Value dscp = 46; // DSCP; upper 6 bits of TOS
    google.protobuf.UInt32Value ecn = 47; // ECN; lower 2 bits of TOS


    string tenant_id = 48; // tenant id for multi-tenancy life


    string exporter_address = 49; // Raw sending IP of the exporter
    google.protobuf.UInt32Value exporter_port = 50; // Raw sending port of the exporter
    string exporter_identifier = 52; // Protocol specific exporter identifier

    // Flow received at in milliseconds. for clock skew detection
    // Not needed to be persisted
    uint64 received_at = 53;
}

message TenantLocationSpecificFlowDocumentLog {
  string tenant_id = 1;
  string location = 2;
  string system_id = 3;

  repeated TenantLocationSpecificFlowDocument message = 4;
}
