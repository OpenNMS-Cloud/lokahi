<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
           xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
">

  <cm:property-placeholder id="serverProperties" persistent-id="org.opennms.core.ipc.grpc.server"
                           update-strategy="reload">
    <cm:default-properties>
      <cm:property name="port" value="8990"/>
      <cm:property name="startDelay" value="PT60S"/>
      <cm:property name="org.opennms.core.ipc.rpc.ttl" value="20000"/>
    </cm:default-properties>
  </cm:property-placeholder>

  <reference id="configAdmin" interface="org.osgi.service.cm.ConfigurationAdmin" />
  <reference id="identity" interface="org.opennms.horizon.core.identity.Identity"/>
  <reference id="tracerRegistry" interface="org.opennms.core.tracing.api.TracerRegistry"/>

  <bean id="threadExecutorManager" class="org.opennms.core.ipc.grpc.server.manager.util.ThreadExecutorManager"/>

  <bean id="grpcIpcServer" class="org.opennms.core.grpc.common.GrpcIpcServerBuilder">
    <argument ref="configAdmin"/>
    <argument value="${port}"/>
    <argument value="${startDelay}"/>
  </bean>
  <service ref="grpcIpcServer" interface="org.opennms.core.grpc.common.GrpcIpcServer"/>

  <bean id="locationIndependentRpcClientFactory" class="org.opennms.core.ipc.grpc.server.manager.rpc.LocationIndependentRpcClientFactoryImpl">
    <property name="serverIdentity" ref="identity"/>
    <property name="tracerRegistry" ref="tracerRegistry"/>
    <property name="rpcMetrics" ref="grpcRpcMetrics"/>
    <property name="rpcConnectionTracker" ref="rpcConnectionTracker"/>
    <property name="ttl" value="${org.opennms.core.ipc.rpc.ttl}"/>
  </bean>

  <bean id="rpcConnectionTracker" class="org.opennms.core.ipc.grpc.server.manager.impl.RpcConnectionTrackerImpl" />
  <bean id="rpcRequestTracker" class="org.opennms.core.ipc.grpc.server.manager.impl.RpcRequestTrackerImpl"/>

  <bean id="rpcRequestTimeoutManager" class="org.opennms.core.ipc.grpc.server.manager.impl.RpcRequestTimeoutManagerImpl" init-method="start" destroy-method="shutdown">
    <property name="rpcTimeoutExecutor"><bean factory-ref="threadExecutorManager" factory-method="getRpcTimeoutExecutor"/></property>
    <property name="responseHandlerExecutor"><bean factory-ref="threadExecutorManager" factory-method="getResponseHandlerExecutor"/></property>
  </bean>

  <bean id="minionRpcStreamConnectionManager" class="org.opennms.core.ipc.grpc.server.manager.rpcstreaming.impl.MinionRpcStreamConnectionManagerImpl" destroy-method="shutdown">
    <argument ref="rpcConnectionTracker"/>
    <argument ref="rpcRequestTracker"/>
    <argument><bean factory-ref="threadExecutorManager" factory-method="getResponseHandlerExecutor"/></argument>
  </bean>

  <bean id="grpcServer" class="org.opennms.core.ipc.grpc.server.OpennmsGrpcServer"
        init-method="start" destroy-method="shutdown">

    <argument ref="grpcIpcServer"/>

    <property name="identity" ref="identity"/>
    <property name="rpcMetrics" ref="grpcRpcMetrics"/>
    <property name="sinkMetrics" ref="grpcSinkMetrics"/>

    <property name="rpcRequestTracker" ref="rpcRequestTracker"/>
    <property name="rpcConnectionTracker" ref="rpcConnectionTracker"/>
    <property name="locationIndependentRpcClientFactory" ref="locationIndependentRpcClientFactory"/>
    <property name="minionRpcStreamConnectionManager" ref="minionRpcStreamConnectionManager"/>
    <property name="rpcRequestTimeoutManager" ref="rpcRequestTimeoutManager"/>
  </bean>

  <service ref="grpcServer" interface="org.opennms.horizon.ipc.sink.api.MessageConsumerManager">
    <service-properties>
      <entry key="strategy" value="grpc"/>
      <entry key="registration.export" value="true"/>
    </service-properties>
  </service>

  <service ref="grpcServer" interface="org.opennms.horizon.ipc.rpc.api.RpcClientFactory">
    <service-properties>
      <entry key="strategy" value="grpc"/>
      <entry key="registration.export" value="true"/>
    </service-properties>
  </service>

  <!-- RPC Metrics -->
  <bean id="grpcRpcMetrics" class="com.codahale.metrics.MetricRegistry"/>
  <service ref="grpcRpcMetrics" interface="com.codahale.metrics.MetricSet">
    <service-properties>
      <entry key="name" value="gRPC RPC"/>
      <entry key="description" value="Metrics related to RPC messages between OpenNMS and Minion"/>
    </service-properties>
  </service>

  <!-- Sink Metrics -->
  <bean id="grpcSinkMetrics" class="com.codahale.metrics.MetricRegistry"/>
  <service ref="grpcSinkMetrics" interface="com.codahale.metrics.MetricSet">
    <service-properties>
      <entry key="name" value="gRPC Sink Consumer"/>
      <entry key="description" value="Sink consumer Metrics on OpenNMS"/>
    </service-properties>
  </service>
</blueprint>
