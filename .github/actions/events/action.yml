name: 'Build and test Events'
description: 'This implements unit and built-time integration tests on Events.'
inputs:
  enable-sonar-scan:
    description: 'Enables code scanning with SonarCloud.'
    required: true
  github-token:
    description: 'GITHUB_TOKEN secret for the workflow so SonarCloud can get PR information. Required if enable-sonar-scan is true.'
    required: false
  sonar-token:
    description: 'SONAR_TOKEN secret to authenticate job with SonarCloud. Required if enable-sonar-scan is true.'
    required: false
runs:
  using: "composite"
  steps:
    - name: Cache SonarCloud packages
      if: ${{ inputs.enable-sonar-scan == 'true' }}
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-${{ runner.arch }}-sonar

    - name: build-image
      if: ${{ inputs.enable-sonar-scan == 'true' }}
      run: |

        mvn -Pcoverage install jib:dockerBuild \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY

      shell: bash
      working-directory: events
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_PROJECT_KEY: 'opennms_horizon-stream_events'

    - name: build-image
      if: ${{ inputs.enable-sonar-scan == 'false' }}
      run: |

        mvn install jib:dockerBuild

      shell: bash
      working-directory: events
